<Type Name="IconCriterion" FullName="Microsoft.Office.Interop.Excel.IconCriterion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aeac399c7630a815bc10a17585c99b77cfcc3ff7" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20579294" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IconCriterion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconCriterion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconCriterion" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconCriterion" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconCriterion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024499-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表图标集中单个图标的条件。此条件指定了值的范围以及与图标集条件格式规则中的图标关联的阈值类型。</summary>
    <remarks>
      <para>所有图标集条件格式的条件都包含在<see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />集合。 您可以通过传递到集合的索引来访问集合中的每个<b>IconCriterion</b>对象。 请参阅详细信息的示例。</para>
      <para></para>
    </remarks>
    <example>
      <para>以下代码示例创建了一个代表测试分数的数字范围，然后对该范围应用了图标集条件格式规则。图标集的类型将从默认图标变为五箭头图标集。最后，将阈值类型从百分点修改为硬编码数字。</para>
      <code>&lt;span class="label"&gt;Sub CreateIconSetCF()    Dim cfIconSet As IconSetCondition        'Fill cells with sample data    With ActiveSheet        .Range("C1") = 55        .Range("C2") = 92        .Range("C3") = 88        .Range("C4") = 77        .Range("C5") = 66        .Range("C6") = 93        .Range("C7") = 76        .Range("C8") = 80        .Range("C9") = 79        .Range("C10") = 83        .Range("C11") = 66        .Range("C12") = 74    End With        Range("C1:C12").Select          'Create an icon set conditional format for the created sample data range    Set cfIconSet = Selection.FormatConditions.AddIconSetCondition        'Change the icon set to a five-arrow icon set    cfIconSet.IconSet = ActiveWorkbook.IconSets(xl5Arrows)        'The IconCriterion collection contains all IconCriteria    'By indexing into the collection you can modify each criterion    With cfIconSet.IconCriteria(1)        .Type = xlConditionValueNumber        .Value = 0        .Operator = 7    End With    With cfIconSet.IconCriteria(2)        .Type = xlConditionValueNumber        .Value = 60        .Operator = 7    End With    With cfIconSet.IconCriteria(3)        .Type = xlConditionValueNumber        .Value = 70        .Operator = 7    End With    With cfIconSet.IconCriteria(4)        .Type = xlConditionValueNumber        .Value = 80        .Operator = 7    End With    With cfIconSet.IconCriteria(5)        .Type = xlConditionValueNumber        .Value = 90        .Operator = 7    End With        End Sub&lt;/span&gt;</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlIcon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlIcon Icon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As XlIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlIcon Icon { Microsoft::Office::Interop::Excel::XlIcon get(); void set(Microsoft::Office::Interop::Excel::XlIcon value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图标集条件格式规则中的某个条件的图标。</summary>
        <value>To be added.</value>
        <remarks>
          <para>图标集条件格式规则中，设置图标条件的<b>Icon</b>属性后<see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" />属性更改为<b>xlCustomSet</b>。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值代表条件的阈值。</summary>
        <value>To be added.</value>
        <remarks>
          <para>对于图标集，此属性将为最小阈值返回值“1”，为下一个阈值返回值“2”，依此类推。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置的常量之一，<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />枚举，该常量指定阈值是"大于"或"大于或等于"阈值。</summary>
        <value>To be added.</value>
        <remarks>
          <para>对于图标集条件格式规则，此属性只能设置为以下两个常量之一：<b>xlGreater</b> 或 <b>xlGreaterEqual</b>。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConditionValueTypes Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConditionValueTypes Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlConditionValueTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConditionValueTypes Type { Microsoft::Office::Interop::Excel::XlConditionValueTypes get(); void set(Microsoft::Office::Interop::Excel::XlConditionValueTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConditionValueTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回的常量之一<see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" />枚举，指定如何确定图标集的阈值。 只读。</summary>
        <value>To be added.</value>
        <remarks>
          <para>图标集的阈值类型可以是数字、百分比、公式或百分点值。如果将类型设置为百分点值，将使用 Excel 中的 Percentile 函数确定阈值。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置条件格式中图标的阈值。可读/写 <b>Variant</b> 类型。</summary>
        <value>To be added.</value>
        <remarks>
          <para>您可以设置值才<see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" />的条件格式的属性设置为以下常量之一： <b>xlConditionValueNumber</b>、 <b>xlConditionValuePercent</b>、 <b>xlConditionValuePercentile</b>或<b>xlConditionValueFormula</b>。</para>
          <para>如果阈值的类型是一个公式，则可以作为<b>字符串</b>设置公式。 该公式必须返回单一数字。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>