<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90e19f9871537de3824defd244b85c6255bb7e45" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999620" /></Metadata><TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="32c4d-101">代表已添加到工作簿的 XML 映射。</span><span class="sxs-lookup"><span data-stu-id="32c4d-101">Represents an XML map that has been added to a workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="32c4d-102">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-102">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
      <para><span data-ttu-id="32c4d-103">使用 <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> 集合的方法将 <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> XML 映射添加到工作簿。</span><span class="sxs-lookup"><span data-stu-id="32c4d-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</span></span></para>
      <para><span data-ttu-id="32c4d-104">导入和导出 XML 数据</span><span class="sxs-lookup"><span data-stu-id="32c4d-104">Importing and exporting XML data</span></span></para>
      <para><span data-ttu-id="32c4d-105">使用该方法将 XML 数据从 XML 数据文件导入到映射到指定 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> <b>XmlMap 的单元格中</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="32c4d-106">该方法 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> 导入 String 变量的<b></b>XML 数据。</span><span class="sxs-lookup"><span data-stu-id="32c4d-106">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</span></span></para>
      <para><span data-ttu-id="32c4d-107">使用 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> 该方法从映射到指定 XmlMap 的单元格中 <b>导出数据</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-107">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="32c4d-108">该方法 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> 将 XML 数据导出到 <b>String</b> 变量。</span><span class="sxs-lookup"><span data-stu-id="32c4d-108">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-109"><b>如此</b> 如果每次刷新指定的查询表或 XML 映射时自动调整列宽以最适合。</span><span class="sxs-lookup"><span data-stu-id="32c4d-109"><b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span></span> <span data-ttu-id="32c4d-110">如果每次刷新时列宽不自动调整，则为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-110"><b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span></span> <span data-ttu-id="32c4d-111">默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-111">The default value is <b>True</b>.</span></span> <span data-ttu-id="32c4d-112">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-112">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-113">最大列宽为屏幕宽度的三分之二。</span><span class="sxs-lookup"><span data-stu-id="32c4d-113">The maximum column width is two-thirds the width of the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-114"><b>如果要</b> 在导入新数据或刷新现有连接时将新行附加到绑定到指定架构映射的 XML 列表，则其返回 True。</span><span class="sxs-lookup"><span data-stu-id="32c4d-114"><b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span></span> <span data-ttu-id="32c4d-115"><b>假</b> 如果要覆盖单元格的内容。</span><span class="sxs-lookup"><span data-stu-id="32c4d-115"><b>False</b> if you want to overwrite the contents of cells.</span></span> <span data-ttu-id="32c4d-116">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-116">The default value is <b>False</b>.</span></span> <span data-ttu-id="32c4d-117">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-117">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-118">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-118">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-119">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="32c4d-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="32c4d-120">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-120">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-121">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="32c4d-121">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="32c4d-122">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="32c4d-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="32c4d-123">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-124"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="32c4d-124">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="32c4d-125">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="32c4d-125">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-126">返回 <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> 一个对象，该对象代表与指定架构映射关联的绑定。</span><span class="sxs-lookup"><span data-stu-id="32c4d-126">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span></span> <span data-ttu-id="32c4d-127">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-127">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-128">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-128">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32c4d-129">从工作簿中删除指定的 XML 映射。</span><span class="sxs-lookup"><span data-stu-id="32c4d-129">Removes the specified XML map from the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="32c4d-130">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-130">Required <b>String</b>.</span></span> <span data-ttu-id="32c4d-131">要导出到的 XML 数据文件的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="32c4d-131">The path and filename of the XML data file to export to.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="32c4d-132">必需 <b>布尔值</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-132">Required <b>Boolean</b>.</span></span> <span data-ttu-id="32c4d-133">设置为 <b>True</b> 将覆盖参数中指定的文件 <paramref name="URL" /> （如果该文件存在）。</span><span class="sxs-lookup"><span data-stu-id="32c4d-133">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span></span> <span data-ttu-id="32c4d-134">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-134">The default value if <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="32c4d-135">将映射到指定对象的单元格的内容 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 导出到 XML 数据文件。</span><span class="sxs-lookup"><span data-stu-id="32c4d-135">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span></span> <span data-ttu-id="32c4d-136">返回 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-136">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="32c4d-137">使用 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> 该方法将映射单元格的内容导出到 <b>String</b> 变量。</span><span class="sxs-lookup"><span data-stu-id="32c4d-137">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="32c4d-138">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-138">Required <b>String</b>.</span></span> <span data-ttu-id="32c4d-139">将数据导出到的变量。</span><span class="sxs-lookup"><span data-stu-id="32c4d-139">The variable to export the data to.</span></span></param>
        <summary><span data-ttu-id="32c4d-140">将映射到指定对象的单元格的内容 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 导出到 <b>String</b> 变量。</span><span class="sxs-lookup"><span data-stu-id="32c4d-140">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span></span> <span data-ttu-id="32c4d-141">返回 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-141">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="32c4d-142">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-142">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="32c4d-143">若要将映射单元格的内容导出到 XML 数据文件，请使用 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> 该方法。</span><span class="sxs-lookup"><span data-stu-id="32c4d-143">To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="32c4d-144">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-144">Required <b>String</b>.</span></span> <span data-ttu-id="32c4d-145">要导入的 XML 数据的路径。</span><span class="sxs-lookup"><span data-stu-id="32c4d-145">The path to the XML data to import.</span></span> <span data-ttu-id="32c4d-146">此路径可以通用命名约定 (UNC) 或统一资源定位符 (URL) 格式进行指定。</span><span class="sxs-lookup"><span data-stu-id="32c4d-146">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span></span> <span data-ttu-id="32c4d-147">该文件可以是 XML 数据文件或有效的 Office XML 数据源连接 (.uxdc) 文件。</span><span class="sxs-lookup"><span data-stu-id="32c4d-147">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="32c4d-148">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="32c4d-149">如果设为 <b>True</b>，则覆盖现有数据。</span><span class="sxs-lookup"><span data-stu-id="32c4d-149">Set to <b>True</b> to overwrite existing data.</span></span> <span data-ttu-id="32c4d-150">如果设为 <b>False</b>，则追加到现有数据。</span><span class="sxs-lookup"><span data-stu-id="32c4d-150">Set to <b>False</b> to append to existing data.</span></span> <span data-ttu-id="32c4d-151">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-151">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="32c4d-152">将数据从指定的 XML 数据文件导入到已映射到指定对象的 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 单元格中。</span><span class="sxs-lookup"><span data-stu-id="32c4d-152">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="32c4d-153">返回 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-153">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData"><span data-ttu-id="32c4d-154">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-154">Required <b>String</b>.</span></span> <span data-ttu-id="32c4d-155">包含要导入的 XML 数据的字符串。</span><span class="sxs-lookup"><span data-stu-id="32c4d-155">The string that contains the XML data to import.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="32c4d-156">可选 <b>布尔</b> 值。</span><span class="sxs-lookup"><span data-stu-id="32c4d-156">Optional <b>Boolean</b> value.</span></span> <span data-ttu-id="32c4d-157">指定是否覆盖当前映射到指定 XML 映射的单元格内容。</span><span class="sxs-lookup"><span data-stu-id="32c4d-157">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span></span> <span data-ttu-id="32c4d-158">设置为 <b>True</b> 将覆盖单元格；设置为 <b>False</b> 将数据追加到现有区域。</span><span class="sxs-lookup"><span data-stu-id="32c4d-158">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span></span> <span data-ttu-id="32c4d-159">如果未指定此参数，则 XML 映射属性的当前值将确定是否覆盖单元格 <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="32c4d-159">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span></span></param>
        <summary><span data-ttu-id="32c4d-160">将 STRING 变量 <b>中的</b> XML 数据导入到已映射到指定对象的 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 单元格中。</span><span class="sxs-lookup"><span data-stu-id="32c4d-160">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="32c4d-161">返回一 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> 个常量。</span><span class="sxs-lookup"><span data-stu-id="32c4d-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="32c4d-162">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-162">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="32c4d-163">若要将 XML 数据文件的内容导入映射到特定架构映射的单元格中，请使用 <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> <b>XmlMap 对象</b> 的方法。</span><span class="sxs-lookup"><span data-stu-id="32c4d-163">To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-164">如果 <b>Microsoft</b> Excel 可以使用指定架构映射中的对象导出 XML 数据，并且映射到指定架构映射的所有 XML 列表都可以导出，则返回 <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> True。</span><span class="sxs-lookup"><span data-stu-id="32c4d-164">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span></span> <span data-ttu-id="32c4d-165">只读 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-165">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-166">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-166">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-167">返回或设置用于唯一标识工作簿中的映射的友好名称。</span><span class="sxs-lookup"><span data-stu-id="32c4d-167">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span></span> <span data-ttu-id="32c4d-168">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-168">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-169">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="32c4d-169">Returns the parent object for the specified object.</span></span> <span data-ttu-id="32c4d-170">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-171">返回或设置在指定的 XML 映射被刷新时是否保留筛选。</span><span class="sxs-lookup"><span data-stu-id="32c4d-171">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span></span> <span data-ttu-id="32c4d-172">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-172">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-173">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-173">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-174">刷新架构映射时，如果要保留映射到指定 XML 架构映射的单元格的数字格式，则设为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-174"><b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span></span> <span data-ttu-id="32c4d-175">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-175">The default value is <b>False</b>.</span></span> <span data-ttu-id="32c4d-176">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-176">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-177">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-177">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-178">返回一个 <b>String</b> 类型的数值，该数值表示指定 XML 架构映射的根元素的名称。</span><span class="sxs-lookup"><span data-stu-id="32c4d-178">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map.</span></span> <span data-ttu-id="32c4d-179">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-179">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-180">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-180">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-181">返回 <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> 一个对象，该对象代表指定 XML 架构映射的根元素。</span><span class="sxs-lookup"><span data-stu-id="32c4d-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span></span> <span data-ttu-id="32c4d-182">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-182">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-183">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-183">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-184">如果要在保存工作簿的同时保存指定 XML 架构映射的数据源定义，则设为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="32c4d-184"><b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span></span> <span data-ttu-id="32c4d-185">默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-185">The default value is <b>True</b>.</span></span> <span data-ttu-id="32c4d-186">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-186">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-187">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-187">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-188">返回 <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> 一个集合，该集合代表指定对象 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 包含的架构。</span><span class="sxs-lookup"><span data-stu-id="32c4d-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span></span> <span data-ttu-id="32c4d-189">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-190">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-190">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="32c4d-191">返回的 <b>XmlSchemas</b> 集合中的第一项是用作指定 XML 架构映射的根元素的架构。</span><span class="sxs-lookup"><span data-stu-id="32c4d-191">The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-192">当数据通过指定的 XML 架构映射导入或导出时，返回或设置是否显示详细说明架构有效性验证错误的对话框。</span><span class="sxs-lookup"><span data-stu-id="32c4d-192">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map.</span></span> <span data-ttu-id="32c4d-193">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-193">The default value is <b>False</b>.</span></span> <span data-ttu-id="32c4d-194">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="32c4d-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="32c4d-195">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="32c4d-195">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c4d-196">为指定对象重新连接新 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 连接。</span><span class="sxs-lookup"><span data-stu-id="32c4d-196">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="32c4d-197">只读。</span><span class="sxs-lookup"><span data-stu-id="32c4d-197">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>