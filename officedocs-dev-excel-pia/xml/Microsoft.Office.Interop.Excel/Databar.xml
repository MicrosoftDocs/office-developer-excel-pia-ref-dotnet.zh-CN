<Type Name="Databar" FullName="Microsoft.Office.Interop.Excel.Databar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5af0ef6023d3a14611c655e4cb96ffc4b3bf17c5" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50005647" /></Metadata><TypeSignature Language="C#" Value="public interface Databar" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Databar" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Databar" />
  <TypeSignature Language="VB.NET" Value="Public Interface Databar" />
  <TypeSignature Language="C++ CLI" Value="public interface class Databar" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024496-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71062-p101">代表数据条条件格式规则。通过对范围应用数据条，有助于查看相对于其他单元格的单元格的值。</span><span class="sxs-lookup"><span data-stu-id="71062-p101">Represents a data bar conditional formating rule. Applying a data bar to a range helps you see the value of a cell relative to other cells.</span></span></summary>
    <remarks><para><span data-ttu-id="71062-103">所有条件格式对象都包含在集合对象（集合的子对象 <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> ） <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 中。</span><span class="sxs-lookup"><span data-stu-id="71062-103">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="71062-104">可以使用集合的 or 方法创建数据栏 <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 格式 <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> 规则。</span><span class="sxs-lookup"><span data-stu-id="71062-104">You can create a data bar formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span></para>
      <para><span data-ttu-id="71062-105">使用对象的 and 属性可设置数据范围的最短数据条和最长 <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> 数据条的值。</span><span class="sxs-lookup"><span data-stu-id="71062-105">You use the <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> and <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> properties of the <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object to set the values of the shortest bar and longest bar of a range of data.</span></span> <span data-ttu-id="71062-106">这些属性返回一个对象，您可以在该对象 <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> 中指定阈值的求值方式。</span><span class="sxs-lookup"><span data-stu-id="71062-106">These properites return a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object, in which you can specify how the thresholds are evaluated.</span></span></para>
      <para> </para></remarks>
    <example><para><span data-ttu-id="71062-107">以下示例将创建一个数据范围，然后对该范围应用数据条。</span><span class="sxs-lookup"><span data-stu-id="71062-107">The following example creates a range of data and then applies a data bar to the range.</span></span> <span data-ttu-id="71062-108">您将会发现，由于范围中存在非常低和非常高的值，因此中间值具有长度相似的数据条。</span><span class="sxs-lookup"><span data-stu-id="71062-108">You will notice that because there is an extremely low and high value in the range, the middle values have data bars that are of similiar length.</span></span> <span data-ttu-id="71062-109">为了解除中间值的界限，示例代码使用对象将阈值计算方法更改为 <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> 百分点。</span><span class="sxs-lookup"><span data-stu-id="71062-109">To disambiguate the middle values, the sample code uses the <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object to change how the thresholds are evaluated to percentiles.</span></span></para></example>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-110">如果不与对象限定符一起使用，则此属性返回一个代表 Excel Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="71062-110">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="71062-111">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="71062-111">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="71062-112">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-112">Read-only.</span></span></summary>
        <value><span data-ttu-id="71062-113"><b>应用程序</b> (请参阅上面的) </span><span class="sxs-lookup"><span data-stu-id="71062-113"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="71062-114">您可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="71062-114">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-115">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象指定应用格式规则的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="71062-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisColor">
      <MemberSignature Language="C#" Value="public object AxisColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AxisColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AxisColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AxisColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-116">获取条件格式为数据条的单元格的轴颜色。</span><span class="sxs-lookup"><span data-stu-id="71062-116">Gets the color of the axis for cells with conditional formatting as data bars.</span></span></summary>
        <value><span data-ttu-id="71062-117">条件格式为数据条的单元格的轴颜色。</span><span class="sxs-lookup"><span data-stu-id="71062-117">The color of the axis for cells with conditional formatting as data bars.</span></span></value>
        <remarks><para><span data-ttu-id="71062-118">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-118">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisPosition">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisPosition As XlDataBarAxisPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarAxisPosition AxisPosition { Microsoft::Office::Interop::Excel::XlDataBarAxisPosition get(); void set(Microsoft::Office::Interop::Excel::XlDataBarAxisPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarAxisPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-119">获取或设置由条件格式规则指定的数据条的轴的位置。</span><span class="sxs-lookup"><span data-stu-id="71062-119">Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.</span></span></summary>
        <value><span data-ttu-id="71062-120">由条件格式规则指定的数据条的轴位置。</span><span class="sxs-lookup"><span data-stu-id="71062-120">The position of the axis of the data bars specified by a conditional formatting rule.</span></span></value>
        <remarks><para><span data-ttu-id="71062-121">读/写。</span><span class="sxs-lookup"><span data-stu-id="71062-121">Read/write.</span></span></para>
          <para><span data-ttu-id="71062-122">数据条的轴仅在该属性为或时显示，并且当数据条条件格式规则指定的值范围中出现负 <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" /> 值时。</span><span class="sxs-lookup"><span data-stu-id="71062-122">The axis for data bars is displayed only when the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is either <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" />, and when there are negative values in the range of values specified with a data bar conditional formatting rule.</span></span> <span data-ttu-id="71062-123">该属性的 <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> 默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> 。</span><span class="sxs-lookup"><span data-stu-id="71062-123">The default value for the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BarBorder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataBarBorder BarBorder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataBarBorder BarBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarBorder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarBorder As DataBarBorder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataBarBorder ^ BarBorder { Microsoft::Office::Interop::Excel::DataBarBorder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataBarBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-124">获取一个对象，该对象指定数据栏的边框。</span><span class="sxs-lookup"><span data-stu-id="71062-124">Gets an object that specifies the border of a data bar.</span></span></summary>
        <value><span data-ttu-id="71062-125">一个指定数据条边框的对象。</span><span class="sxs-lookup"><span data-stu-id="71062-125">An object that specifies the border of a data bar.</span></span></value>
        <remarks><para><span data-ttu-id="71062-126">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-126">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BarColor">
      <MemberSignature Language="C#" Value="public object BarColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BarColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BarColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-127">返回一个对象，该对象可用于修改数据条条件 <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> 格式中的条形图颜色。</span><span class="sxs-lookup"><span data-stu-id="71062-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to modify the color of the bars in a data bar conditional format.</span></span></summary>
        <value><span data-ttu-id="71062-128"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="71062-128"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarFillType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" />
      <MemberSignature Language="VB.NET" Value="Public Property BarFillType As XlDataBarFillType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarFillType BarFillType { Microsoft::Office::Interop::Excel::XlDataBarFillType get(); void set(Microsoft::Office::Interop::Excel::XlDataBarFillType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarFillType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-129">获取或设置如何使用颜色填充数据栏。</span><span class="sxs-lookup"><span data-stu-id="71062-129">Gets or sets how a data bar is filled with color.</span></span></summary>
        <value><span data-ttu-id="71062-130">指定如何使用颜色填充数据条。</span><span class="sxs-lookup"><span data-stu-id="71062-130">Specifies how a data bar is filled with color.</span></span></value>
        <remarks><para><span data-ttu-id="71062-131">读/写。</span><span class="sxs-lookup"><span data-stu-id="71062-131">Read/write.</span></span></para>
          <para><span data-ttu-id="71062-132">该属性的 <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> 默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" /> 。</span><span class="sxs-lookup"><span data-stu-id="71062-132">The default value of the <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-133">返回枚举中的 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 一个常量，该常量指示创建此对象时的应用程序。</span><span class="sxs-lookup"><span data-stu-id="71062-133">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="71062-134">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-134">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="71062-135">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="71062-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="71062-136">该属性设计为在 Microsoft Excel for the Macintosh 中使用，其中每个应用程序都有 <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> 一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="71062-136">The <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="71062-137">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="71062-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71062-138">删除指定的条件格式规则对象。</span><span class="sxs-lookup"><span data-stu-id="71062-138">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public int Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Direction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-139">获取或设置数据条的显示方向。</span><span class="sxs-lookup"><span data-stu-id="71062-139">Gets or sets the direction the databar is displayed.</span></span></summary>
        <value><span data-ttu-id="71062-140">数据栏的显示方向。</span><span class="sxs-lookup"><span data-stu-id="71062-140">The direction the databar is displayed.</span></span></value>
        <remarks><para><span data-ttu-id="71062-141">读/写。</span><span class="sxs-lookup"><span data-stu-id="71062-141">Read/write.</span></span></para>
          <para><span data-ttu-id="71062-142">可以是下列项之一：、 (从左到右) 或 (从右 <see cref="T:Microsoft.Office.Interop.Excel.Constants" /> <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" /> <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> 到左) 。</span><span class="sxs-lookup"><span data-stu-id="71062-142">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.Constants" />: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />, <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (left-to-right), or <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (right-to-left).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-143">返回或设置一个代表公式（该公式确定将对图标集应用的值）的 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="71062-143">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span></span></summary>
        <value><span data-ttu-id="71062-144"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="71062-144"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-p109">此属性用于限制将显示条件格式的值的范围。一种典型的情形是您具有一个包含正值和负值的数字范围。您可能需要为此数字范围创建多个条件格式，一个用于正值，另一个用于负值。</span><span class="sxs-lookup"><span data-stu-id="71062-p109">This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MaxPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MaxPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MaxPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-148">返回一个对象，该对象指定如何计算数据条条件格式 <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> 的最长数据条。</span><span class="sxs-lookup"><span data-stu-id="71062-148">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /></value>
        <remarks><para><span data-ttu-id="71062-149">可以使用 and 属性指定评估的类型和 <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> 值。</span><span class="sxs-lookup"><span data-stu-id="71062-149">You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MinPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MinPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MinPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-150">返回一个对象，该对象指定如何计算数据条条件格式 <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> 的最短数据条。</span><span class="sxs-lookup"><span data-stu-id="71062-150">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /></value>
        <remarks><para><span data-ttu-id="71062-151">可以使用 and 属性指定评估的类型和 <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> 值。</span><span class="sxs-lookup"><span data-stu-id="71062-151">You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="71062-152">此格式规则将应用于的区域。</span><span class="sxs-lookup"><span data-stu-id="71062-152">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="71062-153">设置此格式规则所应用于的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="71062-153">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="71062-154">区域必须采用 A1 引用样式，并且完全包含在作为集合父项的 <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> 工作表中。</span><span class="sxs-lookup"><span data-stu-id="71062-154">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="71062-155">可包括区域操作符（冒号）、相交区域操作符（空格）或合并区域操作符（逗号）。</span><span class="sxs-lookup"><span data-stu-id="71062-155">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="71062-156">也可以使用货币符号，但会被忽略。</span><span class="sxs-lookup"><span data-stu-id="71062-156">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="71062-157">您也可以在区域的任意部分中使用局部定义名称，但该名称必须使用宏语言。</span><span class="sxs-lookup"><span data-stu-id="71062-157">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeBarFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.NegativeBarFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativeBarFormat As NegativeBarFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::NegativeBarFormat ^ NegativeBarFormat { Microsoft::Office::Interop::Excel::NegativeBarFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.NegativeBarFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-158">获取 <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> 与数据条条件格式规则关联的对象。</span><span class="sxs-lookup"><span data-stu-id="71062-158">Gets the <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span></span></summary>
        <value><span data-ttu-id="71062-159"><see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" />与数据条条件格式规则关联的对象。</span><span class="sxs-lookup"><span data-stu-id="71062-159">The <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span></span></value>
        <remarks><para><span data-ttu-id="71062-160">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-161">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="71062-161">Returns the parent object for the specified object.</span></span> <span data-ttu-id="71062-162">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-162">Read-only.</span></span></summary>
        <value><span data-ttu-id="71062-163"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="71062-163"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMax">
      <MemberSignature Language="C#" Value="public int PercentMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMax" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMax" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-164">返回或设置 <b>一个 Integer</b> 值，该值以单元格宽度的百分比指定最长数据条的长度。</span><span class="sxs-lookup"><span data-stu-id="71062-164">Returns or sets a <b>Integer</b> value that specifies the length of the longest data bar as a percentage of cell width.</span></span></summary>
        <value><span data-ttu-id="71062-165"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="71062-165"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-166">该值必须是介于 0 和 100 之间的整数。</span><span class="sxs-lookup"><span data-stu-id="71062-166">The value must be a whole number between 0 and 100.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMin">
      <MemberSignature Language="C#" Value="public int PercentMin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMin" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMin { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-167">返回或设置 <b>一个 Integer</b> 值，该值以单元格宽度的百分比指定最短数据条的长度。</span><span class="sxs-lookup"><span data-stu-id="71062-167">Returns or sets a <b>Integer</b> value that specifies the length of the shortest data bar as a percentage of cell width.</span></span></summary>
        <value><span data-ttu-id="71062-168"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="71062-168"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-169">该值必须是介于 0 和 100 之间的整数。</span><span class="sxs-lookup"><span data-stu-id="71062-169">The value must be a whole number between 0 and 100.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-p112">返回或设置条件格式规则的优先级值。当工作表中存在多个条件格式规则时，优先级确定求值的顺序。</span><span class="sxs-lookup"><span data-stu-id="71062-p112">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="71062-172"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="71062-172"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-p113">设置优先级时，值必须为介于 1 和工作表上条件格式规则总数之间的正整数。对于工作表上的所有规则，优先级必须为唯一值，因此，如果更改指定条件格式规则的优先级，将可能会导致工作表上其他规则的优先级值移位。</span><span class="sxs-lookup"><span data-stu-id="71062-p113">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-175">返回一个 <b>Boolean</b> 值，指明是否将条件格式应用于数据透视表图表。</span><span class="sxs-lookup"><span data-stu-id="71062-175">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="71062-176">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-176">Read-only.</span></span></summary>
        <value><span data-ttu-id="71062-177"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="71062-177"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-178">返回或设置枚举的常量之一，该常量确定条件格式应用于数据透视表 <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> 图表时的范围。</span><span class="sxs-lookup"><span data-stu-id="71062-178">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="71062-179">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> ，它使用属性设置 <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="71062-179">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71062-180">将此条件格式规则的优先级值设置为“1”，以便在工作表上的所有其他规则之前计算此规则。</span><span class="sxs-lookup"><span data-stu-id="71062-180">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="71062-181">当工作表中有多个条件格式规则时，如果之前未将此规则设置为优先级“1”，此方法将导致工作表上的所有其他现有规则的优先级都增加 1。</span><span class="sxs-lookup"><span data-stu-id="71062-181">When you have multiple conditional formatting rules  in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para><span data-ttu-id="71062-182">
            <b>注意</b>：条件格式规则的优先级级别基于工作表级别应用。</span><span class="sxs-lookup"><span data-stu-id="71062-182">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71062-183">为此条件格式规则设置求值顺序，以便在工作表上的所有其他规则之后计算此规则。</span><span class="sxs-lookup"><span data-stu-id="71062-183">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="71062-184">优先级实际值值将等于工作表上条件格式规则的总数。</span><span class="sxs-lookup"><span data-stu-id="71062-184">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="71062-185">当工作表中有多个条件格式规则时，此方法将导致优先级值大于此规则的规则的优先级增加 1。</span><span class="sxs-lookup"><span data-stu-id="71062-185">When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para><span data-ttu-id="71062-186">
            <b>注意</b>：条件格式规则的优先级级别基于工作表级别应用。</span><span class="sxs-lookup"><span data-stu-id="71062-186">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValue">
      <MemberSignature Language="C#" Value="public bool ShowValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ShowValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-187">返回或设置一个 <b>Boolean</b> 值，该值指定数据条条件格式应用于区域时是否显示单元格中的值。</span><span class="sxs-lookup"><span data-stu-id="71062-187">Returns or sets a <b>Boolean</b> value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.</span></span></summary>
        <value><span data-ttu-id="71062-188"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="71062-188"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-189">返回或设置一个 <b>Boolean</b> 值，该值确定在当前规则的计算结果为 <b>True</b> 时是否应计算单元格上的其他格式规则。</span><span class="sxs-lookup"><span data-stu-id="71062-189">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="71062-190"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="71062-190"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-191">为了支持向后兼容性，此属性的默认值是 <b>False</b>，而这与在用户界面中创建的格式规则的行为相反。</span><span class="sxs-lookup"><span data-stu-id="71062-191">To support backward compatibility, the default value for this property is <b>False</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71062-192">返回枚举的常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> ，该常量指定条件格式的类型。</span><span class="sxs-lookup"><span data-stu-id="71062-192">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="71062-193">只读。</span><span class="sxs-lookup"><span data-stu-id="71062-193">Read-only.</span></span></summary>
        <value><span data-ttu-id="71062-194"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="71062-194"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="71062-195">此属性将始终返回一 <b>个整数</b> 值"4"，它等效 <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" /> 于 。</span><span class="sxs-lookup"><span data-stu-id="71062-195">This property will always return a <b>Integer</b> value of "4", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>