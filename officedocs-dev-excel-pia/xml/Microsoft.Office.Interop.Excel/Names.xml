<Type Name="Names" FullName="Microsoft.Office.Interop.Excel.Names">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25942f5647980d40fd5f4e153bf99810065d6715" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50011429" /></Metadata><TypeSignature Language="C#" Value="public interface Names : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Names implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Names" />
  <TypeSignature Language="VB.NET" Value="Public Interface Names&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Names : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4832d-101">应用程序或工作簿中 <see cref="T:Microsoft.Office.Interop.Excel.Name" /> 所有对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4832d-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objects in the application or workbook.</span></span> <span data-ttu-id="4832d-102">每一个 <b>Name</b> 对象都代表一个单元格区域的定义名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-102">Each <b>Name</b> object represents a defined name for a range of cells.</span></span> <span data-ttu-id="4832d-103">名称可以是内置名称（如“Database”、“Print_Area”和“Auto_Open”）或自定义名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-103">Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</span></span></summary>
    <remarks><para><span data-ttu-id="4832d-104">使用 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> 该属性可返回 <b>Names</b> 集合。</span><span class="sxs-lookup"><span data-stu-id="4832d-104">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> property to return the <b>Names</b> collection.</span></span></para>
      <para><span data-ttu-id="4832d-105">使用 <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 该方法可创建一个名称并将其添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="4832d-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a name and add it to the collection.</span></span> <span data-ttu-id="4832d-106">Add <b></b>方法的参数必须以 A1 样式表示法指定，包括美元符号 <paramref name="RefersTo" /> ($) 适当。</span><span class="sxs-lookup"><span data-stu-id="4832d-106">The <b>Add</b> method's <paramref name="RefersTo" /> argument must be specified in A1-style notation, including dollar signs ($) where appropriate.</span></span> <span data-ttu-id="4832d-107">例如，如果在 Sheet1 上选择了单元格 A10，并且使用参数 <paramref name="RefersTo" /> "=sheet1！A1：B1"， the new name actually refers to cells A10：B10 (because you specified a relative reference) .</span><span class="sxs-lookup"><span data-stu-id="4832d-107">For example, if cell A10 is selected on Sheet1 and you define a name by using the <paramref name="RefersTo" /> argument "=sheet1!A1:B1", the new name actually refers to cells A10:B10 (because you specified a relative reference).</span></span> <span data-ttu-id="4832d-108">若要指定绝对引用，请使用“=Sheet1!$A$1:$B$1”。</span><span class="sxs-lookup"><span data-stu-id="4832d-108">To specify an absolute reference, use "=sheet1!$A$1:$B$1".</span></span></para>
      <para><span data-ttu-id="4832d-109">使用 <b>名称</b> <paramref name="index" /> () ，其中的名称 <paramref name="index" /> 索引号或定义的名称，返回单个 <b>名称</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="4832d-109">Use <b>Names</b>(<paramref name="index" />), where <paramref name="index" /> is the name index number or defined name, to return a single <b>Name</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name _Default (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name _Default([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <param name="IndexLocal">To be added.</param>
        <param name="RefersTo">To be added.</param>
        <summary><span data-ttu-id="4832d-110">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="4832d-110">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Add (object Name, object RefersTo, object Visible, object MacroType, object ShortcutKey, object Category, object NameLocal, object RefersToLocal, object CategoryLocal, object RefersToR1C1, object RefersToR1C1Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Add([in]object Name, [in]object RefersTo, [in]object Visible, [in]object MacroType, [in]object ShortcutKey, [in]object Category, [in]object NameLocal, [in]object RefersToLocal, [in]object CategoryLocal, [in]object RefersToR1C1, [in]object RefersToR1C1Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
        <Parameter Name="MacroType" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="NameLocal" Type="System.Object" />
        <Parameter Name="RefersToLocal" Type="System.Object" />
        <Parameter Name="CategoryLocal" Type="System.Object" />
        <Parameter Name="RefersToR1C1" Type="System.Object" />
        <Parameter Name="RefersToR1C1Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="4832d-111">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-111">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-112">如果 <paramref name="NameLocal" /> 未指定，则必需。</span><span class="sxs-lookup"><span data-stu-id="4832d-112">Required if <paramref name="NameLocal" /> isn't specified.</span></span> <span data-ttu-id="4832d-113">要用作名称的文本。</span><span class="sxs-lookup"><span data-stu-id="4832d-113">The text to use as the name.</span></span> <span data-ttu-id="4832d-114">名称不能包含空格，也不能看起来像单元格引用。</span><span class="sxs-lookup"><span data-stu-id="4832d-114">Names cannot include spaces and cannot look like cell references.</span></span></param>
        <param name="RefersTo"><span data-ttu-id="4832d-115">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-115">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-116">必需，除非指定了其他参数 <paramref name="RefersTo" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="4832d-116">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span></span> <span data-ttu-id="4832d-117">使用 A1 样式表示法 (描述名称) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-117">Describes what the name refers to (using A1-style notation).</span></span> <span data-ttu-id="4832d-118"><b>注意</b> 如果引用不存在，则不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="4832d-118"><b>Note</b> Nothing is returned if the reference does not exist.</span></span></param>
        <param name="Visible"><span data-ttu-id="4832d-119">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-119">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-120"><b>如果为 True，</b> 请正常定义名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-120"><b>True</b> to define the name normally.</span></span> <span data-ttu-id="4832d-121"><b>如果</b> 为 False，将名称定义为隐藏名称 (即，该名称不会显示在"定义名称、粘贴名称"或"已选中"对话框中) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-121"><b>False</b> to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box).</span></span> <span data-ttu-id="4832d-122">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-122">The default value is <b>True</b>.</span></span></param>
        <param name="MacroType"><span data-ttu-id="4832d-123">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-124">宏类型，如下表所示。ValueMeaning1User 定义函数 (<b>Function</b> 过程) 2Macro (也称为 <b>Sub</b> 过程) 3 或 omittedNone (，即名称不引用用户定义的函数或宏) </span><span class="sxs-lookup"><span data-stu-id="4832d-124">The macro type, as shown in the following table.ValueMeaning1User-defined function (<b>Function</b> procedure)2Macro (also known as <b>Sub</b> procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="4832d-125">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-125">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-126">宏快捷键。</span><span class="sxs-lookup"><span data-stu-id="4832d-126">The macro shortcut key.</span></span> <span data-ttu-id="4832d-127">必须是单个字母，例如“z”或“Z”。</span><span class="sxs-lookup"><span data-stu-id="4832d-127">Must be a single letter, such as "z" or "Z".</span></span> <span data-ttu-id="4832d-128">仅适用于命令宏。</span><span class="sxs-lookup"><span data-stu-id="4832d-128">Applies only for command macros.</span></span></param>
        <param name="Category"><span data-ttu-id="4832d-129">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-129">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-130">宏或函数的类别（如果 <paramref name="MacroType" /> 为 1 或 2）。</span><span class="sxs-lookup"><span data-stu-id="4832d-130">The category of the macro or function if <paramref name="MacroType" /> is 1 or 2.</span></span> <span data-ttu-id="4832d-131">该分类在“函数向导”中使用。</span><span class="sxs-lookup"><span data-stu-id="4832d-131">The category is used in the Function Wizard.</span></span> <span data-ttu-id="4832d-132">可以使用从 1 开始 (数字类别来引用现有类别) 也可以按 (宏语言的名称) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-132">Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro).</span></span> <span data-ttu-id="4832d-133">如果指定的类别不存在，Microsoft Excel 将创建新类别。</span><span class="sxs-lookup"><span data-stu-id="4832d-133">Microsoft Excel creates a new category if the specified category doesn't already exist.</span></span></param>
        <param name="NameLocal"><span data-ttu-id="4832d-134">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-134">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-135">如果 <paramref name="Name" /> 未指定，则必需。</span><span class="sxs-lookup"><span data-stu-id="4832d-135">Required if <paramref name="Name" /> isn't specified.</span></span> <span data-ttu-id="4832d-136">要用作用户名的文本 (用户语言) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-136">The text to use as the name (in the language of the user).</span></span> <span data-ttu-id="4832d-137">名称不能包含空格，也不能看起来像单元格引用。</span><span class="sxs-lookup"><span data-stu-id="4832d-137">Names cannot include spaces and cannot look like cell references.</span></span></param>
        <param name="RefersToLocal"><span data-ttu-id="4832d-138">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-139">必需，除非指定了其他参数 <paramref name="RefersTo" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="4832d-139">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span></span> <span data-ttu-id="4832d-140">使用 A1 样式表示法 (表示法，描述名称以用户语言) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-140">Describes what the name refers to (in the language of the user, using A1-style notation).</span></span></param>
        <param name="CategoryLocal"><span data-ttu-id="4832d-141">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-141">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-142">如果 <paramref name="Category" /> 未指定，则必需。</span><span class="sxs-lookup"><span data-stu-id="4832d-142">Required if <paramref name="Category" /> isn't specified.</span></span> <span data-ttu-id="4832d-143">用用户语言标识自定义函数类别的文本。</span><span class="sxs-lookup"><span data-stu-id="4832d-143">Text identifying the category of a custom function in the language of the user.</span></span></param>
        <param name="RefersToR1C1"><span data-ttu-id="4832d-144">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-145">必需，除非指定了其他参数 <paramref name="RefersTo" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="4832d-145">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span></span> <span data-ttu-id="4832d-146">介绍使用 R1C1 样式表示法 (引用的名称) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-146">Describes what the name refers to (using R1C1-style notation).</span></span></param>
        <param name="RefersToR1C1Local"><span data-ttu-id="4832d-147">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-147">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-148">必需，除非指定了其他参数 <paramref name="RefersTo" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="4832d-148">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span></span> <span data-ttu-id="4832d-149">使用 R1C1 样式表示法 (表示法，描述该名称以用户语言) 。</span><span class="sxs-lookup"><span data-stu-id="4832d-149">Describes what the name refers to (in the language of the user, using R1C1-style notation).</span></span></param>
        <summary><span data-ttu-id="4832d-150">定义新名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-150">Defines a new name.</span></span> <span data-ttu-id="4832d-151">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Name" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="4832d-151">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4832d-152">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="4832d-152">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4832d-153">返回集合中对象的数目。</span><span class="sxs-lookup"><span data-stu-id="4832d-153">Returns the number of objects in the collection.</span></span> <span data-ttu-id="4832d-154">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-154">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4832d-155">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4832d-155">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="4832d-156">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="4832d-156">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="4832d-157">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</span><span class="sxs-lookup"><span data-stu-id="4832d-157">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="4832d-158"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="4832d-158">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="4832d-159">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="4832d-159">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Item (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Item([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="4832d-160">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-161">要返回的定义名称的名称或编号。</span><span class="sxs-lookup"><span data-stu-id="4832d-161">The name or number of the defined name to be returned.</span></span></param>
        <param name="IndexLocal"><span data-ttu-id="4832d-162">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-162">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-163">以用户语言表示的已定义名称的名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-163">The name of the defined name in the language of the user.</span></span> <span data-ttu-id="4832d-164">如果使用该参数，将不转换名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-164">No names will be translated if you use this argument.</span></span></param>
        <param name="RefersTo"><span data-ttu-id="4832d-165">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="4832d-165">Optional <b>Object</b>.</span></span> <span data-ttu-id="4832d-166">名称引用的内容。</span><span class="sxs-lookup"><span data-stu-id="4832d-166">What the name refers to.</span></span> <span data-ttu-id="4832d-167">使用该参数以引用的内容标识名称。</span><span class="sxs-lookup"><span data-stu-id="4832d-167">You use this argument to identify a name by what it refers to.</span></span></param>
        <summary><span data-ttu-id="4832d-168">从集合 <see cref="T:Microsoft.Office.Interop.Excel.Name" /> 中返回单个 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4832d-168">Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="4832d-169">必须只指定这三个参数中的一个。</span><span class="sxs-lookup"><span data-stu-id="4832d-169">You must specify one, and only one, of these three arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4832d-170">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="4832d-170">Returns the parent object for the specified object.</span></span> <span data-ttu-id="4832d-171">只读。</span><span class="sxs-lookup"><span data-stu-id="4832d-171">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>