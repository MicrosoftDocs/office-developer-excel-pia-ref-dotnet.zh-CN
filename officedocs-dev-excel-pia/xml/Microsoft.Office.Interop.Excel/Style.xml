<Type Name="Style" FullName="Microsoft.Office.Interop.Excel.Style">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d16dc7a8953f4adcd743c663cce1a8e9c3cd90e3" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20574044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Style" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Style" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Style" />
  <TypeSignature Language="VB.NET" Value="Public Interface Style" />
  <TypeSignature Language="C++ CLI" Value="public interface class Style" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020852-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2d754-101">代表区域的样式说明。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d754-101">Represents a style description for a range.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="2d754-102">
        <para>
          <b>Style</b>对象包含作为属性的所有样式属性 （字体、 数字格式、 对齐方式，等等）。有几种内置样式，其中包括普通、 货币和 %。使用<b>样式</b>对象是同时更改多个单元格的多个单元格格式设置属性的快速、 高效地方法。</para>
        <para>的<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象，该<b>样式</b>对象所在的<see cref="T:Microsoft.Office.Interop.Excel.Styles" />集合。<b>Styles</b>集合包含工作簿的所有定义的样式。</para>
        <para>使用<see cref="P:Microsoft.Office.Interop.Excel.Range.Style" />属性可返回与一起使用的<b>样式</b>对象<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</para>
        <para>您可以通过更改属性应用于该单元格的样式的更改单元格的外观。请记住，但是，更改 style 属性会影响已具有该样式格式的所有单元格。</para>
        <para>使用<b>样式</b>(<paramref name="index" />)，其中<paramref name="index" />是样式索引号或名称，从工作簿<b>Styles</b>集合中返回单个<b>Style</b>对象。</para>
        <para>样式按样式名称按字母顺序排序。样式索引号表示指定样式的样式名称的已排序列表中的位置。Styles （1） 是字母列表中的第一个样式，Styles(Styles.Count) 是列表中的最后一个。</para>
        <para>有关创建和修改样式的详细信息，请参阅<see cref="T:Microsoft.Office.Interop.Excel.Styles" />对象。</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2d754-102">
          <para>The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties. There are several built-in styles, including Normal, Currency, and Percent. Using the <b>Style</b> object is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.</para>
          <para>For the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, the <b>Style</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection. The <b>Styles</b> collection contains all the defined styles for the workbook.</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> property to return the <b>Style</b> object used with a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</para>
          <para>You can change the appearance of a cell by changing properties of the style applied to that cell. Keep in mind, however, that changing a style property will affect all cells already formatted with that style.</para>
          <para>Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</para>
          <para>Styles are sorted alphabetically by style name. The style index number denotes the position of the specified style in the sorted list of style names. Styles(1) is the first style in the alphabetic list, and Styles(Styles.Count) is the last one in the list.</para>
          <para>For more information about creating and modifying a style, see the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-103">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public bool AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddIndent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-104">
            <b>True</b>如果水平或垂直等距单元格中的文本对齐方式设置为等距分布时，自动缩进文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-104">
              <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-105">
            <para>设置文本对齐方式为均匀分布，您可以设置<see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />属性设为<b>xlVAlignDistributed</b>时的值<see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" />属性是<b>xlVertical</b>，并且可以设置<see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />属性设为<b>xlHAlignDistributed</b>时<b>Orientation</b>属性的值是<b>xlHorizontal</b>。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-105">
              <para>To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-106">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-107">返回<see cref="T:Microsoft.Office.Interop.Excel.Borders" />集合，它代表样式的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-107">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltIn">
      <MemberSignature Language="C#" Value="public bool BuiltIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.BuiltIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-108">
            <b>True</b>如果样式为内置样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-108">
              <b>True</b> if the style is a built-in style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-109">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-109">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-110">
            <para>如果对象在 Microsoft Excel 中创建的此属性返回的字符串 XCEL，这相当于十六进制数字 5843454 c。</para>
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-110">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Style.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d754-111">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-111">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-112">返回<see cref="T:Microsoft.Office.Interop.Excel.Font" />对象，它代表指定对象的字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-112">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public bool FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormulaHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-113">如果为<b>true</b>将时工作表处于保护状态隐藏公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-113">
              <b>True</b> if the formula will be hidden when the worksheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-114">
            <para>不将此属性与<see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" />属性。如果受保护工作簿和工作表不，但仅当工作表处于保护，将不隐藏公式。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-114">
              <para>Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property. The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As XlHAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHAlign HorizontalAlignment { Microsoft::Office::Interop::Excel::XlHAlign get(); void set(Microsoft::Office::Interop::Excel::XlHAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-115">返回或设置指定对象的水平对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-115">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-116">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" />可以是以下<b>XlHAlign</b>常量之一：</para>
            <para>
              <b>xlHAlignCenter</b>
            </para>
            <para>
              <b>xlHAlignCenterAcrossSelection</b>
            </para>
            <para>
              <b>xlHAlignDistributed</b>
            </para>
            <para>
              <b>xlHAlignFill</b>
            </para>
            <para>
              <b>xlHAlignGeneral</b>
            </para>
            <para>
              <b>xlHAlignJustify</b>
            </para>
            <para>
              <b>xlHAlignLeft</b>
            </para>
            <para>
              <b>xlHAlignRight</b>
            </para>
            <para>这些常量的一些可能不可用，具体取决于您已选择或安装的语言支持 （例如，美国英语）。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-116">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> can be one of the following <b>XlHAlign</b> constants:</para>
              <para>
                <b>xlHAlignCenter</b>
              </para>
              <para>
                <b>xlHAlignCenterAcrossSelection</b>
              </para>
              <para>
                <b>xlHAlignDistributed</b>
              </para>
              <para>
                <b>xlHAlignFill</b>
              </para>
              <para>
                <b>xlHAlignGeneral</b>
              </para>
              <para>
                <b>xlHAlignJustify</b>
              </para>
              <para>
                <b>xlHAlignLeft</b>
              </para>
              <para>
                <b>xlHAlignRight</b>
              </para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAlignment">
      <MemberSignature Language="C#" Value="public bool IncludeAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAlignment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeAlignment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-117">如果为<b>true</b>的样式包含<see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />， <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />， <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />， <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />，和<see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-117">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, and <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBorder">
      <MemberSignature Language="C#" Value="public bool IncludeBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeBorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeBorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-118">如果为<b>true</b>的样式包含<see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />， <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />， <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />，和<see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" />边框属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-118">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFont">
      <MemberSignature Language="C#" Value="public bool IncludeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeFont { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-119">如果为<b>true</b>的样式包含<see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />， <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />，和<see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" />字体属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-119">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, and <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> font properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNumber">
      <MemberSignature Language="C#" Value="public bool IncludeNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeNumber As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeNumber { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-120">如果样式包括<see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-120">True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePatterns">
      <MemberSignature Language="C#" Value="public bool IncludePatterns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePatterns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePatterns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePatterns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-121">如果为<b>true</b>的样式包含<see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />， <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />， <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />， <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />， <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />，和<see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" />interior 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-121">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, and <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeProtection">
      <MemberSignature Language="C#" Value="public bool IncludeProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeProtection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeProtection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeProtection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-122">如果为<b>true</b>的样式包含<see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" />和<see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-122">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> and <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-123">返回或设置样式的缩进级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-123">Returns or sets the indent level for the style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-124">
            <para>使用此属性将缩进级别设置为一个小于 0 （零） 或大于 15 将导致出错。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-124">
              <para>Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-125">返回<see cref="T:Microsoft.Office.Interop.Excel.Interior" />值，该值代表指定对象的内部的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-125">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-126">
            <b>True</b>如果对象已锁定;<b>False</b>工作表处于保护状态时，可以修改对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-126">
              <b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-127">
            <b>True</b>如果样式包含合并单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-127">
              <b>True</b> if the style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-128">
            <para>当您选择该区域包含合并单元格时，所获得的选择可能不同于预期的所选内容。使用<see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />属性检查所选范围的地址。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-128">
              <para>When you select a range that contains merged cells, the resulting selection may be different from the intended selection. Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-129">返回的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-129">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-130">
            <para>下表显示<b>名称</b>属性和给定唯一名称"[Europe] 与数据源相关的属性示例值。[France]。[Paris]"，并将与项目的非 OLAP 数据源命名"巴黎"。</para>
            <list type="table">
              <item>
                <term>
                  <b>标题</b>
                </term>
                <description>巴黎</description>
                <description>巴黎</description>
              </item>
              <item>
                <term>
                  <b>名称</b>
                </term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>巴黎</description>
              </item>
              <item>
                <term>
                  <b>SourceName</b>
                </term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>（与 SQL 属性值，只读相同）</description>
              </item>
              <item>
                <term>
                  <b>值</b>
                </term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>巴黎</description>
              </item>
            </list>
            <para>指定的索引时<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />集合，您可以使用下表中所示的语法。</para>
            <list type="table">
              <item>
                <term>表达式。PivotItems ("[Europe]。 [法国]。[Paris]")</term>
                <description>表达式。PivotItems("Paris")</description>
              </item>
            </list>
            <para>时使用<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />属性引用集合中的特定成员，您可以使用下表中所示的文本索引名称。</para>
            <list type="table">
              <item>
                <term>[Europe]。 [法国]。[Paris]</term>
                <description>巴黎</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-130">
              <para>The following table shows example values of the <b>Name</b> property and related properties given an  data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>
                    <b>Caption</b>
                  </term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>Name</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>SourceName</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>
                    <b>Value</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameLocal">
      <MemberSignature Language="C#" Value="public string NameLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NameLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameLocal { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-131">返回语言的用户对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-131">Returns the name of the object in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-132">
            <para>如果样式为内置样式，此属性中的当前区域设置语言返回样式的名称。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-132">
              <para>If the style is a built-in style, this property returns the name of the style in the language of the current locale.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-133">返回或设置对象的格式代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-133">Returns or sets the format code for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-134">
            <para>格式代码是作为单元格格式对话框中的格式代码选项相同的字符串。<b>Format</b>函数使用格式代码字符串不同，不执行<b>与 NumberFormat</b>和<see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" />属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-134">
              <para>The format code is the same string as the Format Codes option in the Format Cells dialog box. The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public string NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormatLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-135">返回或设置对象的格式代码，以用户的语言的字符串形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-135">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-136">
            <para>
              <b>Format</b>函数使用使用的格式代码字符串不同<see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />和<b>NumberFormatLocal</b>属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-136">
              <para>The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlOrientation Orientation { Microsoft::Office::Interop::Excel::XlOrientation get(); void set(Microsoft::Office::Interop::Excel::XlOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-137">文本方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-137">The text orientation.</span>
          </span>
          <span data-ttu-id="2d754-138">可以是介于 – 90 到 90 度或之一的整数值<see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" />常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-138">Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> constants.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-139">
            <para>
              <b>XlOrientation</b>可以是下列常量之一：</para>
            <para>
              <b>xlDownward</b>
            </para>
            <para>
              <b>xlUpward</b>
            </para>
            <para>
              <b>xlHorizontal</b>
            </para>
            <para>
              <b>xlVertical</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-139">
              <para>
                <b>XlOrientation</b> can be one of the following constants:</para>
              <para>
                <b>xlDownward</b>
              </para>
              <para>
                <b>xlUpward</b>
              </para>
              <para>
                <b>xlHorizontal</b>
              </para>
              <para>
                <b>xlVertical</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-140">返回指定对象的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-140">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-141">返回或设置指定对象的读取顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-141">Returns or sets the reading order for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-142">
            <para>
              <b>ReadingOrder</b>属性可以是下列常量之一： <b>xlRTL</b> （右至左）、 <b>xlLTR</b> （从左到右） 或<b>xlContext</b>。</para>
            <para>这些常量的一些可能不可用，具体取决于您已选择或安装的语言支持 （例如，美国英语）。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-142">
              <para>The <b>ReadingOrder</b> property can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public bool ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShrinkToFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-143">
            <b>True</b>如果文本会自动缩小以适应可用列宽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-143">
              <b>True</b> if text automatically shrinks to fit in the available column width.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-144">指定样式的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-144">The name of the specified style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As XlVAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlVAlign VerticalAlignment { Microsoft::Office::Interop::Excel::XlVAlign get(); void set(Microsoft::Office::Interop::Excel::XlVAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlVAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-145">返回或设置指定对象的垂直对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-145">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d754-146">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" />可以是以下<b>XlVAlign</b>常量之一：</para>
            <para>
              <b>xlVAlignCenter</b>
            </para>
            <para>
              <b>xlVAlignJustify</b>
            </para>
            <para>
              <b>xlVAlignBottom</b>
            </para>
            <para>
              <b>xlVAlignDistributed</b>
            </para>
            <para>
              <b>xlVAlignTop</b>
            </para>
            <para>这些常量的一些可能不可用，根据您所选定或安装的语言支持 （例如，美国英语）。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-146">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> can be one of the following <b>XlVAlign</b> constants:</para>
              <para>
                <b>xlVAlignCenter</b>
              </para>
              <para>
                <b>xlVAlignJustify</b>
              </para>
              <para>
                <b>xlVAlignBottom</b>
              </para>
              <para>
                <b>xlVAlignDistributed</b>
              </para>
              <para>
                <b>xlVAlignTop</b>
              </para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public bool WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d754-147">
            <b>True</b>如果 Microsoft Excel 将文本包装对象中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d754-147">
              <b>True</b> if Microsoft Excel wraps the text in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>