<Type Name="Style" FullName="Microsoft.Office.Interop.Excel.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4f738901e25e0863ca50d9f0bc3e164a839d737" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009805" /></Metadata><TypeSignature Language="C#" Value="public interface Style" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Style" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Style" />
  <TypeSignature Language="VB.NET" Value="Public Interface Style" />
  <TypeSignature Language="C++ CLI" Value="public interface class Style" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020852-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7b5f-101">代表区域的样式说明。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-101">Represents a style description for a range.</span></span></summary>
    <remarks><para><span data-ttu-id="c7b5f-102"><b>Style</b> 对象包含样式的所有属性（字体、数字格式、对齐方式，等等）。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-102">The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties.</span></span> <span data-ttu-id="c7b5f-103">有几种内置样式，包括“常规”、“货币”和“百分比”。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-103">There are several built-in styles, including Normal, Currency, and Percent.</span></span> <span data-ttu-id="c7b5f-104">同时对多个单元格修改单元格格式属性时，使用 <b>Style</b> 对象是快捷高效的方法。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-104">Using the <b>Style</b> object is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.</span></span></para>
      <para><span data-ttu-id="c7b5f-105">对于 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 该对象 <b>，Style</b> 对象是集合的 <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> 一个成员。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-105">For the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, the <b>Style</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</span></span> <span data-ttu-id="c7b5f-106"><b>Styles</b> 集合包含该工作簿的所有已定义样式。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-106">The <b>Styles</b> collection contains all the defined styles for the workbook.</span></span></para>
      <para><span data-ttu-id="c7b5f-107">使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> 该属性可返回 <b>与对象</b> 一同使用的 Style <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-107">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> property to return the <b>Style</b> object used with a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
      <para><span data-ttu-id="c7b5f-p103">通过更改应用于单元格的样式的属性可更改单元格的外观。但要记住，更改样式的属性将影响所有以该样式格式化了的单元格。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-p103">You can change the appearance of a cell by changing properties of the style applied to that cell. Keep in mind, however, that changing a style property will affect all cells already formatted with that style.</span></span></para>
      <para><span data-ttu-id="c7b5f-110">使用<b>样式</b> () ，其中样式索引号或名称，从工作簿样式 集合中返回单个 <paramref name="index" /> <paramref name="index" /> <b>样式</b>对象。 <b></b></span><span class="sxs-lookup"><span data-stu-id="c7b5f-110">Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</span></span></para>
      <para><span data-ttu-id="c7b5f-111">样式按照名称的字母顺序排序。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-111">Styles are sorted alphabetically by style name.</span></span> <span data-ttu-id="c7b5f-112">样式编号表明指定样式在样式名排序列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-112">The style index number denotes the position of the specified style in the sorted list of style names.</span></span> <span data-ttu-id="c7b5f-113">Styles(1) 是排序列表中的第一个样式，而 Styles(Styles.Count) 是最后一个。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-113">Styles(1) is the first style in the alphabetic list, and Styles(Styles.Count) is the last one in the list.</span></span></para>
      <para><span data-ttu-id="c7b5f-114">有关创建和修改样式的信息，请参阅 <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-114">For more information about creating and modifying a style, see the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-115">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-115">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public bool AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddIndent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-116"><b>如此</b> 如果当单元格中的文本对齐方式设置为水平或垂直相等的分布时自动缩进文本。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-116"><b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-117">若要将文本对齐方式设置为等式分布，可以在属性值为 xlVertical 时将该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> <b>xlVAlignDistributed，</b>当 Orientation 属性的值为 xlHorizontal 时，可以将该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> <b></b><b>xlHAlignDistributed。</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="c7b5f-117">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-118">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-119">返回 <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> 一个集合，该集合代表样式的边框。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltIn">
      <MemberSignature Language="C#" Value="public bool BuiltIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.BuiltIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-120">如果样式为内置样式，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-120"><b>True</b> if the style is a built-in style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-121">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-121">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-122">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="c7b5f-123"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-123">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="c7b5f-124">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-124">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Style.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7b5f-125">删除对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-125">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-126">返回 <see cref="T:Microsoft.Office.Interop.Excel.Font" /> 一个对象，该对象代表指定对象的字体。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-126">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public bool FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormulaHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-127"><b>如此</b> 如果工作表受保护时将隐藏公式。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-127"><b>True</b> if the formula will be hidden when the worksheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-128">请勿将此属性与该属性 <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> 混淆。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-128">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="c7b5f-129">如果工作簿受保护且工作表不受保护，则公式不会隐藏，但仅在工作表受保护时隐藏。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-129">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As XlHAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHAlign HorizontalAlignment { Microsoft::Office::Interop::Excel::XlHAlign get(); void set(Microsoft::Office::Interop::Excel::XlHAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-130">返回或设置指定对象的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-130">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-131">
            <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> 可以是下列 <b>XlHAlign</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="c7b5f-131">
            <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> can be one of the following <b>XlHAlign</b> constants:</span></span></para>
          <para><span data-ttu-id="c7b5f-132">
            <b>xlHAlignCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-132">
            <b>xlHAlignCenter</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-133">
            <b>xlHAlignCenterAcrossSelection</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-133">
            <b>xlHAlignCenterAcrossSelection</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-134">
            <b>xlHAlignDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-134">
            <b>xlHAlignDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-135">
            <b>xlHAlignFill</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-135">
            <b>xlHAlignFill</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-136">
            <b>xlHAlignGeneral</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-136">
            <b>xlHAlignGeneral</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-137">
            <b>xlHAlignJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-137">
            <b>xlHAlignJustify</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-138">
            <b>xlHAlignLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-138">
            <b>xlHAlignLeft</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-139">
            <b>xlHAlignRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-139">
            <b>xlHAlignRight</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-140">[!注释] 由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-140">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAlignment">
      <MemberSignature Language="C#" Value="public bool IncludeAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAlignment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeAlignment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-141"><b>如此</b> 如果样式包括 <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" /> ， <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> ， <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> 和 <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" /> <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-141"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, and <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBorder">
      <MemberSignature Language="C#" Value="public bool IncludeBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeBorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeBorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-142"><b>如此</b> 如果样式包括 <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> ， <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" /> 和 <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> 边框属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-142"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFont">
      <MemberSignature Language="C#" Value="public bool IncludeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeFont { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-143"><b>如此</b> 如果样式包括 <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" /> ， <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" /> 和 <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> 字体属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-143"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, and <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> font properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNumber">
      <MemberSignature Language="C#" Value="public bool IncludeNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeNumber As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeNumber { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-144">如此 如果样式包含 <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-144">True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePatterns">
      <MemberSignature Language="C#" Value="public bool IncludePatterns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePatterns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePatterns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePatterns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-145"><b>如此</b> 如果样式包括 <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" /> ， <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" /> 和 <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> 内部属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-145"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, and <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeProtection">
      <MemberSignature Language="C#" Value="public bool IncludeProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeProtection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeProtection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeProtection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-146"><b>如此</b> 如果样式包括 <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> 和 <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-146"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> and <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-147">返回或设置样式的缩进级别。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-147">Returns or sets the indent level for the style.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-148">使用此属性将缩进量设为小于 0 或者大于 15 的数字，将导致发生错误。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-148">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-149">返回 <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> 一个对象，该对象代表指定对象的内部。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-149">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-150">如果对象被锁定，则其为<b>True;</b><b>假</b>如果工作表受保护时可以修改对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-150"><b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-151">如果样式包含合并的单元格，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-151"><b>True</b> if the style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-152">如果选择的区域内包含合并单元格，生成的选定内容可能与预期不同。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-152">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="c7b5f-153">使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> 该属性检查所选区域的地址。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-153">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-154">返回的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-154">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-155">下表显示了 Name 属性和相关属性<b></b>的示例值，给定了具有唯一名称"[Europe] 的数据源。[法国]。[Paris]"，以及项目名称为"Paris"的非 OLAP 数据源。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-155">The following table shows example values of the <b>Name</b> property and related properties given an  data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="c7b5f-156">
                <b>标题</b>
              </span><span class="sxs-lookup"><span data-stu-id="c7b5f-156">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="c7b5f-157">巴黎</span><span class="sxs-lookup"><span data-stu-id="c7b5f-157">Paris</span></span></description>
              <description><span data-ttu-id="c7b5f-158">巴黎</span><span class="sxs-lookup"><span data-stu-id="c7b5f-158">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="c7b5f-159">
                <b>名称</b>
              </span><span class="sxs-lookup"><span data-stu-id="c7b5f-159">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="c7b5f-160">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="c7b5f-160">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="c7b5f-161">巴黎</span><span class="sxs-lookup"><span data-stu-id="c7b5f-161">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="c7b5f-162">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="c7b5f-162">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="c7b5f-163">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="c7b5f-163">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="c7b5f-164">（与 SQL 属性值相同，只读）</span><span class="sxs-lookup"><span data-stu-id="c7b5f-164">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="c7b5f-165">
                <b>值</b>
              </span><span class="sxs-lookup"><span data-stu-id="c7b5f-165">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="c7b5f-166">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="c7b5f-166">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="c7b5f-167">巴黎</span><span class="sxs-lookup"><span data-stu-id="c7b5f-167">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="c7b5f-168">在集合中指定索引时，可以使用 <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 下表中所示的语法。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-168">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="c7b5f-169">表达式。PivotItems ("[Europe]。[法国]。[Paris]") </span><span class="sxs-lookup"><span data-stu-id="c7b5f-169">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="c7b5f-170">表达式。PivotItems ("Paris") </span><span class="sxs-lookup"><span data-stu-id="c7b5f-170">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="c7b5f-171">使用该属性引用集合的特定成员时，可以使用文本 <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> 索引名称，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-171">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="c7b5f-172">[欧洲]。[法国]。[巴黎]</span><span class="sxs-lookup"><span data-stu-id="c7b5f-172">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="c7b5f-173">巴黎</span><span class="sxs-lookup"><span data-stu-id="c7b5f-173">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NameLocal">
      <MemberSignature Language="C#" Value="public string NameLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NameLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameLocal { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-174">以用户语言返回对象的名称。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-174">Returns the name of the object in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-175">如果样式为内置样式，则此属性以当前系统所使用的地区语言返回样式的名称。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-175">If the style is a built-in style, this property returns the name of the style in the language of the current locale.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-176">返回或设置对象的格式代码。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-176">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-177">格式代码是在 设置单元格格式对话框中 格式代码选项相同的字符串。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-177">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="c7b5f-178"><b>Format</b>函数使用的格式代码字符串与<b>NumberFormat 和属性</b> <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> 不同。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-178">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public string NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormatLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-179">返回或设置对象的格式代码，以用户的语言的字符串形式。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-179">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-180"><b>Format</b>函数使用的格式代码字符串与 <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> <b>NumberFormatLocal</b>属性不同。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-180">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlOrientation Orientation { Microsoft::Office::Interop::Excel::XlOrientation get(); void set(Microsoft::Office::Interop::Excel::XlOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-181">文本打印方向。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-181">The text orientation.</span></span> <span data-ttu-id="c7b5f-182">可以是 -90 到 90 度或常量之 <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> 一的整数值。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-182">Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> constants.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-183">
            <b>XlOrientation</b> 可以是下列常量之一：</span><span class="sxs-lookup"><span data-stu-id="c7b5f-183">
            <b>XlOrientation</b> can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="c7b5f-184">
            <b>xlDownward</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-184">
            <b>xlDownward</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-185">
            <b>xlUpward</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-185">
            <b>xlUpward</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-186">
            <b>xlHorizontal</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-186">
            <b>xlHorizontal</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-187">
            <b>xlVertical</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-187">
            <b>xlVertical</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-188">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-188">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-189">返回或设置指定对象的阅读次序。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-189">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-190"><b>ReadingOrder</b>属性可以是下列常量之一： <b>xlRTL</b> (从右到左) 、 <b>xlLTR</b> (从左到右) 或<b>xlContext</b>。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-190">The <b>ReadingOrder</b> property can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="c7b5f-191">[!注释] 由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-191">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public bool ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShrinkToFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-192"><b>如此</b> 如果文本自动缩小以适应可用列宽。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-192"><b>True</b> if text automatically shrinks to fit in the available column width.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-193">指定样式的名称。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-193">The name of the specified style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As XlVAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlVAlign VerticalAlignment { Microsoft::Office::Interop::Excel::XlVAlign get(); void set(Microsoft::Office::Interop::Excel::XlVAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlVAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-194">返回或设置指定对象的垂直对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-194">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="c7b5f-195">
            <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> 可以是下列 <b>XlVAlign</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="c7b5f-195">
            <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> can be one of the following <b>XlVAlign</b> constants:</span></span></para>
          <para><span data-ttu-id="c7b5f-196">
            <b>xlVAlignCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-196">
            <b>xlVAlignCenter</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-197">
            <b>xlVAlignJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-197">
            <b>xlVAlignJustify</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-198">
            <b>xlVAlignBottom</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-198">
            <b>xlVAlignBottom</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-199">
            <b>xlVAlignDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-199">
            <b>xlVAlignDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-200">
            <b>xlVAlignTop</b>
          </span><span class="sxs-lookup"><span data-stu-id="c7b5f-200">
            <b>xlVAlignTop</b>
          </span></span></para>
          <para><span data-ttu-id="c7b5f-201">[!注释] 由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-201">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public bool WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7b5f-202"><b>如此</b> 如果 Microsoft Excel 包装对象中的文本。</span><span class="sxs-lookup"><span data-stu-id="c7b5f-202"><b>True</b> if Microsoft Excel wraps the text in the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>