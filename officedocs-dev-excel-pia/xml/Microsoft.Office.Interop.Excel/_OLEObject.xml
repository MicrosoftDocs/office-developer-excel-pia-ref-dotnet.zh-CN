<Type Name="_OLEObject" FullName="Microsoft.Office.Interop.Excel._OLEObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af49a80aff9121295165535f61d74b6cd1d1256b" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012682" /></Metadata><TypeSignature Language="C#" Value="public interface _OLEObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OLEObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._OLEObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OLEObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OLEObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208A2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43bfd-101">这是 COM coclass（托管代码需要此 Coclass 来实现与相应的 COM 对象的互操作性）中的主接口。</span><span class="sxs-lookup"><span data-stu-id="43bfd-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="43bfd-102">仅当您想要使用的方法与 COM 对象的事件共享同一名称时才使用此主接口；在这种情况下，转换为此接口以调用该方法，转换为最新的事件接口以连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="43bfd-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="43bfd-103">否则，请使用派生自 COM coclass 的 .NET 接口来访问方法、属性和 COM 对象的事件。</span><span class="sxs-lookup"><span data-stu-id="43bfd-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="43bfd-104">有关 COM 对象详细信息，请参阅 <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-105">激活对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-105">Activates the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltHTML">
      <MemberSignature Language="C#" Value="public string AltHTML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltHTML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AltHTML" />
      <MemberSignature Language="VB.NET" Value="Public Property AltHTML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltHTML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-106">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="43bfd-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417964)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417964)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-107">此属性返回一个对象，该对象代表指定对象的创建者 (可以使用 OLE 自动化对象的此属性返回该对象 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 的应用程序) 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-107">This property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span> <span data-ttu-id="43bfd-108">只读。</span><span class="sxs-lookup"><span data-stu-id="43bfd-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLoad">
      <MemberSignature Language="C#" Value="public bool AutoLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLoad" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AutoLoad" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLoad As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLoad { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-109">如果打开包含指定 OLE 对象的工作簿时自动载入该 OLE 对象，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-109"><b>True</b> if the OLE object is automatically loaded when the workbook that contains it is opened.</span></span> <span data-ttu-id="43bfd-110">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-110">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-111">ActiveX 忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="43bfd-111">This property is ignored by ActiveX controls.</span></span> <span data-ttu-id="43bfd-112">打开一个工作簿时总会载入 ActiveX 控件。</span><span class="sxs-lookup"><span data-stu-id="43bfd-112">ActiveX controls are always loaded when a workbook is opened.</span></span></para>
          <para><span data-ttu-id="43bfd-113">对于大多数 OLE 对象类型，此属性不能设为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-113">For most OLE object types, this property shouldn’t be set to <b>True</b>.</span></span> <span data-ttu-id="43bfd-114">对于新 OLE 对象，默认情况下其 <b>AutoLoad</b> 属性设为 <b>False</b>；当 Microsoft Excel 载入工作簿时，设为“False”可节省时间和内存。</span><span class="sxs-lookup"><span data-stu-id="43bfd-114">By default, the <b>AutoLoad</b> property is set to <b>False</b> for new OLE objects; this saves time and memory when Microsoft Excel is loading workbooks.</span></span> <span data-ttu-id="43bfd-115">自动加载 OLE 对象的好处是，对于代表可变数据的对象，可以立即重新建立指向源数据的链接，并在必要时再次呈现这些对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-115">The benefit of automatically loading OLE objects is that, for objects that represent volatile data, links to source data can be reestablished immediately and the objects can be rendered again if necessary.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdate">
      <MemberSignature Language="C#" Value="public bool AutoUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AutoUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-116">如果数据源改变时 OLE 对象将自动更新，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-116"><b>True</b> if the OLE object is updated automatically when the source changes.</span></span> <span data-ttu-id="43bfd-117">仅在对象被链接时有效 (<see cref="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" /> 其属性必须为 <b>xlOLELink</b>) 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-117">Valid only if the object is linked (its <see cref="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" /> property must be <b>xlOLELink</b>).</span></span> <span data-ttu-id="43bfd-118">只读 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-118">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417984)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417984)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-119">返回 <see cref="T:Microsoft.Office.Interop.Excel.Border" /> 一个对象，该对象表示对象的边框。</span><span class="sxs-lookup"><span data-stu-id="43bfd-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417497)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-120">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表对象右下角的单元格。</span><span class="sxs-lookup"><span data-stu-id="43bfd-120">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span></span> <span data-ttu-id="43bfd-121">只读。</span><span class="sxs-lookup"><span data-stu-id="43bfd-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public object BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BringToFront() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Function BringToFront () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BringToFront();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-122">将对象放到 z-次序前面。</span><span class="sxs-lookup"><span data-stu-id="43bfd-122">Brings the object to the front of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417561)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-123">将对象复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="43bfd-123">Copies the object to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="43bfd-124">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-124">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="43bfd-125">指定图片的复制方式。</span><span class="sxs-lookup"><span data-stu-id="43bfd-125">Specifies how the picture should be copied.</span></span></param>
        <param name="Format"><span data-ttu-id="43bfd-126">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-126">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="43bfd-127">图片的格式。</span><span class="sxs-lookup"><span data-stu-id="43bfd-127">The format of the picture.</span></span></param>
        <summary><span data-ttu-id="43bfd-128">将所选对象作为图片复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="43bfd-128">Copies the selected object to the Clipboard as a picture.</span></span> <span data-ttu-id="43bfd-129"><b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-129"><b>Object</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-130">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="43bfd-130">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="43bfd-131">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="43bfd-131">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="43bfd-132">只读 <b>xlCreatorCode</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-132">Read-only <b>xlCreatorCode</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-133"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="43bfd-133">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="43bfd-134">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="43bfd-134">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-135">将对象剪切到剪贴板，或者将其粘贴到指定的目的地。</span><span class="sxs-lookup"><span data-stu-id="43bfd-135">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="43bfd-136">只可剪切嵌入式图表。</span><span class="sxs-lookup"><span data-stu-id="43bfd-136">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-137">删除对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-137">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public object Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417073)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-138">复制对象，并返回对新复制对象的引用。</span><span class="sxs-lookup"><span data-stu-id="43bfd-138">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-139">如果启用对象，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-139"><b>True</b> if the object is enabled.</span></span> <span data-ttu-id="43bfd-140">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-140">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-141">对象的高度，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="43bfd-141">The height, in points, of the object.</span></span> <span data-ttu-id="43bfd-142">读/写 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-142">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-143">返回对象在其同类对象所组成的集合内的编号。</span><span class="sxs-lookup"><span data-stu-id="43bfd-143">Returns the index number of the object within the collection of similar objects.</span></span> <span data-ttu-id="43bfd-144">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-144">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417983)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417983)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-145">返回 <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> 一个对象，该对象代表指定对象的内部。</span><span class="sxs-lookup"><span data-stu-id="43bfd-145">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-146">从对象左边界至 A 列左边界（在工作表上）或图表区左边界（在图表上）的距离，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="43bfd-146">The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span> <span data-ttu-id="43bfd-147">读/写 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-147">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-148">如果窗口最大化，则此属性返回一个负数，该负数因窗口边框的宽度而异。</span><span class="sxs-lookup"><span data-stu-id="43bfd-148">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="43bfd-149">如果将此属性设置为 0 (为零) 则会使窗口在应用程序窗口最大化时略小一点。</span><span class="sxs-lookup"><span data-stu-id="43bfd-149">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="43bfd-150">换句话说，如果 <b>Left</b> 属性为 0 (零) ，Microsoft Excel 主窗口的左边框将在屏幕上几乎不可见。</span><span class="sxs-lookup"><span data-stu-id="43bfd-150">In other words, if the <b>Left</b> property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedCell">
      <MemberSignature Language="C#" Value="public string LinkedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LinkedCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.LinkedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkedCell As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LinkedCell { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-151">返回或设置指向控制值的工作表区域。</span><span class="sxs-lookup"><span data-stu-id="43bfd-151">Returns or sets the worksheet range linked to the control's value.</span></span> <span data-ttu-id="43bfd-152">如果为这些单元格赋值，则指定控制也会取得相应的值。</span><span class="sxs-lookup"><span data-stu-id="43bfd-152">If you place a value in the cell, the control takes this value.</span></span> <span data-ttu-id="43bfd-153">与此类似，如果更改控制的值，则单元格的值也作相应变动。</span><span class="sxs-lookup"><span data-stu-id="43bfd-153">Likewise, if you change the value of the control, that value is also placed in the cell.</span></span> <span data-ttu-id="43bfd-154">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-154">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-155">不能将该属性应用于多选列表框。</span><span class="sxs-lookup"><span data-stu-id="43bfd-155">You cannot use this property with multiselect list boxes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFillRange">
      <MemberSignature Language="C#" Value="public string ListFillRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListFillRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ListFillRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ListFillRange As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListFillRange { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-156">返回或设置用于填充指定列表框的工作表区域。</span><span class="sxs-lookup"><span data-stu-id="43bfd-156">Returns or sets the worksheet range used to fill the specified list box.</span></span> <span data-ttu-id="43bfd-157">对该属性进行设置将破坏列表框中的所有列表项。</span><span class="sxs-lookup"><span data-stu-id="43bfd-157">Setting this property destroys any existing list in the list box.</span></span> <span data-ttu-id="43bfd-158">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-158">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-p120">Microsoft Excel 阅读区域中的每一单元格的内容，并将单元格值插入到列表框中。列表对该区域中单元格的修订进行追踪。</span><span class="sxs-lookup"><span data-stu-id="43bfd-p120">Microsoft Excel reads the contents of every cell in the range and inserts the cell values into the list box. The list tracks changes in the range’s cells.</span></span></para>
          <para><span data-ttu-id="43bfd-161">如果列表框中的列表是使用该方法创建的，则此属性返回空字符串 <see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" /> ("") 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-161">If the list in the list box was created with the <see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" /> method, this property returns an empty string ("").</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-162"><b>如果</b>对象被锁定，则其为 True;如果工作表受保护时可以修改该对象，则其为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="43bfd-162"><b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span></span> <span data-ttu-id="43bfd-163">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-163">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-164">返回或设置对象的名称。</span><span class="sxs-lookup"><span data-stu-id="43bfd-164">Returns or sets the name of the object.</span></span> <span data-ttu-id="43bfd-165"><b>String</b> 类型，可读写。</span><span class="sxs-lookup"><span data-stu-id="43bfd-165">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-166">返回与此 OLE 对象相联系的 OLE 自动化对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-166">Returns the OLE Automation object associated with this OLE object.</span></span> <span data-ttu-id="43bfd-167">只读 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-167">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEType">
      <MemberSignature Language="C#" Value="public object OLEType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OLEType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OLEType { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-168">返回 OLE 对象类型。</span><span class="sxs-lookup"><span data-stu-id="43bfd-168">Returns the OLE object type.</span></span> <span data-ttu-id="43bfd-169">可为以下 <b>XlOLEType</b> 常量之一：<b>xlOLELink</b> 或 <b>xlOLEEmbed</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-169">Can be one of the following <b>XlOLEType</b> constants: <b>xlOLELink</b> or <b>xlOLEEmbed</b>.</span></span> <span data-ttu-id="43bfd-170">如果对象是链接的，则返回 <b>xlOLELink</b> (该对象位于文件) 外部;如果对象是嵌入的，则返回 <b>xlOLEEmbed (</b> 则该对象完全包含在文件) 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-170">Returns <b>xlOLELink</b> if the object is linked (it exists outside of the file) or returns <b>xlOLEEmbed</b> if the object is embedded (it's entirely contained within the file).</span></span> <span data-ttu-id="43bfd-171">只读 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-171">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-172">返回或设置单击指定对象时运行的宏的名称。</span><span class="sxs-lookup"><span data-stu-id="43bfd-172">Returns or sets the name of a macro that’s run when the specified object is clicked.</span></span> <span data-ttu-id="43bfd-173">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-173">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-174">为菜单项设置该属性，该属性可取代为菜单项和指定宏设定的自定义帮助信息。</span><span class="sxs-lookup"><span data-stu-id="43bfd-174">Setting this property for a menu item overrides any custom help information set up for the menu item with the information set up for the assigned macro.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="43bfd-175">本示例在每当单击第一个形状时使 Microsoft Excel 运行 ShapeClick 过程。</span><span class="sxs-lookup"><span data-stu-id="43bfd-175">This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="43bfd-176">本示例在每当单击第一个形状时使 Microsoft Excel 运行 ShapeClick 过程。</span><span class="sxs-lookup"><span data-stu-id="43bfd-176">This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="43bfd-177">本示例在每当单击第一个形状时使 Microsoft Excel 运行 ShapeClick 过程。</span><span class="sxs-lookup"><span data-stu-id="43bfd-177">This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-178">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-178">Returns the parent object for the specified object.</span></span> <span data-ttu-id="43bfd-179">只读。</span><span class="sxs-lookup"><span data-stu-id="43bfd-179">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public object Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Placement { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-180">返回或设置对象附加到其下方的单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="43bfd-180">Returns or sets the way the object is attached to the cells below it.</span></span> <span data-ttu-id="43bfd-181">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-181">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-182">使用以下常量之一：</span><span class="sxs-lookup"><span data-stu-id="43bfd-182">Use one of the following constants:</span></span></para>
          <para><span data-ttu-id="43bfd-183">
            <b>xlFreeFloating</b>
          </span><span class="sxs-lookup"><span data-stu-id="43bfd-183">
            <b>xlFreeFloating</b>
          </span></span></para>
          <para><span data-ttu-id="43bfd-184">
            <b>xlMove</b>
          </span><span class="sxs-lookup"><span data-stu-id="43bfd-184">
            <b>xlMove</b>
          </span></span></para>
          <para><span data-ttu-id="43bfd-185">
            <b>xlMoveAndSize</b>
          </span><span class="sxs-lookup"><span data-stu-id="43bfd-185">
            <b>xlMoveAndSize</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintObject">
      <MemberSignature Language="C#" Value="public bool PrintObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.PrintObject" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-186">如果打印文档时也打印指定对象，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-186"><b>True</b> if the object will be printed when the document is printed.</span></span> <span data-ttu-id="43bfd-187">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-187">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="progID">
      <MemberSignature Language="C#" Value="public string progID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string progID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.progID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property progID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ progID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-188">返回对象的程序标识符。</span><span class="sxs-lookup"><span data-stu-id="43bfd-188">Returns the programmatic identifiers for the object.</span></span> <span data-ttu-id="43bfd-189">只读 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-189">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (Optional Replace As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="43bfd-190">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-190">Optional <b>Object</b>.</span></span> <span data-ttu-id="43bfd-191"><b>为</b> 当前所选内容替换为指定的对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-191"><b>True</b> to replace the current selection with the specified object.</span></span> <span data-ttu-id="43bfd-192"><b>False</b> 来扩展当前选定内容以包括任何以前选定的对象和指定的对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-192"><b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span></span></param>
        <summary><span data-ttu-id="43bfd-193">选择对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-193">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public object SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SendToBack() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToBack () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ SendToBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-194">将对象放到 z-次序的后面。</span><span class="sxs-lookup"><span data-stu-id="43bfd-194">Sends the object to the back of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-195"><b>如此</b> 如果字体是阴影字体或对象有阴影。</span><span class="sxs-lookup"><span data-stu-id="43bfd-195"><b>True</b> if the font is a shadow font or if the object has a shadow.</span></span> <span data-ttu-id="43bfd-196">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-196">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Excel::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416584)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416584)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-197">返回一 <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> 个对象，该对象表示指定的一个或多个对象。</span><span class="sxs-lookup"><span data-stu-id="43bfd-197">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</span></span> <span data-ttu-id="43bfd-198">只读。</span><span class="sxs-lookup"><span data-stu-id="43bfd-198">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-199">返回或设置指定对象的链接源名称。</span><span class="sxs-lookup"><span data-stu-id="43bfd-199">Returns or sets the specified object's link source name.</span></span> <span data-ttu-id="43bfd-200">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-200">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-201">从对象上边缘到工作表上第 1 (行顶边的距离（以) 或图表上图表区 (顶端) 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-201">The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span> <span data-ttu-id="43bfd-202">读/写 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-202">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417492)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-203">返回一个对象，该对象代表位于指定对象的左上角 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 下的单元格。</span><span class="sxs-lookup"><span data-stu-id="43bfd-203">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span></span> <span data-ttu-id="43bfd-204">只读。</span><span class="sxs-lookup"><span data-stu-id="43bfd-204">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public object Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bfd-205">更新链接。</span><span class="sxs-lookup"><span data-stu-id="43bfd-205">Updates the link.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public object Verb (Microsoft.Office.Interop.Excel.XlOLEVerb Verb = Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Verb([in]valuetype Microsoft.Office.Interop.Excel.XlOLEVerb Verb) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Function Verb (Optional Verb As XlOLEVerb = Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Verb" Type="Microsoft.Office.Interop.Excel.XlOLEVerb" />
      </Parameters>
      <Docs>
        <param name="Verb"><span data-ttu-id="43bfd-206">可选 <b>XlOLEVerb</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-206">Optional <b>XlOLEVerb</b>.</span></span> <span data-ttu-id="43bfd-207">OLE 对象服务器将执行其操作的动词。</span><span class="sxs-lookup"><span data-stu-id="43bfd-207">The verb that the server of the OLE object should act on.</span></span> <span data-ttu-id="43bfd-208">如果省略此参数，则发送默认动词。</span><span class="sxs-lookup"><span data-stu-id="43bfd-208">If this argument is omitted, the default verb is sent.</span></span> <span data-ttu-id="43bfd-209">对象的源应用程序决定哪些动词可用。</span><span class="sxs-lookup"><span data-stu-id="43bfd-209">The available verbs are determined by the object's source application.</span></span> <span data-ttu-id="43bfd-210">OLE 对象的典型动词为 Open 和 Primary（由 <b>XlOLEVerb</b> 常量 <b>xlOpen</b> 和 <b>xlPrimary</b> 表示）。</span><span class="sxs-lookup"><span data-stu-id="43bfd-210">Typical verbs for an OLE object are Open and Primary (represented by the <b>XlOLEVerb</b> constants <b>xlOpen</b> and <b>xlPrimary</b>).</span></span></param>
        <summary><span data-ttu-id="43bfd-211">向指定的 OLE 对象服务器发送动词。</span><span class="sxs-lookup"><span data-stu-id="43bfd-211">Sends a verb to the server of the specified OLE object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-212">决定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="43bfd-212">Determines whether the object is visible.</span></span> <span data-ttu-id="43bfd-213"><b>Boolean</b> 类型，可读写。</span><span class="sxs-lookup"><span data-stu-id="43bfd-213">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-214">对象的宽度，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="43bfd-214">The width, in points, of the object.</span></span> <span data-ttu-id="43bfd-215">读/写 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-215">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public int ZOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ZOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bfd-216">返回指定对象的 z-次序位置。</span><span class="sxs-lookup"><span data-stu-id="43bfd-216">Returns the z-order position of the object.</span></span> <span data-ttu-id="43bfd-217">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="43bfd-217">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="43bfd-218">在任何对象集合中，z 顺序后面的对象为 <paramref name="collection" /> (1) ，z-顺序前面的对象为 (<paramref name="collection" /> <paramref name="collection" /> 。<b>计数</b>) 。</span><span class="sxs-lookup"><span data-stu-id="43bfd-218">In any collection of objects, the object at the back of the z-order is <paramref name="collection" />(1), and the object at the front of the z-order is <paramref name="collection" />(<paramref name="collection" />.<b>Count</b>).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
