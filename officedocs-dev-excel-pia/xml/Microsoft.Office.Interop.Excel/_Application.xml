<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999628" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="14bff-101">这是 COM coclass（托管代码需要此 Coclass 来实现与相应的 COM 对象的互操作性）中的主接口。</span><span class="sxs-lookup"><span data-stu-id="14bff-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="14bff-102">仅当您想要使用的方法与 COM 对象的事件共享同一名称时才使用此主接口；在这种情况下，转换为此接口以调用该方法，转换为最新的事件接口以连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="14bff-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="14bff-103">否则，请使用派生自 COM coclass 的 .NET 接口来访问方法、属性和 COM 对象的事件。</span><span class="sxs-lookup"><span data-stu-id="14bff-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="14bff-104">有关 COM 对象详细信息，请参阅 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-105">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="14bff-106">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-106">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-107">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="14bff-108">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary><span data-ttu-id="14bff-109">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="14bff-110">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-110">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="14bff-111">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span></span> <span data-ttu-id="14bff-112">指定要激活的 Microsoft 应用程序。<b>XlMSApplication</b>可以是以下<b>XlMSApplication</b>常量之一<b>：xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span></span></param>
        <summary><span data-ttu-id="14bff-p103">激活一个 Microsoft 应用程序。如果该应用程序已经处于运行状态，则本方法激活的是正在运行的应用程序。如果该应用程序不处于运行状态，则本方法将启动该应用程序的新实例。</span><span class="sxs-lookup"><span data-stu-id="14bff-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-116">返回一个对象，该对象代表活动窗口中的活动单元格 (或指定窗口中) 活动 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="14bff-117">如果窗口中未显示工作表，则此属性将失败。</span><span class="sxs-lookup"><span data-stu-id="14bff-117">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-p105">请仔细区分活动单元格和选定区域。活动单元格为选定区域内部的一个单元格。而选定区域可以包含多个单元格，但只有一个单元格为活动单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-p105">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-121">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 个对象，该对象代表活动 (嵌入图表或图表工作表) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="14bff-122">嵌入式图表在被选中或激活时被认为是活动的。</span><span class="sxs-lookup"><span data-stu-id="14bff-122">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="14bff-123">当没有图表处于活动状态时，此属性返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-123">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-124">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-124">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-125">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="14bff-126"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="14bff-126"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-127">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-127">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-128">返回或设置活动打印机的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-128">Returns or sets the name of the active printer.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-129">获取一 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> 个对象，该对象代表活动"受保护的视图"窗口 (位于顶部窗口) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-129">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></summary>
        <value><span data-ttu-id="14bff-130">一 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> 个代表活动"受保护的视图"窗口 (位于顶部窗口) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-130">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></value>
        <remarks><para><span data-ttu-id="14bff-131">如果没有打开受保护的视图窗口 (，则返回空Visual Basic) 无值。</span><span class="sxs-lookup"><span data-stu-id="14bff-131">Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open.</span></span> <span data-ttu-id="14bff-132">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-132">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-p108">返回一个对象，它代表活动工作簿中或指定的窗口或工作簿中的活动工作表（最上面的工作表）。如果没有活动的工作表，则返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-135">如果某个工作簿出现在若干个窗口中，那么该工作簿的 <b>ActiveSheet</b> 属性在不同窗口中可能不同。</span><span class="sxs-lookup"><span data-stu-id="14bff-135">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-136">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> 个对象，该对象代表活动窗口 (顶部的窗口) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-136">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span></span> <span data-ttu-id="14bff-137">如果没有打开的窗口，则返回 <b>Nothing</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-137">Returns <b>Nothing</b> if there are no windows open.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-138">返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 一个对象，该对象代表活动窗口中的工作簿 (位于最上面) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-138">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span></span> <span data-ttu-id="14bff-139">如果未打开任何窗口，或者“信息”窗口或“剪贴板”窗口为活动窗口，则返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-139">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart"><span data-ttu-id="14bff-140">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-140">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-141">包含应用新图表自动格式时将应用的格式的图表。</span><span class="sxs-lookup"><span data-stu-id="14bff-141">A chart that contains the format that will be applied when the new chart autoformat is applied.</span></span></param>
        <param name="Name"><span data-ttu-id="14bff-142">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-142">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-143">自动格式的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-143">The name of the autoformat.</span></span></param>
        <param name="Description"><span data-ttu-id="14bff-144">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-145">自定义自动格式的说明。</span><span class="sxs-lookup"><span data-stu-id="14bff-145">A description of the custom autoformat.</span></span></param>
        <summary><span data-ttu-id="14bff-146">向图表的可用自动套用格式列表中添加自定义的自动套用格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-146">Adds a custom chart autoformat to the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="14bff-147">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-147">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-148">将源数据指定为字符串数组或 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-148">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></param>
        <param name="ByRow"><span data-ttu-id="14bff-149">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-150">仅在为 <paramref name="ListArray" /> Range 对象 <b>时</b> 使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-150">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span></span> <span data-ttu-id="14bff-151"><b>如果为 True，</b> 则从区域的每一行创建自定义列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-151"><b>True</b> to create a custom list from each row in the range.</span></span> <span data-ttu-id="14bff-152"><b>如果为 False，</b> 则从区域的每一列创建自定义列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-152"><b>False</b> to create a custom list from each column in the range.</span></span> <span data-ttu-id="14bff-153">如果省略此参数，且行数多于列 (或范围中) 的行数和列数相等，则 Microsoft Excel 会从区域的每一列创建自定义列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-153">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span></span> <span data-ttu-id="14bff-154">如果省略此参数，并且该范围中的列数多于行数，则 Microsoft Excel 会从区域的每一行创建自定义列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-154">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span></span></param>
        <summary><span data-ttu-id="14bff-155">为自定义自动填充和/或自定义排序添加自定义列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-155">Adds a custom list for custom autofill and/or custom sort.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-156">如果要添加的列表已经存在，则本方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="14bff-156">If the list you're trying to add already exists, this method does nothing.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-157">返回 <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> 一个集合，该集合代表"工具"菜单Add-Ins对话框中 (列出的) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-157">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-158">获取一组对象，这些对象代表 Excel 中当前可用或打开的所有加载项，而不 <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> 考虑它们是否已安装。</span><span class="sxs-lookup"><span data-stu-id="14bff-158">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span></span></summary>
        <value><span data-ttu-id="14bff-159">对象的集合，这些对象代表 Excel 中当前可用或 <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> 打开的所有加载项。</span><span class="sxs-lookup"><span data-stu-id="14bff-159">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-160">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-161">如果 Microsoft Excel 在执行拖放编辑操作过程中，在覆盖非空单元格之前显示一条消息，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-161"><b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-162">返回或设置替换启动文件夹的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-162">Returns or sets the name of the alternate startup folder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-163">返回或设置一 <b>个boolean</b> 类型的值 ，表示是否使用 ClearType 显示菜单、 功能区以及对话框文本中的字体。</span><span class="sxs-lookup"><span data-stu-id="14bff-163">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span></span> <span data-ttu-id="14bff-164">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-164">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-166">即使关闭 Microsoft Windows 的 ClearType 设置，将此属性设置为 <b>True</b> 也会替代 Windows 设置，并在所有 Microsoft Office 应用程序中使用 ClearType。</span><span class="sxs-lookup"><span data-stu-id="14bff-166">Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-167">返回 <see cref="T:Microsoft.Office.Core.AnswerWizard" /> Microsoft Excel 的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-167">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-168">返回一个对象，该对象代表指定对象的创建者 (可以使用 OLE 自动化对象的此属性返回该对象 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 的应用程序) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-168">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-169">返回一个 <b>Boolean</b> 类型的值，该值表示 Microsoft Excel 中的 XML 功能是否可用。</span><span class="sxs-lookup"><span data-stu-id="14bff-169">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-170">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="14bff-170">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-171">如果 Microsoft Excel 打开带有链接的文件时询问用户是否更新链接，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-171"><b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span></span> <span data-ttu-id="14bff-172">如果 Microsoft Excel 自动更新链接并且不显示对话框，则该值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-172"><b>False</b> if links are automatically updated with no dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-173">返回一 <see cref="T:Microsoft.Office.Core.IAssistance" /> 个对象，该对象short_Excel2007帮助查看器Microsoft Office对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-173">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span></span> <span data-ttu-id="14bff-174">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-174">Read-only.</span></span></summary>
        <value><span data-ttu-id="14bff-175"><b>IAssistance</b></span><span class="sxs-lookup"><span data-stu-id="14bff-175"><b>IAssistance</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-176"><b>IAssistance</b> 对象使开发人员显示自定义帮助和安装在办公室帮助查看器中的 Office 的帮助。</span><span class="sxs-lookup"><span data-stu-id="14bff-176">The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-177">返回 Microsoft <see cref="T:Microsoft.Office.Core.Assistant" /> Excel 的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-177">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-178">返回 <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> 一个对象，该对象代表 Microsoft Excel 自动更正属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-179">如果 Microsoft Excel 按照键入的内容自动设置超链接的格式，则该值为 <b>True</b>（默认）。</span><span class="sxs-lookup"><span data-stu-id="14bff-179"><b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span></span> <span data-ttu-id="14bff-180">如果 Excel 不按照键入的内容自动设置超链接的格式，则该值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-180"><b>False</b> if Excel does not automatically format hyperlinks as you type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-181">返回或设置一 <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> 个常量，该常量代表 Microsoft Excel 以编程方式打开文件时使用的安全模式。</span><span class="sxs-lookup"><span data-stu-id="14bff-181">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-182">当应用程序启动时，此属性将自动设置为 <b>msoAutomationSecurityLow</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-182">This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started.</span></span> <span data-ttu-id="14bff-183">因此，为了避免破坏依赖于默认设置的解决方案，您应该注意，此属性重置为 <b>msoAutomationSecurityLow</b> 在以编程方式打开文件后。</span><span class="sxs-lookup"><span data-stu-id="14bff-183">Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file.</span></span> <span data-ttu-id="14bff-184">另外，在以编程方式打开文件前后，还应该立即对本属性进行设置，以避免恶意破坏。</span><span class="sxs-lookup"><span data-stu-id="14bff-184">Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</span></span></para>
          <para><span data-ttu-id="14bff-185">
            <b>MsoAutomationSecurity</b> 可以是其中一个 <b>MsoAutomationSecurity</b> 常量:</span><span class="sxs-lookup"><span data-stu-id="14bff-185">
            <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="14bff-186">
                <b>msoAutomationSecurityByUI</b>   使用"安全"对话框中<b>指定的</b>设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-186">
                <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-187">
                <b>msoAutomationSecurityForceDisable</b>   禁用以编程方式打开的所有文件中的所有宏，而不显示任何安全警报。</span><span class="sxs-lookup"><span data-stu-id="14bff-187">
                <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-188">
                <b>msoAutomationSecurityLow</b>   启用所有宏。</span><span class="sxs-lookup"><span data-stu-id="14bff-188">
                <b>msoAutomationSecurityLow</b>  Enables all macros.</span></span> <span data-ttu-id="14bff-189">此为启动应用程序时的默认值。</span><span class="sxs-lookup"><span data-stu-id="14bff-189">This is the default value when the application is started.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-190">设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> <b>False</b> 不会影响警报，并且不会影响安全警告。</span><span class="sxs-lookup"><span data-stu-id="14bff-190">Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings.</span></span> <span data-ttu-id="14bff-191">该 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 设置不适用于安全警告。</span><span class="sxs-lookup"><span data-stu-id="14bff-191">The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings.</span></span> <span data-ttu-id="14bff-192">例如，如果用户将 <b>DisplayAlerts</b> 等于 <b>False，</b> 将 <b>AutomationSecurity</b> 设置为 <b>msoAutomationSecurityByUI，</b>而用户位于中等安全级别，则宏运行时将显示安全警告。</span><span class="sxs-lookup"><span data-stu-id="14bff-192">For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running.</span></span> <span data-ttu-id="14bff-193">这使宏可以捕获文件打开错误，而仍将显示安全警告如果成功打开文件。</span><span class="sxs-lookup"><span data-stu-id="14bff-193">This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-194">如果在向格式设置为百分比的单元格中输入数据时，并不自动将该数据乘以 100，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-194"><b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-195">返回 <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> 一个对象，该对象将定期备份所有文件格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-195">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-196">有效的时间间隔为从 1 到 120 的所有数值。</span><span class="sxs-lookup"><span data-stu-id="14bff-196">Valid time intervals are whole numbers from 1 to 120.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-197">返回 Microsoft Excel 内部版本号。</span><span class="sxs-lookup"><span data-stu-id="14bff-197">Returns the Microsoft Excel build number.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-198">除非确定需要知道内部版本号，否则测试该属性通常 <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> 更安全。</span><span class="sxs-lookup"><span data-stu-id="14bff-198">It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-199">计算所有打开的工作簿</span><span class="sxs-lookup"><span data-stu-id="14bff-199">Calculates all open workbooks</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-200"><b>如此</b> 如果在将工作簿保存到磁盘之前计算工作簿 (属性设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> <b>xlManual</b>) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-200"><b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span></span> <span data-ttu-id="14bff-201">即使更改该属性，也保留 <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> 此属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-201">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-202">强制对所有打开工作簿中的数据进行完整计算。</span><span class="sxs-lookup"><span data-stu-id="14bff-202">Forces a full calculation of the data in all open workbooks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-203">对于所有打开的工作簿，强制数据的完整计算并重建从属关系。</span><span class="sxs-lookup"><span data-stu-id="14bff-203">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-204">从属关系是取决于其他单元格的公式。</span><span class="sxs-lookup"><span data-stu-id="14bff-204">Dependencies are the formulas that depend on other cells.</span></span> <span data-ttu-id="14bff-205">例如，公式“=A1”取决于单元格 A1。</span><span class="sxs-lookup"><span data-stu-id="14bff-205">For example, the formula "=A1" depends on cell A1.</span></span> <span data-ttu-id="14bff-206"><b>CalculateFullRebuild</b> 方法类似于重新输入所有公式。</span><span class="sxs-lookup"><span data-stu-id="14bff-206">The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-207">运行对 OLEDB 和 OLAP 数据源的所有待定查询。</span><span class="sxs-lookup"><span data-stu-id="14bff-207">Runs all pending queries to OLEDB and OLAP data sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-208">返回或设置计算模式。</span><span class="sxs-lookup"><span data-stu-id="14bff-208">Returns or sets the calculation mode.</span></span> <span data-ttu-id="14bff-209">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-209">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-210">对于 OLAP 数据源，此属性只能返回或被设为 <b>xlNormal</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-210">For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</span></span></para>
          <para><span data-ttu-id="14bff-211">
            <b>XlCalculation</b> 可以是以下 <b>XlCalculation</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-211">
            <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-212">
            <b>xlCalculationAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-212">
            <b>xlCalculationAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-213">
            <b>xlCalculationManual</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-213">
            <b>xlCalculationManual</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-214">
            <b>xlCalculationSmaticutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-214">
            <b>xlCalculationSemiautomatic</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-215">设置或返回 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> 一个常量，该常量指定在执行计算时可能会中断 Microsoft Excel 的键。</span><span class="sxs-lookup"><span data-stu-id="14bff-215">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-216">
            <b>XlCalculationInterruptKey</b> 可以是以下 <b>XlCalculationInterruptKey</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-216">
            <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-217">
            <b>xlAnyKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-217">
            <b>xlAnyKey</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-218">
            <b>xlEscKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-218">
            <b>xlEscKey</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-219">
            <b>xlNoKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-219">
            <b>xlNoKey</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-220">返回一个常量，该常量指示在 Microsoft Excel 中执行的任何计算的应用程序 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> 的计算状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-220">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-221">
            <b>XlCalculationState</b> 可以是以下 <b>XlCalculationState</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-221">
            <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-222">
            <b>xlCalculating</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-222">
            <b>xlCalculating</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-223">
            <b>xlDone</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-223">
            <b>xlDone</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-224">
            <b>xlPending</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-224">
            <b>xlPending</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-225">返回一个数字，其最右侧两位表示计算引擎的次要版本号，而左侧的其他位表示 Microsoft Office Spreadsheet 组件的主要版本号。</span><span class="sxs-lookup"><span data-stu-id="14bff-225">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-226">如果工作簿保存在早期版本的 Excel 中，并且工作簿尚未完全重新计算，则此属性返回 0。</span><span class="sxs-lookup"><span data-stu-id="14bff-226">If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="14bff-227">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-227">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-228">数组的索引。</span><span class="sxs-lookup"><span data-stu-id="14bff-228">An index to the array.</span></span> <span data-ttu-id="14bff-229">仅当本属性返回数组时此参数才有用（有关详细信息，请参阅“注解”部分）。</span><span class="sxs-lookup"><span data-stu-id="14bff-229">This argument is used only when the property returns an array (for more information, see the Remarks section).</span></span></param>
        <summary><span data-ttu-id="14bff-230">返回关于调用 Visual Basic 的信息（有关详细信息，请参阅“注解”部分）。</span><span class="sxs-lookup"><span data-stu-id="14bff-230">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-231">本属性返回关于调用 Visual Basic 的信息，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="14bff-231">This property returns information about how Visual Basic was called, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-232">在单个单元格中输入的自定义函数</span><span class="sxs-lookup"><span data-stu-id="14bff-232">A custom function entered in a single cell</span></span></term>
              <description><span data-ttu-id="14bff-233">指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 该单元格的对象</span><span class="sxs-lookup"><span data-stu-id="14bff-233">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-234">在单元格区域中作为数组公式一部分的自定义函数</span><span class="sxs-lookup"><span data-stu-id="14bff-234">A custom function that is part of an array formula in a range of cells</span></span></term>
              <description><span data-ttu-id="14bff-235">指定该单元格区域的<b>区域</b>对象</span><span class="sxs-lookup"><span data-stu-id="14bff-235">A <b>Range</b> object specifying that range of cells</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-236">Auto_Open、 Auto_Close 、 Auto_Activate 或 Auto_Deactivate 宏</span><span class="sxs-lookup"><span data-stu-id="14bff-236">An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</span></span></term>
              <description><span data-ttu-id="14bff-237">以文本形式返回的文档名</span><span class="sxs-lookup"><span data-stu-id="14bff-237">The name of the document as text</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-238">由 or 属性设置的 <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> 宏</span><span class="sxs-lookup"><span data-stu-id="14bff-238">A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</span></span></term>
              <description><span data-ttu-id="14bff-239">该宏所应用的图表对象标识符或单元格引用（若适用）的名称</span><span class="sxs-lookup"><span data-stu-id="14bff-239">The name of the chart object identifier or cell reference (if applicable) to which the macro applies</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-240">“工具”菜单中的“宏”对话框，或上述之外的其他调用进程</span><span class="sxs-lookup"><span data-stu-id="14bff-240">The Macro dialog box (Tools menu), or any caller not described above</span></span></term>
              <description><span data-ttu-id="14bff-241">#REF！</span><span class="sxs-lookup"><span data-stu-id="14bff-241">The #REF!</span></span> <span data-ttu-id="14bff-242">错误值</span><span class="sxs-lookup"><span data-stu-id="14bff-242">error value</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-243">本属性不应再被使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-243">This property should not be used.</span></span> <span data-ttu-id="14bff-244">语音批注已从 Microsoft Excel 中删除。</span><span class="sxs-lookup"><span data-stu-id="14bff-244">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-245">本属性不应再被使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-245">This property should not be used.</span></span> <span data-ttu-id="14bff-246">语音批注已从 Microsoft Excel 中删除。</span><span class="sxs-lookup"><span data-stu-id="14bff-246">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-247">显示在主 Microsoft Excel 窗口的标题栏中的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-247">The name that appears in the title bar of the main Microsoft Excel window.</span></span> <span data-ttu-id="14bff-248">如果未设置该名称，或将其设置为 <b>Empty</b>, 则此属性返回“Microsoft Excel”。</span><span class="sxs-lookup"><span data-stu-id="14bff-248">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-249">如果启用单元格拖放功能，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-249"><b>True</b> if dragging and dropping cells is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-250">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-250">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span></span> <span data-ttu-id="14bff-251">如果活动文档不是工作表，则此属性将失败。</span><span class="sxs-lookup"><span data-stu-id="14bff-251">If the active document isn’t a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-252">由于该属性是 Range 对象的默认属性，因此您可以紧接在 Cells 关键字之后指定行和 <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> <b>列</b>索引。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-252">Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="14bff-253">有关详细信息，请参阅 <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-253">For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters"><span data-ttu-id="14bff-254">必需 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-254">Required <b>Double</b>.</span></span> <span data-ttu-id="14bff-255">指定要转换为磅的厘米值。</span><span class="sxs-lookup"><span data-stu-id="14bff-255">Specifies the centimeter value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="14bff-256">将计量单位从厘米转换为磅（一磅等于 0.035 厘米）。</span><span class="sxs-lookup"><span data-stu-id="14bff-256">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-257"><b>True</b> 将导致新创建文档中的所有图表使用单元格引用跟踪行为。</span><span class="sxs-lookup"><span data-stu-id="14bff-257"><b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span></span> <span data-ttu-id="14bff-258"><b>Boolean</b> (bool in C#) .</span><span class="sxs-lookup"><span data-stu-id="14bff-258"><b>Boolean</b> (bool in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-259">返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的图表工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort"><span data-ttu-id="14bff-260">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-260">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-261">允许对 Range 执行 <b>重新计算</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-261">Allows recalculation to be performed for a <b>Range</b>.</span></span></param>
        <summary><span data-ttu-id="14bff-262">停止 Microsoft Excel 应用程序中的重新计算。</span><span class="sxs-lookup"><span data-stu-id="14bff-262">Stops recalculation in a Microsoft Excel application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word"><span data-ttu-id="14bff-263">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-263">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-264">要检查的单词。</span><span class="sxs-lookup"><span data-stu-id="14bff-264">The word you want to check.</span></span></param>
        <param name="CustomDictionary"><span data-ttu-id="14bff-265">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-265">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-266">一个字符串，它表示自定义词典的文件名，如果在主词典中找不到单词，则会到此词典中查找。</span><span class="sxs-lookup"><span data-stu-id="14bff-266">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="14bff-267">如果省略此参数，则使用当前指定的词典。</span><span class="sxs-lookup"><span data-stu-id="14bff-267">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="14bff-268">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-268">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-269">如果为 <b>True</b>，则 Microsoft Excel 忽略所有字母都是大写的单词。</span><span class="sxs-lookup"><span data-stu-id="14bff-269"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="14bff-270">如果为 <b>False</b>，则 Microsoft Excel 检查所有字母都是大写的单词。</span><span class="sxs-lookup"><span data-stu-id="14bff-270"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="14bff-271">如果省略此参数，将使用当前的设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-271">If this argument is omitted, the current setting will be used.</span></span></param>
        <summary><span data-ttu-id="14bff-272">对单个单词进行拼写检查。</span><span class="sxs-lookup"><span data-stu-id="14bff-272">Checks the spelling of a single word.</span></span> <span data-ttu-id="14bff-273">如果其中一个词典中找到了单词，则返回 <b>True;</b> 如果 <b>未找到</b> 单词，则返回 False。</span><span class="sxs-lookup"><span data-stu-id="14bff-273">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="14bff-274">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-274">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-275">指明要返回的数组元素。</span><span class="sxs-lookup"><span data-stu-id="14bff-275">The array element to be returned.</span></span> <span data-ttu-id="14bff-276">若省略此参数，该属性返回当前剪贴板上所有格式的数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-276">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span></span> <span data-ttu-id="14bff-277">有关详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="14bff-277">For more information, see the Remarks section.</span></span></param>
        <summary><span data-ttu-id="14bff-278">以数值数组的形式返回剪贴板上当前的格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-278">Returns the formats that are currently on the Clipboard as an array of numeric values.</span></span> <span data-ttu-id="14bff-279">可用数组中每个元素与“备注”部分所述的适当常量相比较，以判断剪贴板中是否包含特定的格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-279">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-280">该属性返回数值数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-280">This property returns an array of numeric values.</span></span> <span data-ttu-id="14bff-281">若要确定剪贴板上是否包含特定格式，请将数组的每个元素与下列常量之 <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> 一进行比较：</span><span class="sxs-lookup"><span data-stu-id="14bff-281">To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</span></span></para>
          <para><span data-ttu-id="14bff-282">
            <b>xlClipboardFormatBIFF</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-282">
            <b>xlClipboardFormatBIFF</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-283">
            <b>xlClipboardFormatBIFF2</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-283">
            <b>xlClipboardFormatBIFF2</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-284">
            <b>xlClipboardFormatBIFF3</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-284">
            <b>xlClipboardFormatBIFF3</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-285">
            <b>xlClipboardFormatBIFF4</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-285">
            <b>xlClipboardFormatBIFF4</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-286">
            <b>xlClipboardFormatBinary</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-286">
            <b>xlClipboardFormatBinary</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-287">
            <b>xlClipboardFormatBitmap</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-287">
            <b>xlClipboardFormatBitmap</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-288">
            <b>xlClipboardFormatCGM</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-288">
            <b>xlClipboardFormatCGM</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-289">
            <b>xlClipboardFormatCSV</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-289">
            <b>xlClipboardFormatCSV</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-290">
            <b>xlClipboardFormatDIF</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-290">
            <b>xlClipboardFormatDIF</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-291">
            <b>xlClipboardFormatDspText</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-291">
            <b>xlClipboardFormatDspText</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-294">
            <b>xlClipboardFormatLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-294">
            <b>xlClipboardFormatLink</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-295">
            <b>xlClipboardFormatLinkSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-295">
            <b>xlClipboardFormatLinkSource</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-297">
            <b>xlClipboardFormatMovie</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-297">
            <b>xlClipboardFormatMovie</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-298">
            <b>xlClipboardFormatNative</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-298">
            <b>xlClipboardFormatNative</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-300">
            <b>xlClipboardFormatObjectLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-300">
            <b>xlClipboardFormatObjectLink</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-302">
            <b>xlClipboardFormatPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-302">
            <b>xlClipboardFormatPICT</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-304">
            <b>xlClipboardFormatRTF</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-304">
            <b>xlClipboardFormatRTF</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-306">
            <b>xlClipboardFormatStandardFont</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-306">
            <b>xlClipboardFormatStandardFont</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-307">
            <b>xlClipboardFormatStandardScale</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-307">
            <b>xlClipboardFormatStandardScale</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-308">
            <b>xlClipboardFormatSYLK</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-308">
            <b>xlClipboardFormatSYLK</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-309">
            <b>xlClipboardFormatTable</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-309">
            <b>xlClipboardFormatTable</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-310">
            <b>xlClipboardFormatText</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-310">
            <b>xlClipboardFormatText</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-311">
            <b>xlClipboardFormatToolFace</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-311">
            <b>xlClipboardFormatToolFace</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-313">
            <b>xlClipboardFormatVALU</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-313">
            <b>xlClipboardFormatVALU</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-314">
            <b>xlClipboardFormatWK1</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-314">
            <b>xlClipboardFormatWK1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-315">获取或设置用于运行 XLL 加载项中的用户定义函数 (HPC) 群集连接器的高性能计算的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-315">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></summary>
        <value><span data-ttu-id="14bff-316">用于运行 XLL 加载项中的用户定义函数 (HPC) 群集连接器的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-316">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-317">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-317">Read/write.</span></span></para>
          <para><span data-ttu-id="14bff-318">该属性的设置对应于"Excel 选项"对话框高级类别中的"公式"下的群集类型 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 下拉框。</span><span class="sxs-lookup"><span data-stu-id="14bff-318">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="14bff-319">
            <b>注意</b>：若要指定 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 属性，必须在 HPC 群集连接器 (高性能) 计算。</span><span class="sxs-lookup"><span data-stu-id="14bff-319">
            <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="14bff-320">群集连接器可用来在 HPC 群集上远程运行群集安全的 XLL 函数，以提高性能。</span><span class="sxs-lookup"><span data-stu-id="14bff-320">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="14bff-321">在可以指定属性之前，必须使用该属性允许 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Microsoft <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> Excel 2010 在 XLL 加载项中运行用户定义函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-321">Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-322">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-323">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有列。</span><span class="sxs-lookup"><span data-stu-id="14bff-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span></span> <span data-ttu-id="14bff-324">如果活动文档不是工作表，则 <b>Columns</b> 属性失效。</span><span class="sxs-lookup"><span data-stu-id="14bff-324">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-325">返回 <see cref="T:Microsoft.Office.Core.COMAddIns" /> Microsoft Excel 的集合，该集合代表当前安装的 COM 加载项。</span><span class="sxs-lookup"><span data-stu-id="14bff-325">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-326">返回一 <see cref="T:Microsoft.Office.Core.CommandBars" /> 个代表 Excel 命令栏的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-326">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-327">此属性返回一组可用于应用程序的内置命令栏和自定义命令栏。</span><span class="sxs-lookup"><span data-stu-id="14bff-327">This property returns the set of built-in and custom command bars available to the application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-328">返回或设置 Microsoft Excel for the Macintosh 中命令加下划线的状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-328">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> 可以是以下 <b>XlCommandUnderlines 常量</b> 之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-330">
            <b>xlCommandUnderlinesOn</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-330">
            <b>xlCommandUnderlinesOn</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-331">
            <b>xlCommandUnderlinesOff</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-331">
            <b>xlCommandUnderlinesOff</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-333">在 Microsoft Excel for Windows 中，该属性总是返回 <b>xlCommandUnderlinesOn</b>，该属性只能设置为 <b>xlCommandUnderlinesOn</b>，不允许设置为其他任何值。</span><span class="sxs-lookup"><span data-stu-id="14bff-333">In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-334">如果手写识别只能识别数字和标点符号，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-334"><b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-p145">该属性仅在使用 Microsoft Windows for Pen Computing 时可用。如果试图在其他操作系统中对该属性进行设置将产生错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-p145">This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-337">如果 Microsoft Excel 显示从右到左语言的控制字符，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-337"><b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-338">只有在安装和选择了从右到左语言支持时，才可以设置该属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-338">This property can be set only when right to left language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula"><span data-ttu-id="14bff-339">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-339">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-340">包含 <b>要</b> 转换的公式的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-340">A <b>String</b> that contains the formula you want to convert.</span></span> <span data-ttu-id="14bff-341">必须为有效的公式，并且必须以等号开头。</span><span class="sxs-lookup"><span data-stu-id="14bff-341">This must be a valid formula, and it must begin with an equal sign.</span></span></param>
        <param name="FromReferenceStyle"><span data-ttu-id="14bff-342">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-342">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="14bff-343">公式的引用样式。<b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一<b>：xlA1</b><b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="14bff-343">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span></span></param>
        <param name="ToReferenceStyle"><span data-ttu-id="14bff-344">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-344">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="14bff-345">要返回的引用样式。</span><span class="sxs-lookup"><span data-stu-id="14bff-345">The reference style you want returned.</span></span> <span data-ttu-id="14bff-346">如果省略此参数，则引用样式不变;公式保持由 指定的样式 <paramref name="FromReferenceStyle" /> 。XlReferenceStyle 可以是以下 XlReferenceStyle 常量之一。</span><span class="sxs-lookup"><span data-stu-id="14bff-346">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span></span> <span data-ttu-id="14bff-347"><b>xlA1 </b> <b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="14bff-347"><b>xlA1 </b><b>xlR1C1</b></span></span></param>
        <param name="ToAbsolute"><span data-ttu-id="14bff-348">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-348">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="14bff-349">指定转换的引用类型。</span><span class="sxs-lookup"><span data-stu-id="14bff-349">Specifies the converted reference type.</span></span> <span data-ttu-id="14bff-350">如果省略此参数，则不更改引用类型。<b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一<b>：xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span><span class="sxs-lookup"><span data-stu-id="14bff-350">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span></span></param>
        <param name="RelativeTo"><span data-ttu-id="14bff-351">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-351">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-352">一个介于 0（零）和 100 之间的十进制数字，用于指定“整数最优”<b></b>百分比公差。</span><span class="sxs-lookup"><span data-stu-id="14bff-352">Optional <b>Variant</b>.</span></span> <span data-ttu-id="14bff-353">包含 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个单元格的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-353">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span></span> <span data-ttu-id="14bff-354">相对引用与此单元格相对。</span><span class="sxs-lookup"><span data-stu-id="14bff-354">Relative references relate to this cell.</span></span></param>
        <summary><span data-ttu-id="14bff-355">在 A1 和 R1C1 引用样式之间转换、在相对和绝对引用之间转换公式中的单元格引用，或者同时进行这两种转换。</span><span class="sxs-lookup"><span data-stu-id="14bff-355">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-356">如果对象与单元格一同剪切、复制、提取和排序，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-356"><b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-357">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="14bff-357">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="14bff-358">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="14bff-358">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-359"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-359">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="14bff-360">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="14bff-360">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-361">返回或设置 Microsoft Excel 中鼠标指针的外观。</span><span class="sxs-lookup"><span data-stu-id="14bff-361">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> 可以是以下 <b>XlMousePointer</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-363">
            <b>xlDefault</b> 默认指针。</span><span class="sxs-lookup"><span data-stu-id="14bff-363">
            <b>xlDefault</b> The default pointer.</span></span></para>
          <para><span data-ttu-id="14bff-364">
            <b>xlIBeam</b> I 形指针。</span><span class="sxs-lookup"><span data-stu-id="14bff-364">
            <b>xlIBeam</b> The I-beam pointer.</span></span></para>
          <para><span data-ttu-id="14bff-365">
            <b>xlNorthwestArrow</b> 方向箭头指针。</span><span class="sxs-lookup"><span data-stu-id="14bff-365">
            <b>xlNorthwestArrow</b> The northwest arrow pointer.</span></span></para>
          <para><span data-ttu-id="14bff-366">
            <b>xlWait</b> 沙漏指针。</span><span class="sxs-lookup"><span data-stu-id="14bff-366">
            <b>xlWait</b> The hourglass pointer.</span></span></para>
          <para><span data-ttu-id="14bff-367">当宏停止运行时，<b>Cursor</b> 属性不会自动重设。</span><span class="sxs-lookup"><span data-stu-id="14bff-367">The <b>Cursor</b> property isn't reset automatically when the macro stops running.</span></span> <span data-ttu-id="14bff-368">在宏停止运行前，应将指针重设为 <b>xlDefault</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-368">You should reset the pointer to <b>xlDefault</b> before your macro stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-369">返回或设置一个值，此值用于表明使用的是可见光标还是逻辑光标。</span><span class="sxs-lookup"><span data-stu-id="14bff-369">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span></span> <span data-ttu-id="14bff-370">可为以下常量之一：<b>xlVisualCursor</b> 或 <b>xlLogicalCursor</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-370">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-371">对于所选择或安装的不同语言支持（例如，英语（美国）），这些常量可能不可用。</span><span class="sxs-lookup"><span data-stu-id="14bff-371">These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-372">返回已定义的自定义序列的数目（包括内置序列）。</span><span class="sxs-lookup"><span data-stu-id="14bff-372">Returns the number of defined custom lists (including built-in lists).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-373">返回或设置剪切或复制模式的状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-373">Returns or sets the status of Cut or Copy mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> 可以是以下 <b>XlCutCopyMode</b> 常量之一。</span><span class="sxs-lookup"><span data-stu-id="14bff-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-375">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-375">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-376">不在剪切或复制模式下</span><span class="sxs-lookup"><span data-stu-id="14bff-376">Not in Cut or Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-377">
                <b>xlCopy</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-377">
                <b>xlCopy</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-378">复制模式</span><span class="sxs-lookup"><span data-stu-id="14bff-378">In Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-379">
                <b>xlCut</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-379">
                <b>xlCut</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-380">剪切模式</span><span class="sxs-lookup"><span data-stu-id="14bff-380">In Cut mode</span></span></description>
            </item>
          </list>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-381">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-381">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-382">取消剪切或复制模式并清除移动边框。</span><span class="sxs-lookup"><span data-stu-id="14bff-382">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-383">
                <b>True</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-383">
                <b>True</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-384">取消剪切或复制模式并清除移动边框。</span><span class="sxs-lookup"><span data-stu-id="14bff-384">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-385">返回或设置数据输入模式，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="14bff-385">Returns or sets Data Entry mode, as shown in the table below.</span></span> <span data-ttu-id="14bff-386">处于“数据输入”模式时，仅可在当前选定区域的未锁定单元格中输入数据。</span><span class="sxs-lookup"><span data-stu-id="14bff-386">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="14bff-387">
                <b>xlOn</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-387">
                <b>xlOn</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-388">“数据输入”模式处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-388">Data Entry mode is turned on.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-389">
                <b>xlOff</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-389">
                <b>xlOff</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-390">“数据输入”模式处于关闭状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-390">Data Entry mode is turned off.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-391">
                <b>xlStrict</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-391">
                <b>xlStrict</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-392">数据输入模式已打开，按 ESC 不会关闭它。</span><span class="sxs-lookup"><span data-stu-id="14bff-392">Data Entry mode is turned on and pressing ESC won't turn it off.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-393">返回 Excel 收到的最后一条 DDE 确认消息中包含的特定于应用程序的 DDE 返回代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-393">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="14bff-394">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-394">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-395">方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</span><span class="sxs-lookup"><span data-stu-id="14bff-395">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="String"><span data-ttu-id="14bff-396">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-396">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-397">接收应用程序中定义的消息。</span><span class="sxs-lookup"><span data-stu-id="14bff-397">The message defined in the receiving application.</span></span></param>
        <summary><span data-ttu-id="14bff-398">通过指定的 DDE 通道在另一个应用程序中运行一条命令或执行其他操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-398">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-399"><b>DDEExecute</b> 方法用于向另一个应用程序发送命令。</span><span class="sxs-lookup"><span data-stu-id="14bff-399">The <b>DDEExecute</b> method is designed to send commands to another application.</span></span> <span data-ttu-id="14bff-400">您还可以使用它将击键发送到另一个应用程序，尽管该方法是发送 <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> 击键的首选方法。</span><span class="sxs-lookup"><span data-stu-id="14bff-400">You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes.</span></span> <span data-ttu-id="14bff-401">该参数可以指定与 Alt、Ctrl 或 Shift 组合的任何单个键，也可以指定 <paramref name="String" /> 这些键的任意组合。</span><span class="sxs-lookup"><span data-stu-id="14bff-401">The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys.</span></span> <span data-ttu-id="14bff-402">每个键可由一个或多个字符表示，例如 "a" 表示字符 a，"{ENTER}" 表示 Enter 键。</span><span class="sxs-lookup"><span data-stu-id="14bff-402">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="14bff-p159">若要指定那些没有屏幕回显该字符的键（例如，Enter 或 Tab），请使用下表所列的代码来表示相应的键。表中的每个代码表示键盘上的一个对应键。</span><span class="sxs-lookup"><span data-stu-id="14bff-p159">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-405">Backspace</span><span class="sxs-lookup"><span data-stu-id="14bff-405">BACKSPACE</span></span></term>
              <description><span data-ttu-id="14bff-406">{BACKSPACE} 或 {BS}</span><span class="sxs-lookup"><span data-stu-id="14bff-406">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-407">Break</span><span class="sxs-lookup"><span data-stu-id="14bff-407">BREAK</span></span></term>
              <description><span data-ttu-id="14bff-408">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="14bff-408">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-409">Caps Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-409">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="14bff-410">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-410">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-411">清除</span><span class="sxs-lookup"><span data-stu-id="14bff-411">CLEAR</span></span></term>
              <description><span data-ttu-id="14bff-412">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="14bff-412">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-413">Delete 或 Del</span><span class="sxs-lookup"><span data-stu-id="14bff-413">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="14bff-414">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="14bff-414">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-415">向下键</span><span class="sxs-lookup"><span data-stu-id="14bff-415">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="14bff-416">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="14bff-416">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-417">结束</span><span class="sxs-lookup"><span data-stu-id="14bff-417">END</span></span></term>
              <description><span data-ttu-id="14bff-418">{END}</span><span class="sxs-lookup"><span data-stu-id="14bff-418">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-419">Enter</span><span class="sxs-lookup"><span data-stu-id="14bff-419">ENTER</span></span></term>
              <description><span data-ttu-id="14bff-420">~ (波浪符) </span><span class="sxs-lookup"><span data-stu-id="14bff-420">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-421">Enter（数字小键盘）</span><span class="sxs-lookup"><span data-stu-id="14bff-421">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="14bff-422">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="14bff-422">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-423">Esc</span><span class="sxs-lookup"><span data-stu-id="14bff-423">ESC</span></span></term>
              <description><span data-ttu-id="14bff-424">{ESCAPE} 或 {ESC}</span><span class="sxs-lookup"><span data-stu-id="14bff-424">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-425">F1 到 F15</span><span class="sxs-lookup"><span data-stu-id="14bff-425">F1 through F15</span></span></term>
              <description><span data-ttu-id="14bff-426">{F1} 到 {F15}</span><span class="sxs-lookup"><span data-stu-id="14bff-426">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-427">帮助</span><span class="sxs-lookup"><span data-stu-id="14bff-427">HELP</span></span></term>
              <description><span data-ttu-id="14bff-428">{HELP}</span><span class="sxs-lookup"><span data-stu-id="14bff-428">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-429">主页</span><span class="sxs-lookup"><span data-stu-id="14bff-429">HOME</span></span></term>
              <description><span data-ttu-id="14bff-430">{HOME}</span><span class="sxs-lookup"><span data-stu-id="14bff-430">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-431">Ins</span><span class="sxs-lookup"><span data-stu-id="14bff-431">INS</span></span></term>
              <description><span data-ttu-id="14bff-432">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="14bff-432">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-433">向左键</span><span class="sxs-lookup"><span data-stu-id="14bff-433">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-434">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="14bff-434">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-435">Num Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-435">NUM LOCK</span></span></term>
              <description><span data-ttu-id="14bff-436">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-436">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-437">PageDown</span><span class="sxs-lookup"><span data-stu-id="14bff-437">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="14bff-438">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="14bff-438">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-439">PageUp</span><span class="sxs-lookup"><span data-stu-id="14bff-439">PAGE UP</span></span></term>
              <description><span data-ttu-id="14bff-440">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="14bff-440">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-441">Return</span><span class="sxs-lookup"><span data-stu-id="14bff-441">RETURN</span></span></term>
              <description><span data-ttu-id="14bff-442">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="14bff-442">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-443">向右键</span><span class="sxs-lookup"><span data-stu-id="14bff-443">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-444">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="14bff-444">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-445">Scroll Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-445">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="14bff-446">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-446">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-447">Tab</span><span class="sxs-lookup"><span data-stu-id="14bff-447">TAB</span></span></term>
              <description><span data-ttu-id="14bff-448">{TAB}</span><span class="sxs-lookup"><span data-stu-id="14bff-448">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-449">向上键</span><span class="sxs-lookup"><span data-stu-id="14bff-449">UP ARROW</span></span></term>
              <description><span data-ttu-id="14bff-450">{UP}</span><span class="sxs-lookup"><span data-stu-id="14bff-450">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-p160">还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定前面提到的这些键的组合键，请使用下表的用法。</span><span class="sxs-lookup"><span data-stu-id="14bff-p160">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-453">Shift</span><span class="sxs-lookup"><span data-stu-id="14bff-453">SHIFT</span></span></term>
              <description><span data-ttu-id="14bff-454">+（加号）</span><span class="sxs-lookup"><span data-stu-id="14bff-454">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-455">Ctrl</span><span class="sxs-lookup"><span data-stu-id="14bff-455">CTRL</span></span></term>
              <description><span data-ttu-id="14bff-456">^ (点) </span><span class="sxs-lookup"><span data-stu-id="14bff-456">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-457">Alt</span><span class="sxs-lookup"><span data-stu-id="14bff-457">ALT</span></span></term>
              <description><span data-ttu-id="14bff-458">%（百分号）</span><span class="sxs-lookup"><span data-stu-id="14bff-458">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App"><span data-ttu-id="14bff-459">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-459">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-460">应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-460">The application name.</span></span></param>
        <param name="Topic"><span data-ttu-id="14bff-461">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-461">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-462">描述通道所指向的应用程序的有关信息，通常为该应用程序的一个文档。</span><span class="sxs-lookup"><span data-stu-id="14bff-462">Describes something in the application to which you're opening a channel — usually a document of that application.</span></span></param>
        <summary><span data-ttu-id="14bff-463">打开到一个应用程序的 DDE 通道。</span><span class="sxs-lookup"><span data-stu-id="14bff-463">Opens a DDE channel to an application.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-464">如果成功 <b>，DDEInitiate</b> 方法将返回打开的通道的编号。</span><span class="sxs-lookup"><span data-stu-id="14bff-464">If successful, the <b>DDEInitiate</b> method returns the number of the open channel.</span></span> <span data-ttu-id="14bff-465">所有后续 DDE 函数使用此数字来指定通道。</span><span class="sxs-lookup"><span data-stu-id="14bff-465">All subsequent DDE functions use this number to specify the channel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="14bff-466">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-466">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-467">方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</span><span class="sxs-lookup"><span data-stu-id="14bff-467">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="14bff-468">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-468">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-469">数据被发送到的项。</span><span class="sxs-lookup"><span data-stu-id="14bff-469">The item to which the data is to be sent.</span></span></param>
        <param name="Data"><span data-ttu-id="14bff-470">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-470">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-471">发送到应用程序的数据。</span><span class="sxs-lookup"><span data-stu-id="14bff-471">The data to be sent to the application.</span></span></param>
        <summary><span data-ttu-id="14bff-472">向应用程序发送数据。</span><span class="sxs-lookup"><span data-stu-id="14bff-472">Sends data to an application.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-473">如果本方法调用失效将产生错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-473">An error occurs if the method call doesn't succeed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="14bff-474">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-474">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-475">方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</span><span class="sxs-lookup"><span data-stu-id="14bff-475">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="14bff-476">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-476">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-477">需要进行查询的项。</span><span class="sxs-lookup"><span data-stu-id="14bff-477">The item to be requested.</span></span></param>
        <summary><span data-ttu-id="14bff-478">请求指定应用程序中的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-478">Requests information from the specified application.</span></span> <span data-ttu-id="14bff-479">该方法始终返回数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-479">This method always returns an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="14bff-480">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-480">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-481">方法返回的通道 <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 号。</span><span class="sxs-lookup"><span data-stu-id="14bff-481">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <summary><span data-ttu-id="14bff-482">关闭到另一个应用程序的通道。</span><span class="sxs-lookup"><span data-stu-id="14bff-482">Closes a channel to another application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-483">设置或返回用于小数分隔符的字符作为 <b>字符串</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-483">Sets or returns the character used for the decimal separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-484">返回或设置 Microsoft Excel 打开文件时使用的默认路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-484">Returns or sets the default path that Microsoft Excel uses when it opens files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-485">返回或设置保存文件的默认格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-485">Returns or sets the default format for saving files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-486">返回或设置 Microsoft Excel 显示新窗口和工作表时的默认方向。</span><span class="sxs-lookup"><span data-stu-id="14bff-486">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span></span> <span data-ttu-id="14bff-487">可为以下常量之一：<b>xlRTL</b>（从右到左）或 <b>xlLTR</b>（从左到右）。</span><span class="sxs-lookup"><span data-stu-id="14bff-487">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-488">由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-488">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-489">返回包含 Microsoft Excel 在将文档另存为网页或打开网页时所使用的全局应用程序 <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> 级属性的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-489">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-490">获取或设置在工作表由 VBA 代码计算时是否执行对 OLAP 数据源的异步查询。</span><span class="sxs-lookup"><span data-stu-id="14bff-490">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span></span> <span data-ttu-id="14bff-491">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-491">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-492"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-492"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-493">将 <b>DeferAsyncQueries</b> 属性设置为 <b>True</b> 可阻止在调用该方法之前执行 <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> 任何异步查询表单。</span><span class="sxs-lookup"><span data-stu-id="14bff-493">Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="14bff-494">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-494">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-495">要删除的自定义自动格式的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-495">The name of the custom autoformat to be removed.</span></span></param>
        <summary><span data-ttu-id="14bff-496">从图表的可用自动套用格式列表中删除自定义图表自动套用格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-496">Removes a custom chart autoformat from the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="14bff-497">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-497">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-498">自定义序列数字。</span><span class="sxs-lookup"><span data-stu-id="14bff-498">The custom list number.</span></span> <span data-ttu-id="14bff-499">此数字必须大于或等于 5（Microsoft Excel 有四个不可删除的内置自定义序列）。</span><span class="sxs-lookup"><span data-stu-id="14bff-499">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span></span></param>
        <summary><span data-ttu-id="14bff-500">删除一个自定义序列。</span><span class="sxs-lookup"><span data-stu-id="14bff-500">Deletes a custom list.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-501">如果列表数字小于 5 或者没有匹配的自定义序列，则使用本方法将产生错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-501">This method generates an error if the list number is less than 5 or if there's no matching custom list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-502">返回 <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> 一个集合，该集合代表所有内置对话框。</span><span class="sxs-lookup"><span data-stu-id="14bff-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-503">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-503">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-504">如果宏运行时 Microsoft Excel 显示特定的警告和消息，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-504"><b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-505">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-505">The default value is <b>True</b>.</span></span> <span data-ttu-id="14bff-506">如果不想在程序运行时受到提示和警告消息的干扰，则将此属性设置为 <b>False;</b> 当邮件需要响应时，Microsoft Excel 将选择默认响应。</span><span class="sxs-lookup"><span data-stu-id="14bff-506">Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</span></span></para>
          <para><span data-ttu-id="14bff-507">如果将此属性设置为 <b>False，</b>则 Microsoft Excel 在代码完成时将此属性设置为 <b>True，</b> 除非运行的是跨进程代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-507">If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</span></span></para>
          <para><span data-ttu-id="14bff-508">使用工作簿的方法覆盖现有文件时，"Overwrite"警报的默认值为" <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 否"，而当 <b>DisplayAlerts</b> 属性设置为 False 时，Excel 将选择"是" <b>响应</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-508">When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-509">如果能显示 Microsoft Office 剪贴板，则返回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-509">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-510">返回或设置单元格显示批注和标识符的方式。</span><span class="sxs-lookup"><span data-stu-id="14bff-510">Returns or sets the way cells display comments and indicators.</span></span> <span data-ttu-id="14bff-511">可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> ： <b>xlNoIndicator</b>、 <b>xlCommentIndicatorOnly</b>或 <b>xlCommentAndIndicator</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-511">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-512">设置为 <b>True</b> 可显示"文档操作"任务窗格;设置为 <b>False</b> 可隐藏文档操作任务窗格。</span><span class="sxs-lookup"><span data-stu-id="14bff-512">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-513">如果活动工作簿不是智能文档，则将该属性设置为 <b>True</b> 将产生运行时错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-513">Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-514">返回或设置一个 <b>boolean 类型的值</b> ，该值表示是否显示文档属性面板。</span><span class="sxs-lookup"><span data-stu-id="14bff-514">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed.</span></span> <span data-ttu-id="14bff-515">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-515">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-516"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-516"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-517">如果 Microsoft Excel 显示 4.0 版的菜单栏，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-517"><b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-518">获取或设置一个值，该值表示在生成单元格公式时是否显示相关函数和已定义名称的列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-518">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span></span> <span data-ttu-id="14bff-519">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-519">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-520"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-520"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-521">如果显示编辑栏，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-521"><b>True</b> if the formula bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-522">如果 Microsoft Excel 处于全屏显示模式，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-522"><b>True</b> if Microsoft Excel is in full-screen mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-p179">全屏显示模式将应用程序窗口最大化，从而可覆盖整个屏幕并隐藏应用程序窗口的标题栏。工具栏、状态栏和编辑栏对全屏显示模式和普通显示模式保留各自独立的显示设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-p179">Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-525">如果可以显示函数的“工具提示”，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-525"><b>True</b> if function ToolTips can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-526">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-526">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-527"><b>如此</b> 如果应显示插入选项按钮。</span><span class="sxs-lookup"><span data-stu-id="14bff-527"><b>True</b> if the Insert Options button should be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-528">如果包含注释的单元格显示单元格提示并包含注释标识符（单元格右上角的小圆点），则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-528"><b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-529"><b>如此</b> 如果"粘贴选项"按钮可以显示。</span><span class="sxs-lookup"><span data-stu-id="14bff-529"><b>True</b> if the Paste Options button can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-530">这是一个 Microsoft Office 范围的设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-530">This is a Microsoft Office-wide setting.</span></span> <span data-ttu-id="14bff-531">该设置影响所有其他的 Microsoft Office 应用程序。</span><span class="sxs-lookup"><span data-stu-id="14bff-531">This setting affects all other Microsoft Office applications.</span></span> <span data-ttu-id="14bff-532">将 <b>DisplayPasteOptions</b> 属性设置为 <b>True</b> 将关闭 Microsoft Excel 中的"自动填充选项"按钮。</span><span class="sxs-lookup"><span data-stu-id="14bff-532">Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel.</span></span> <span data-ttu-id="14bff-533"><b>“自动填充选项”</b>按钮只存在于 Excel 中，而“粘贴选项”按钮存在于所有其他的 Microsoft Office 应用程序中。</span><span class="sxs-lookup"><span data-stu-id="14bff-533">The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-534"><b>如此</b> 如果最近使用的文件列表显示在文件菜单上。</span><span class="sxs-lookup"><span data-stu-id="14bff-534"><b>True</b> if the list of recently used files is displayed on the File menu.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-535">如果滚动条在所有工作簿中显示，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-535"><b>True</b> if scroll bars are visible for all workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-536">如果显示状态栏，则其值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-536"><b>True</b> if the status bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap"><span data-ttu-id="14bff-537">可选 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-537">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="14bff-538">要在任务窗格中显示的 XML 映射。</span><span class="sxs-lookup"><span data-stu-id="14bff-538">The XML map to display in the task pane.</span></span></param>
        <summary><span data-ttu-id="14bff-539">打开 XML 源任务窗格并显示参数指定的 XML <paramref name="XmlMap" /> 映射。</span><span class="sxs-lookup"><span data-stu-id="14bff-539">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-540">XML 功能（以 XML 电子表格格式保存文件除外）仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用。</span><span class="sxs-lookup"><span data-stu-id="14bff-540">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-541">等价于双击活动单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-541">Equivalent to double-clicking the active cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary><span data-ttu-id="14bff-542">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-542">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="14bff-543">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-543">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-544">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-544">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-545">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-545">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary><span data-ttu-id="14bff-546">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-546">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="14bff-547">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-547">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-548">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-548">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary><span data-ttu-id="14bff-549">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-549">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary><span data-ttu-id="14bff-550">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-550">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="14bff-551"><b>s</b></span><span class="sxs-lookup"><span data-stu-id="14bff-551"><b>s</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-552">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-552">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary><span data-ttu-id="14bff-553">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-553">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary><span data-ttu-id="14bff-554">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-554">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-555">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-555">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-556">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-556">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="14bff-557">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-557">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-558">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-558">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-559">如果 Microsoft Excel 允许在单元格中直接进行编辑，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-559"><b>True</b> if Microsoft Excel allows editing in cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-560">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-560">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-561">如果启用记忆式键入功能，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-561"><b>True</b> if the AutoComplete feature is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-562">控制 Microsoft Excel 如何处理 Ctrl+Break（或 Esc、Command+Period）用户中断以用于运行过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-562">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span></span> <span data-ttu-id="14bff-563">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-563">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-564">
            <b>XlEnableCancelKey</b> 可以是以下 <b>XlEnableCancelKey</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-564">
            <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="14bff-565">
                <b>xlDisabled</b>   取消键捕获完全禁用。</span><span class="sxs-lookup"><span data-stu-id="14bff-565">
                <b>xlDisabled</b>  Cancel key trapping is completely disabled.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-566">
                <b>xlErrorHandler</b>   中断作为错误发送到正在运行的过程，由使用 On Error GoTo 语句设置的错误处理程序捕获。</span><span class="sxs-lookup"><span data-stu-id="14bff-566">
                <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement.</span></span> <span data-ttu-id="14bff-567">可捕获的错误代码为 18。</span><span class="sxs-lookup"><span data-stu-id="14bff-567">The trappable error code is 18.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-568">
                <b>xlInterrupt</b>   当前过程中断，用户可以调试或结束该过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-568">
                <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-569">使用此属性时应非常小心。</span><span class="sxs-lookup"><span data-stu-id="14bff-569">Use this property very carefully.</span></span> <span data-ttu-id="14bff-570">如果使用 <b>xlDisabled，</b>则无法中断非终止循环或其他非自我终止的代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-570">If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating.</span></span> <span data-ttu-id="14bff-571">同样，如果使用 <b>xlErrorHandler，</b> 但错误处理程序始终使用 <b>Resume</b> 语句返回，则无法停止运行的代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-571">Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</span></span></para>
          <para><span data-ttu-id="14bff-572">只要 Microsoft Excel 返回空闲状态并且没有程序处于运行状态，<b>EnableCancelKey</b> 属性都会重置为 <b>xlInterrupt</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-572">The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running.</span></span> <span data-ttu-id="14bff-573">若要在程序运行中捕获或者禁用取消过程，则每次在程序被调用时必须明确更改 <b>EnableCancelKey</b> 属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-573">To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-574">如果 Microsoft Excel 不是查看和编辑电子表格的默认程序，则启用"告诉我"对话框。</span><span class="sxs-lookup"><span data-stu-id="14bff-574">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-575">如果指定对象已启用事件，此属性的值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-575"><b>True</b> if events are enabled for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-576">设置或返回一个 <b>Boolean</b> 值，该值表示当用户尝试执行的操作所影响的单元格数目比 Office 中心 UI 中指定的数目大时，是否显示警告消息。</span><span class="sxs-lookup"><span data-stu-id="14bff-576">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span></span> <span data-ttu-id="14bff-577">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-577">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-578"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-578"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-579">此属性的默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-579">The default value of this property is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-580">设置或返回一个 <b>boolean 类型的值</b> ，该值表示是显示还是隐藏使用的库时所出现的库预览，预览的支持。</span><span class="sxs-lookup"><span data-stu-id="14bff-580">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span></span> <span data-ttu-id="14bff-581">如果将此属性设置为 <b>True</b>，则会在应用命令之前显示工作簿预览。</span><span class="sxs-lookup"><span data-stu-id="14bff-581">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span></span> <span data-ttu-id="14bff-582">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-582">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-583"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-583"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-584">此属性对应于“Excel 选项”对话框中的“启用实时预览”复选框。</span><span class="sxs-lookup"><span data-stu-id="14bff-584">This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-585">控制是否启用宏动画。</span><span class="sxs-lookup"><span data-stu-id="14bff-585">Controls whether macro animations are enabled.</span></span> <span data-ttu-id="14bff-586"><b>如此</b> 如果用户界面动画或图表动画已启用。</span><span class="sxs-lookup"><span data-stu-id="14bff-586"><b>True</b> if user interface animations or chart animations are enabled.</span></span> <span data-ttu-id="14bff-587">设置为 False <b> (默认情况下</b> 没有) 动画。</span><span class="sxs-lookup"><span data-stu-id="14bff-587">Is set to <b>False</b> (no animation) by default.</span></span> <span data-ttu-id="14bff-588">如果在宏运行期间设置为<b>True，</b>它将启用动画，然后在宏运行后将重置为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-588">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span></span> <span data-ttu-id="14bff-589">在 <b>C# (</b> 中可读/写 <b>boolean</b> ) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-589">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-590">如果对 Microsoft Office 启用声音，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-590"><b>True</b> if sound is enabled for Microsoft Office.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-591">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-591">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-592">返回 <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> 一个对象，该对象代表应用程序的错误检查选项。</span><span class="sxs-lookup"><span data-stu-id="14bff-592">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="14bff-593">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-593">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-594">使用 Microsoft Excel 命名约定的对象名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-594">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="14bff-595">将 Microsoft Excel 名称转换为一个对象或值。</span><span class="sxs-lookup"><span data-stu-id="14bff-595">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-596">该方法可使用下列 Microsoft Excel 名称类型：</span><span class="sxs-lookup"><span data-stu-id="14bff-596">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="14bff-p190">A1 格式引用。可以通过 A1 格式表示法引用单个单元格。所有引用均视为绝对引用。</span><span class="sxs-lookup"><span data-stu-id="14bff-p190">A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-p191">区域。在引用中可以使用区域、交集和联合运算符（分别为冒号、空格和逗号）。</span><span class="sxs-lookup"><span data-stu-id="14bff-p191">Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-p192">定义的名称。可用宏语言指定任何名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-p192">Defined names. You can specify any name in the language of the macro.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-604">外部引用。</span><span class="sxs-lookup"><span data-stu-id="14bff-604">External references.</span></span> <span data-ttu-id="14bff-605">可使用 !</span><span class="sxs-lookup"><span data-stu-id="14bff-605">You can use the !</span></span> <span data-ttu-id="14bff-606">运算符引用另一工作簿中的单元格或已定义的名称，例如，Evaluate("[BOOK1.XLS]Sheet1!A1")。</span><span class="sxs-lookup"><span data-stu-id="14bff-606">operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-607">
            <b>注意</b>：使用方括号 (例如，"[A1：C5]") 与使用字符串参数调用 <b>Evaluate</b> 方法相同。</span><span class="sxs-lookup"><span data-stu-id="14bff-607">
            <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument.</span></span> <span data-ttu-id="14bff-608">使用方括号的优点在于代码更短。</span><span class="sxs-lookup"><span data-stu-id="14bff-608">The advantage of using square brackets is that the code is shorter.</span></span> <span data-ttu-id="14bff-609">使用 <b>Evaluate</b> 的优点是参数是字符串，因此可以在代码中构造字符串或使用变量。</span><span class="sxs-lookup"><span data-stu-id="14bff-609">The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-610">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 个集合，该集合代表指定工作簿中所有的 Microsoft Excel 4.0 国际宏工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-611">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 个集合，该集合代表指定工作簿中所有的 Microsoft Excel 4.0 宏工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-611">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="14bff-612">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-612">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-613">一个不带等号的 Microsoft Excel 4.0 宏语言函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-613">A Microsoft Excel 4.0 macro language function without the equal sign.</span></span> <span data-ttu-id="14bff-614">所有引用必须是像 R1C1 这样的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-614">All references must be given as R1C1 strings.</span></span> <span data-ttu-id="14bff-615">如果 <paramref name="String" /> 包含嵌入的双引号，则必须将其双引号。</span><span class="sxs-lookup"><span data-stu-id="14bff-615">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span></span> <span data-ttu-id="14bff-616">例如，若要运行宏函数 =MID ("sometext"，1，4 <paramref name="String" />) ，必须为"MID (""sometext"，1，4) "。</span><span class="sxs-lookup"><span data-stu-id="14bff-616">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span></span></param>
        <summary><span data-ttu-id="14bff-617">运行 Microsoft Excel 4.0 宏函数，然后返回该函数的结果。</span><span class="sxs-lookup"><span data-stu-id="14bff-617">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span></span> <span data-ttu-id="14bff-618">返回结果的类型取决于函数的类型。</span><span class="sxs-lookup"><span data-stu-id="14bff-618">The return type depends on the function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-619">Microsoft Excel 4.0 宏不在当前工作簿或工作表的环境中求值。</span><span class="sxs-lookup"><span data-stu-id="14bff-619">The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet.</span></span> <span data-ttu-id="14bff-620">也就是说所有的引用都应该是外部引用，而且需要明确指定工作簿名。</span><span class="sxs-lookup"><span data-stu-id="14bff-620">This means that any references should be external and should specify an explicit workbook name.</span></span> <span data-ttu-id="14bff-621">例如，若要在 Book1 中运行 Microsoft Excel 4.0 宏My_Macro"，必须使用"Book1！My_Macro () "。</span><span class="sxs-lookup"><span data-stu-id="14bff-621">For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()".</span></span> <span data-ttu-id="14bff-622">如果不指定工作簿名，此方法将失效。</span><span class="sxs-lookup"><span data-stu-id="14bff-622">If you don't specify the workbook name, this method fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-623">如果 Microsoft Excel 自动将格式和公式扩展到清单中新增的数据上，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-623"><b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-624">要实现格式和公式的扩展，则清单中新行或新列前五行或五列中至少应有三行或三列必须具有这些格式和公式，且数据必须添加到清单的底部或右方。</span><span class="sxs-lookup"><span data-stu-id="14bff-624">To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-625">返回或设置一个值（常量），该值指定 Microsoft Excel 如何处理对所需功能尚未安装的方法和属性的调用。</span><span class="sxs-lookup"><span data-stu-id="14bff-625">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span></span> <span data-ttu-id="14bff-626">读/写 <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-626">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-627">
            <b>MsoFeatureInstall</b> 可以是以下 <b>MsoFeatureInstall</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-627">
            <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="14bff-628">
                <b>msoFeatureInstallNone</b>   调用卸载的功能时，将运行时生成一般性的自动化错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-628">
                <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called.</span></span> <span data-ttu-id="14bff-629">这是默认常量。</span><span class="sxs-lookup"><span data-stu-id="14bff-629">This is the default constant.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-630">
                <b>msoFeatureInstallOnDemand</b>   提示用户安装新功能。</span><span class="sxs-lookup"><span data-stu-id="14bff-630">
                <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-631">
                <b>msoFeatureInstallOnDemandWithUI</b>   在安装过程中显示进度表;不会提示用户安装新功能。</span><span class="sxs-lookup"><span data-stu-id="14bff-631">
                <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-632">可以使用 <b>msoFeatureInstallOnDemandWithUI</b> 常量来防止用户误以为在安装某功能时应用程序没有响应。</span><span class="sxs-lookup"><span data-stu-id="14bff-632">You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed.</span></span> <span data-ttu-id="14bff-633">如果您想开发人员是唯一可以安装的功能的用户，请使用 <b>msoFeatureInstallNone</b> 常量。</span><span class="sxs-lookup"><span data-stu-id="14bff-633">Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</span></span></para>
          <para><span data-ttu-id="14bff-634">如果将该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>False，</b>则即使 <b>FeatureInstall</b> 属性设置为 <b>msoFeatureInstallOnDemand，</b>也不会提示用户安装新功能。</span><span class="sxs-lookup"><span data-stu-id="14bff-634">If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span> <span data-ttu-id="14bff-635">如果 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 该属性设置为 <b>True，</b>则当 <b>FeatureInstall</b> 属性设置为 <b>msoFeatureInstallOnDemand</b>时，将显示安装进度表。</span><span class="sxs-lookup"><span data-stu-id="14bff-635">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="14bff-636">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-637">转换器的长名称，包括 Windows 中的文件类型搜索字符串，例如"Lotus 1-2-3 Files (*.wk) "。*</span><span class="sxs-lookup"><span data-stu-id="14bff-637">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span></span></param>
        <param name="Index2"><span data-ttu-id="14bff-638">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-638">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-639">转换器 DLL 或代码资源的路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-639">The path of the converter DLL or code resource.</span></span></param>
        <summary><span data-ttu-id="14bff-640">返回有关已安装的文件转换器的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-640">Returns information about installed file converters.</span></span> <span data-ttu-id="14bff-641">如果没有安装转换器，则返回<b>Null。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-641">Returns <b>Null</b> if there are no converters installed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-642">如果不指定参数，则此属性返回一个数组，其中包含有关所有已安装的文件转换器的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-642">If you don’t specify arguments, this property returns an array that contains information about all the installed file converters.</span></span> <span data-ttu-id="14bff-643">数组中的每一行包含有关单个文件转换器的信息，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="14bff-643">Each row in the array contains information about a single file converter, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-644">1 </span><span class="sxs-lookup"><span data-stu-id="14bff-644">1</span></span></term>
              <description><span data-ttu-id="14bff-645">转换器的长名称</span><span class="sxs-lookup"><span data-stu-id="14bff-645">The long name of the converter</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-646">2 </span><span class="sxs-lookup"><span data-stu-id="14bff-646">2</span></span></term>
              <description><span data-ttu-id="14bff-647">转换器动态 DLL 或代码资源的路径</span><span class="sxs-lookup"><span data-stu-id="14bff-647">The path of the converter DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-648">3</span><span class="sxs-lookup"><span data-stu-id="14bff-648">3</span></span></term>
              <description><span data-ttu-id="14bff-649">文件扩展名搜索字符串</span><span class="sxs-lookup"><span data-stu-id="14bff-649">The file-extension search string</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType"><span data-ttu-id="14bff-650">必需 <see cref="T:Microsoft.Office.Core.MsoFileDialogType" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-650">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span></span> <span data-ttu-id="14bff-651">文件对话框的类型。<b>MsoFileDialogType</b> 可以是以下 <b>MsoFileDialogType</b> 常量之一<b>：msoFileDialogFilePicker</b> 允许用户选择文件。<b>msoFileDialogFolderPicker</b> 允许用户选择文件夹。<b>msoFileDialogOpen</b> 允许用户打开文件。<b>msoFileDialogSaveAs</b> 允许用户保存文件。</span><span class="sxs-lookup"><span data-stu-id="14bff-651">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span></span></param>
        <summary><span data-ttu-id="14bff-652">返回 <see cref="T:Microsoft.Office.Core.FileDialog" /> 一个对象，该对象代表文件对话框的实例。</span><span class="sxs-lookup"><span data-stu-id="14bff-652">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-653">返回 <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> 一个集合，该集合代表用于保存可用于 Microsoft Excel 的文件的所有文件转换器。</span><span class="sxs-lookup"><span data-stu-id="14bff-653">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span></span> <span data-ttu-id="14bff-654">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-654">Read-only.</span></span></summary>
        <value><span data-ttu-id="14bff-655">返回 <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-655">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-p208">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span><span class="sxs-lookup"><span data-stu-id="14bff-p208">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-658">返回 <see cref="T:Microsoft.Office.Core.FileSearch" /> 用于文件搜索的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-658">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span></span> <span data-ttu-id="14bff-659">此属性仅在 Microsoft Windows 中可用。</span><span class="sxs-lookup"><span data-stu-id="14bff-659">This property is available only in Microsoft Windows.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-660">获取或设置 Microsoft Excel 在打开文件之前验证文件的方法。</span><span class="sxs-lookup"><span data-stu-id="14bff-660">Gets or sets how Microsoft Excel will validate files before opening them.</span></span></summary>
        <value><span data-ttu-id="14bff-661"><see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-661">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-662">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-662">Read/write.</span></span></para>
          <para><span data-ttu-id="14bff-663">未通过验证的文件将在受保护的视图窗口中打开。</span><span class="sxs-lookup"><span data-stu-id="14bff-663">Files that do not pass validation will be opened in a Protected View window.</span></span> <span data-ttu-id="14bff-664">如果设置该属性，该设置将保持对应用程序处于打开 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> 状态的整个会话有效。</span><span class="sxs-lookup"><span data-stu-id="14bff-664">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-665">获取或设置 Microsoft Excel 如何验证数据透视表的数据缓存的内容。</span><span class="sxs-lookup"><span data-stu-id="14bff-665">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span></span></summary>
        <value><span data-ttu-id="14bff-666"><see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-666">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-667">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-667">Read/write.</span></span></para>
          <para><span data-ttu-id="14bff-668">包含未验证的数据缓存的文件将在“受保护的视图”窗口中打开。</span><span class="sxs-lookup"><span data-stu-id="14bff-668">Files that contain data caches that do not validate will be opened in a Protected View window.</span></span> <span data-ttu-id="14bff-669">如果设置该属性，该设置将保持对应用程序处于打开 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> 状态的整个会话有效。</span><span class="sxs-lookup"><span data-stu-id="14bff-669">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-670">显示“打开”对话框。</span><span class="sxs-lookup"><span data-stu-id="14bff-670">Displays the Open dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-671">本方法显示“打开”对话框并让用户打开一个文件。</span><span class="sxs-lookup"><span data-stu-id="14bff-671">This method displays the Open dialog box and allows the user to open a file.</span></span> <span data-ttu-id="14bff-672">如果成功打开一个新文件，则该方法返回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-672">If a new file is opened successfully, this method returns <b>True</b>.</span></span> <span data-ttu-id="14bff-673">如果用户退出该对话框，则该方法返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-673">If the user cancels the dialog box, this method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-674">设置或返回要查找的单元格格式类型的搜索条件。</span><span class="sxs-lookup"><span data-stu-id="14bff-674">Sets or returns the search criteria for the type of cell formats to find.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-675">此属性设置为 <b>True</b> 后输入的所有数据都将使用该属性设置的固定小数位数进行 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> 格式设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-675">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-676">返回或设置属性设置为 True 时所使用的固定 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> 小数位数。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-676">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-677"><b>TRUE</b> 表示 Excel 快速填充功能已启用且处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-677"><b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span></span> <span data-ttu-id="14bff-678"><b>Boolean</b> (<b>bool</b> in C#) 可读/写</span><span class="sxs-lookup"><span data-stu-id="14bff-678"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-679">快速填充可检测何时修改符合模式的数据，这些数据可以填充并应用于工作簿中的其他数据，然后自动用结果向下填充列。</span><span class="sxs-lookup"><span data-stu-id="14bff-679">Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-680">如果启用了快速填充功能，则其为<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-680"><b>True</b> if the Flash Fill feature is enabled.</span></span> <span data-ttu-id="14bff-681"><b>Boolean</b> (<b>bool</b> in C#) 可读/写</span><span class="sxs-lookup"><span data-stu-id="14bff-681"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-682">允许用户指定行中编辑栏的高度。</span><span class="sxs-lookup"><span data-stu-id="14bff-682">Allows the user to specify the height of the formula bar in lines.</span></span> <span data-ttu-id="14bff-683">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-683">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-684"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="14bff-684"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-685">如果 <b>FormulaBarHeight</b> 的指定值大于可查看窗口空间，则编辑栏的大小将调整为等于窗口高度。</span><span class="sxs-lookup"><span data-stu-id="14bff-685">If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-686">当 Microsoft Excel 能够获取数据透视表数据时，返回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-686">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-687">该属性确定是否使用传统表示法方法或新的结构化引用表示法来 <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> 引用公式中的表。</span><span class="sxs-lookup"><span data-stu-id="14bff-687">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span></span> <span data-ttu-id="14bff-688">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-688">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="14bff-689">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-689">Required <b>Integer</b>.</span></span> <span data-ttu-id="14bff-690">列表数字。</span><span class="sxs-lookup"><span data-stu-id="14bff-690">The list number.</span></span></param>
        <summary><span data-ttu-id="14bff-691">返回一个自定义序列（一个字符串数组）。</span><span class="sxs-lookup"><span data-stu-id="14bff-691">Returns a custom list (an array of strings).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="14bff-692">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-692">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-693">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-693">An array of strings.</span></span></param>
        <summary><span data-ttu-id="14bff-694">返回字符串数组的自定义序列号。</span><span class="sxs-lookup"><span data-stu-id="14bff-694">Returns the custom list number for an array of strings.</span></span> <span data-ttu-id="14bff-695">使用本方法既可对内置序列进行匹配，也可对自定义序列进行匹配。</span><span class="sxs-lookup"><span data-stu-id="14bff-695">You can use this method to match both built-in lists and custom-defined lists.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-696">如果没有对应序列，则使用本方法将出错。</span><span class="sxs-lookup"><span data-stu-id="14bff-696">This method generates an error if there's no corresponding list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter"><span data-ttu-id="14bff-697">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-697">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-698">指定文件筛选条件的字符串。此字符串包含一对文件筛选器字符串，后跟 MS-DOS 通配符文件筛选器规范，每个部分和每对用逗号分隔。</span><span class="sxs-lookup"><span data-stu-id="14bff-698">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="14bff-699">各对字符串在“文件类型”下拉列表框中列出。</span><span class="sxs-lookup"><span data-stu-id="14bff-699">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="14bff-700">例如，以下字符串指定两个文件筛选器—文本和外接程序："文本文件 (*.txt*) 、.txt、Add-In Files (*.xla) ，*.xla"。若要对单个文件筛选器类型使用多个 MS-DOS 通配符表达式，请使用分号分隔通配符表达式，例如"Visual Basic Files (*.bas; *.txt) ，*.bas;*.txt"。如果省略此参数，则默认为"所有文件 *(。*) ，*.*"。</span><span class="sxs-lookup"><span data-stu-id="14bff-700">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="14bff-701">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-701">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-702">指定默认文件筛选条件的索引号，从 1 到中指定的筛选器数 <paramref name="FileFilter" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-702">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="14bff-703">如果此参数被省略或大于存在的筛选器数，使用的是第一个文件筛选器。</span><span class="sxs-lookup"><span data-stu-id="14bff-703">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="14bff-704">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-704">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-705">指定对话框的标题。</span><span class="sxs-lookup"><span data-stu-id="14bff-705">Specifies the title of the dialog box.</span></span> <span data-ttu-id="14bff-706">如果此参数被省略，标题为“打开”。</span><span class="sxs-lookup"><span data-stu-id="14bff-706">If this argument is omitted, the title is "Open."</span></span></param>
        <param name="ButtonText"><span data-ttu-id="14bff-707">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-707">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-708">仅限 Macintosh。</span><span class="sxs-lookup"><span data-stu-id="14bff-708">Macintosh only.</span></span></param>
        <param name="MultiSelect"><span data-ttu-id="14bff-709">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-709">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-710">若为 <b>True</b>，允许选择多个文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-710"><b>True</b> to allow multiple file names to be selected.</span></span> <span data-ttu-id="14bff-711">若为 <b>False</b>，仅允许选择一个文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-711"><b>False</b> to allow only one file name to be selected.</span></span> <span data-ttu-id="14bff-712">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-712">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="14bff-713">显示标准的“打开”对话框，并获取用户文件名，而不必真正打开任何文件。</span><span class="sxs-lookup"><span data-stu-id="14bff-713">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-714">此方法返回选定文件名或用户输入的文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-714">This method returns the selected file name or the name entered by the user.</span></span> <span data-ttu-id="14bff-715">返回的文件名可能包含路径规范。</span><span class="sxs-lookup"><span data-stu-id="14bff-715">The returned name may include a path specification.</span></span> <span data-ttu-id="14bff-716">如果 <paramref name="MultiSelect" /> 为 <b>True，</b>则返回值是所选文件名的数组 (即使只选择了一个文件名) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-716">If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected).</span></span> <span data-ttu-id="14bff-717">如果用户取消了对话框，则该值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-717">Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="14bff-718">此方法可能会更改当前驱动器或文件夹。</span><span class="sxs-lookup"><span data-stu-id="14bff-718">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="14bff-719">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-719">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-720">指定要转化为拼音文本的文本。</span><span class="sxs-lookup"><span data-stu-id="14bff-720">Specifies the text to be converted to phonetic text.</span></span> <span data-ttu-id="14bff-721">如果省略此参数，则返回下一个可能的 (文本字符串（如果) 指定的任何 <paramref name="Text" /> 字符）。</span><span class="sxs-lookup"><span data-stu-id="14bff-721">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span></span> <span data-ttu-id="14bff-722">如果没有其他可能的拼音文本串，则返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-722">If there are no more possible phonetic text strings, an empty string is returned.</span></span></param>
        <summary><span data-ttu-id="14bff-p227">返回指定文本串的日语拼音文本。本方法只有在选择或安装了 Microsoft Office 的日语语言支持时才有效。</span><span class="sxs-lookup"><span data-stu-id="14bff-p227">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename"><span data-ttu-id="14bff-725">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-725">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-726">指定建议的文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-726">Specifies the suggested file name.</span></span> <span data-ttu-id="14bff-727">如果省略该参数，Microsoft Excel 使用活动工作簿的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-727">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span></span></param>
        <param name="FileFilter"><span data-ttu-id="14bff-728">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-728">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-729">指定文件筛选条件的字符串。此字符串包含一对文件筛选器字符串，后跟 MS-DOS 通配符文件筛选器规范，每个部分和每个对用逗号分隔。</span><span class="sxs-lookup"><span data-stu-id="14bff-729">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="14bff-730">各对字符串在“文件类型”下拉列表框中列出。</span><span class="sxs-lookup"><span data-stu-id="14bff-730">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="14bff-731">例如，以下字符串指定两个文件筛选器：文本和外接程序："文本文件 (*.txt *) 、.txt、Add-In Files (*.xla) ，.xla"。 *若要对* 单个文件筛选器类型使用多个 MS-DOS 通配符表达式，请使用分号分隔通配符表达式，例如"Visual Basic Files (.bas; *.txt) ，*.bas;*.txt"。如果省略此参数，则默认为"所有文件 *(。*) ，*.*"。</span><span class="sxs-lookup"><span data-stu-id="14bff-731">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="14bff-732">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-732">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-733">指定默认文件筛选条件的索引号，从 1 到中指定的筛选器数 <paramref name="FileFilter" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-733">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="14bff-734">如果此参数被省略或大于存在的筛选器数，使用的是第一个文件筛选器。</span><span class="sxs-lookup"><span data-stu-id="14bff-734">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="14bff-735">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-735">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-736">指定对话框的标题。</span><span class="sxs-lookup"><span data-stu-id="14bff-736">Specifies the title of the dialog box.</span></span> <span data-ttu-id="14bff-737">如果省略该参数，则使用默认标题。</span><span class="sxs-lookup"><span data-stu-id="14bff-737">If this argument is omitted, the default title is used.</span></span></param>
        <param name="ButtonText"><span data-ttu-id="14bff-738">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-738">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-739">仅限 Macintosh。</span><span class="sxs-lookup"><span data-stu-id="14bff-739">Macintosh only.</span></span></param>
        <summary><span data-ttu-id="14bff-740">显示标准的“另存为”对话框，获取用户文件名，而无须真正保存任何文件。</span><span class="sxs-lookup"><span data-stu-id="14bff-740">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-741">此方法返回选定文件名或用户输入的文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-741">This method returns the selected file name or the name entered by the user.</span></span> <span data-ttu-id="14bff-742">返回的文件名可能包含路径规范。</span><span class="sxs-lookup"><span data-stu-id="14bff-742">The returned name may include a path specification.</span></span> <span data-ttu-id="14bff-743">如果用户取消了对话框，则该值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-743">Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="14bff-744">此方法可能会更改当前驱动器或文件夹。</span><span class="sxs-lookup"><span data-stu-id="14bff-744">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference"><span data-ttu-id="14bff-745">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-745">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-746">目标。</span><span class="sxs-lookup"><span data-stu-id="14bff-746">The destination.</span></span> <span data-ttu-id="14bff-747">可以是对象、包含 R1C1 样式表示法中的单元格引用的字符串或包含过程名称Visual Basic <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-747">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span></span> <span data-ttu-id="14bff-748">如果省略该参数，目标将为最近一次用 <b>Goto</b> 方法选定的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-748">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span></span></param>
        <param name="Scroll"><span data-ttu-id="14bff-749">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-749">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-750">如果为 <b>True</b>，则滚动窗口直至区域的左上角出现在窗口的左上角中。</span><span class="sxs-lookup"><span data-stu-id="14bff-750"><b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span></span> <span data-ttu-id="14bff-751">如果为 <b>False</b>，则不滚动窗口。</span><span class="sxs-lookup"><span data-stu-id="14bff-751"><b>False</b> to not scroll through the window.</span></span> <span data-ttu-id="14bff-752">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-752">The default is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="14bff-753">选择任何工作簿Visual Basic区域或过程，如果工作簿尚未处于活动状态，则激活该工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-753">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-754">此方法与此方法有 <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> 以下不同：</span><span class="sxs-lookup"><span data-stu-id="14bff-754">This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="14bff-755">如果指定的区域不在位于最前面屏幕的工作表中，Microsoft Excel 将在选定该区域之前切换至该工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-755">If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting.</span></span> <span data-ttu-id="14bff-756">（如果对不在屏幕的最前面的工作表中的区域使用 <b>Select</b> 方法，则选定该区域时并不激活该工作表）。</span><span class="sxs-lookup"><span data-stu-id="14bff-756">(If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-757">此方法具有 <paramref name="Scroll" /> 允许您滚动目标窗口的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-757">This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-758">使用 <b>Goto</b> 方法时，在 <b>Goto</b> 方法运行 (之前的选定内容) 将添加到之前选定内容 (数组中，有关详细信息，请参阅属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-758">When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property).</span></span> <span data-ttu-id="14bff-759">可以使用该功能快速跳过选定区域，选定区域最多为四个。</span><span class="sxs-lookup"><span data-stu-id="14bff-759">You can use this feature to quickly jump between as many as four selections.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="14bff-760"><b>Select</b>方法具有 <paramref name="Replace" /> 参数<b>;Goto</b>方法没有参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-760">The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-761">主应用程序窗口的高度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-761">The height, in points, of the main application window.</span></span> <span data-ttu-id="14bff-762">如果窗口处于最小化，则此属性为只读，并引用图标的高度。</span><span class="sxs-lookup"><span data-stu-id="14bff-762">If the window is minimized, this property is read-only and refers to the height of the icon.</span></span> <span data-ttu-id="14bff-763">如果窗口处于最大化，则无法设置此属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-763">If the window is maximized, this property cannot be set.</span></span> <span data-ttu-id="14bff-764">使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> 该属性可确定窗口状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-764">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile"><span data-ttu-id="14bff-765">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-765">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-766">要显示的联机帮助文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-766">The name of the online Help file you want to display.</span></span> <span data-ttu-id="14bff-767">如果不指定该参数，则使用“Microsoft Excel 帮助”。</span><span class="sxs-lookup"><span data-stu-id="14bff-767">If this argument isn't specified, Microsoft Excel Help is used.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="14bff-768">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-768">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-769">指定帮助主题上下文 ID 号。</span><span class="sxs-lookup"><span data-stu-id="14bff-769">Specifies the context ID number for the Help topic.</span></span> <span data-ttu-id="14bff-770">如果不指定该参数，将显示“帮助主题”对话框。</span><span class="sxs-lookup"><span data-stu-id="14bff-770">If this argument isn't specified, the Help Topics dialog box is displayed.</span></span></param>
        <summary><span data-ttu-id="14bff-771">显示一个帮助主题。</span><span class="sxs-lookup"><span data-stu-id="14bff-771">Displays a Help topic.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-772">获取或设置 Excel 是否使用高质量模式打印图形。</span><span class="sxs-lookup"><span data-stu-id="14bff-772">Gets or sets whether Excel uses high quality mode to print graphics.</span></span></summary>
        <value><span data-ttu-id="14bff-773"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-773"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-774">此属性对应于“Excel 选项”对话框“高级”类别的“打印”部分中“图形的高质量模式”复选框的设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-774">This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-775">返回调用 Microsoft Excel 的实例的实例句柄。</span><span class="sxs-lookup"><span data-stu-id="14bff-775">Returns the instance handle of the instance that is calling Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-776">获取由指定对象表示的 Microsoft Excel 2010 实例 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="14bff-776">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></summary>
        <value><span data-ttu-id="14bff-777">由指定对象表示的 Microsoft Excel 2010 实例 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="14bff-777">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-778">只读<b>变体</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-778">Read-only <b>Variant</b>.</span></span></para>
          <para><span data-ttu-id="14bff-779">此属性在 32 位和 64 位版本的 Excel 中均返回正确的句柄。</span><span class="sxs-lookup"><span data-stu-id="14bff-779">This property returns a correct handle in both the 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="14bff-780">它扩展了对象属性的功能， <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> 这仅在 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 32 位版本的 Excel 中正常工作。</span><span class="sxs-lookup"><span data-stu-id="14bff-780">It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</span></span></para>
          <para><span data-ttu-id="14bff-781">与数据类型一起使用的理想方法为 <b>LongPtr</b> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="14bff-781">The ideal data type to use with this property is the <b>LongPtr</b> data type.</span></span> <span data-ttu-id="14bff-782">在 32 位和 64 位版本的 Excel 中，将此属性返回的值分配给 <b>LongPtr</b> 变量将按预期工作。</span><span class="sxs-lookup"><span data-stu-id="14bff-782">Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="14bff-783">出于内部实现原因<b>，该属性定义为 Variant。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-783">The property is defined as <b>Variant</b> for internal implementation reasons.</span></span> <span data-ttu-id="14bff-784">但是，它始终在 32 位系统上返回 32 位值，在 64 位系统上返回 64 位值。</span><span class="sxs-lookup"><span data-stu-id="14bff-784">However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</span></span></para>
          <para><span data-ttu-id="14bff-785">此属性仅从 Excel 2010 开始工作，并且仅在 64 位版本的 Excel 中是必需的。</span><span class="sxs-lookup"><span data-stu-id="14bff-785">This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel.</span></span> <span data-ttu-id="14bff-786">如果您必须编写同样与早期版本的 Excel 一起运行的代码，为了避免编译错误，请阅读 #if Win64 条件编译指令下的此属性，并使用 #else 指令下 <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="14bff-786">If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</span></span></para>
          <para><span data-ttu-id="14bff-787">
            <b>注意</b>：从 Excel 2010 开始，此属性在 32 位和 64 位环境中都运行正常。</span><span class="sxs-lookup"><span data-stu-id="14bff-787">
            <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010.</span></span> <span data-ttu-id="14bff-788">因此，如果代码仅用于 Excel 2010 或更高版本（32 位或 64 位）中，则它可以读取此属性，而无需条件编译。</span><span class="sxs-lookup"><span data-stu-id="14bff-788">Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-789">返回一 <b>个</b> Integer 类型的值，指示 Microsoft Excel 窗口的顶级窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="14bff-789">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-790">如果远程 DDE 请求被忽略，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-790"><b>True</b> if remote DDE requests are ignored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches"><span data-ttu-id="14bff-791">必需 <b>Double</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-791">Required <b>Double</b>.</span></span> <span data-ttu-id="14bff-792">指定要转换为磅值的英寸值。</span><span class="sxs-lookup"><span data-stu-id="14bff-792">Specifies the inch value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="14bff-793">将度量单位从英寸转换为磅。</span><span class="sxs-lookup"><span data-stu-id="14bff-793">Converts a measurement from inches to points.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="14bff-794">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-794">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-795">要在对话框中显示的消息。</span><span class="sxs-lookup"><span data-stu-id="14bff-795">The message to be displayed in the dialog box.</span></span> <span data-ttu-id="14bff-796">它可以是字符串、数字、日期或 <b>布尔</b> 值。</span><span class="sxs-lookup"><span data-stu-id="14bff-796">This can be a string, a number, a date, or a <b>Boolean</b> value.</span></span></param>
        <param name="Title"><span data-ttu-id="14bff-797">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-797">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-798">输入框的标题。</span><span class="sxs-lookup"><span data-stu-id="14bff-798">The title for the input box.</span></span> <span data-ttu-id="14bff-799">如果省略此参数，则默认标题为“输入”。</span><span class="sxs-lookup"><span data-stu-id="14bff-799">If this argument is omitted, the default title is "Input."</span></span></param>
        <param name="Default"><span data-ttu-id="14bff-800">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-800">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-801">指定在对话框最初显示时文本框中显示的值。</span><span class="sxs-lookup"><span data-stu-id="14bff-801">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span></span> <span data-ttu-id="14bff-802">如果省略此参数，即表示将文本框留空。</span><span class="sxs-lookup"><span data-stu-id="14bff-802">If this argument is omitted, the text box is left empty.</span></span> <span data-ttu-id="14bff-803">此值可以是 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-803">This value can be a <b>Range</b> object.</span></span></param>
        <param name="Left"><span data-ttu-id="14bff-804">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-804">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-805">指定对话框相对于屏幕左上角的 x 位置（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-805">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="Top"><span data-ttu-id="14bff-806">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-806">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-807">指定对话框相对于屏幕左上角的 y 位置（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-807">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="14bff-808">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-809">此输入框使用的帮助文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-809">The name of the Help file for this input box.</span></span> <span data-ttu-id="14bff-810">如果存在 <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> 参数，对话框中将显示一个"帮助"按钮。</span><span class="sxs-lookup"><span data-stu-id="14bff-810">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="14bff-811">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-811">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-812">中上下文 ID帮助主题的编号 <paramref name="HelpFile" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-812">The context ID number of the Help topic in <paramref name="HelpFile" />.</span></span></param>
        <param name="Type"><span data-ttu-id="14bff-813">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-813">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-814">指定返回的数据类型。</span><span class="sxs-lookup"><span data-stu-id="14bff-814">Specifies the return data type.</span></span> <span data-ttu-id="14bff-815">如果省略此参数，则对话框返回文本。</span><span class="sxs-lookup"><span data-stu-id="14bff-815">If this argument is omitted, the dialog box returns text.</span></span> <span data-ttu-id="14bff-816">可以是下列值之一或总和。可以使用的允许值的总和 <paramref name="Type" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-816">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span></span> <span data-ttu-id="14bff-817">例如，对于可接受文本和数字的输入框，设置为 <paramref name="Type" /> 1 + 2。</span><span class="sxs-lookup"><span data-stu-id="14bff-817">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span></span></param>
        <summary><span data-ttu-id="14bff-818">显示用于用户输入的对话框。</span><span class="sxs-lookup"><span data-stu-id="14bff-818">Displays a dialog box for user input.</span></span> <span data-ttu-id="14bff-819">返回在对话框中输入的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-819">Returns the information entered in the dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-820"><b>InputBox</b> 可用于显示简单对话框，方便用户输入要在宏中使用的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-820">Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro.</span></span> <span data-ttu-id="14bff-821">对话框中有“确认”按钮和“取消”按钮。</span><span class="sxs-lookup"><span data-stu-id="14bff-821">The dialog box has an OK button and a Cancel button.</span></span> <span data-ttu-id="14bff-822">If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box.</span><span class="sxs-lookup"><span data-stu-id="14bff-822">If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box.</span></span> <span data-ttu-id="14bff-823">If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="14bff-823">If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</span></span></para>
          <para><span data-ttu-id="14bff-824">如果为 0，InputBox 将返回文本形式的公式，例如 <paramref name="Type" /> ，"=2\*PI () /360"。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-824">If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360".</span></span> <span data-ttu-id="14bff-825">只要公式中有引用，就会以 A1 样式引用的形式返回。</span><span class="sxs-lookup"><span data-stu-id="14bff-825">If there are any references in the formula, they are returned as A1-style references.</span></span> <span data-ttu-id="14bff-826"> (用于 <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> 转换引用样式。) </span><span class="sxs-lookup"><span data-stu-id="14bff-826">(Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</span></span></para>
          <para><span data-ttu-id="14bff-827">如果 <paramref name="Type" /> 为 8，InputBox 将返回<b>一个 Range</b>对象。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-827">If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</span></span></para>
          <para><span data-ttu-id="14bff-828">如果使用 <b>InputBox</b> 方法要求用户输入公式，则必须使用该属性将公式 <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> 分配给 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-828">If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object.</span></span> <span data-ttu-id="14bff-829">输入公式使用用户语言。</span><span class="sxs-lookup"><span data-stu-id="14bff-829">The input formula will be in the user's language.</span></span></para>
          <para><span data-ttu-id="14bff-830"><b>InputBox</b>方法与<b>InputBox</b>函数的不同点是，它允许对用户输入进行选择性验证，并可以与 Microsoft Excel 对象、错误值和公式一起使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-830">The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas.</span></span> <span data-ttu-id="14bff-831">没有对象限定符的 InputBox 调用 <b>InputBox</b> 函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-831">InputBox with no object qualifier calls the <b>InputBox</b> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-832">如果 Microsoft Excel 处于交互模式，则该属性值为 <b>True</b>；该属性值通常为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-832"><b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span></span> <span data-ttu-id="14bff-833">如果将此属性设置为 <b>False，Microsoft</b>Excel 将阻止来自键盘和鼠标的所有输入 (代码显示对话框的输入除外) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-833">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span></span> <span data-ttu-id="14bff-834">阻止用户输入将防止用户在代码移动或激活 Microsoft Excel 对象时干扰代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-834">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-835">如果要编写代码以从另一个应用程序与 Microsoft Excel 进行通信，则此属性非常有用。</span><span class="sxs-lookup"><span data-stu-id="14bff-835">This property is useful if you're writing code to communicate with Microsoft Excel from another application.</span></span></para>
          <para><span data-ttu-id="14bff-836">如果将该属性设为 <b>False</b>，记注要将它设回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-836">If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>.</span></span> <span data-ttu-id="14bff-837">当代码停止运行时，Microsoft Excel 不会自动将此属性设置回<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-837">Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="14bff-838">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-838">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-839">要返回的设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-839">The setting to be returned.</span></span> <span data-ttu-id="14bff-840">可以是下表中列出的常量之 <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> 一。</span><span class="sxs-lookup"><span data-stu-id="14bff-840">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span></span></param>
        <summary><span data-ttu-id="14bff-841">返回当前国家/地区和国际设置的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-841">Returns information about the current country/region and international settings.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-842">括号</span><span class="sxs-lookup"><span data-stu-id="14bff-842">Brackets and Braces</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-843">
                <b>xlLeftBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-843">
                <b>xlLeftBrace</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-844">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-844">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-845">在字面数组中左大括号 ({) 的替代字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-845">Character used instead of the left brace ({) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-846">
                <b>xlLeftBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-846">
                <b>xlLeftBracket</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-847">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-847">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-848">在 R1C1-样式相对引用中左方括号 ([) 的替代字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-848">Character used instead of the left bracket ([) in R1C1-style relative references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-849">
                <b>xlLowerCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-849">
                <b>xlLowerCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-850">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-850">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-851">小写列字母。</span><span class="sxs-lookup"><span data-stu-id="14bff-851">Lowercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-852">
                <b>xlLowerCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-852">
                <b>xlLowerCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-853">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-853">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-854">小写行字母。</span><span class="sxs-lookup"><span data-stu-id="14bff-854">Lowercase row letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-855">
                <b>xlRightBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-855">
                <b>xlRightBrace</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-856">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-856">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-857">在字面数组中右大括号 (}) 的替代字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-857">Character used instead of the right brace (}) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-858">
                <b>xlRightBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-858">
                <b>xlRightBracket</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-859">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-859">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-860">在 R1C1-样式引用中右方括号 (]) 的替代字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-860">Character used instead of the right bracket (]) in R1C1-style references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-861">
                <b>xlUpperCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-861">
                <b>xlUpperCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-862">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-862">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-863">大写列字母。</span><span class="sxs-lookup"><span data-stu-id="14bff-863">Uppercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-864">
                <b>xlUpperCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-864">
                <b>xlUpperCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-865">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-865">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-866">大写行字母（对于 R1C1-样式引用）。</span><span class="sxs-lookup"><span data-stu-id="14bff-866">Uppercase row letter (for R1C1-style references).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-867">国家/地区设置</span><span class="sxs-lookup"><span data-stu-id="14bff-867">Country/Region Settings</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-868">
                <b>xlCountryCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-868">
                <b>xlCountryCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-869">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-869">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-870">Microsoft Excel 的国家/地区版本。</span><span class="sxs-lookup"><span data-stu-id="14bff-870">Country/Region version of Microsoft Excel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-871">
                <b>xlCountrySetting</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-871">
                <b>xlCountrySetting</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-872">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-872">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-873">Windows“控制面板”中的当前国家/地区设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-873">Current country/region setting in the Windows Control Panel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-874">
                <b>xlGeneralFormatName</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-874">
                <b>xlGeneralFormatName</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-875">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-875">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-876">“常规”数字格式名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-876">Name of the General number format.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-877">货币</span><span class="sxs-lookup"><span data-stu-id="14bff-877">Currency</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-878">
                <b>xlCurrencyBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-878">
                <b>xlCurrencyBefore</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-879">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-879">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-880">如果货币符号在货币值之前，则返回 
                <b>True</b>；如果货币符号在货币值之后，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-880">
                <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-881">
                <b>xlCurrencyCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-881">
                <b>xlCurrencyCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-882">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-882">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-883">货币符号。</span><span class="sxs-lookup"><span data-stu-id="14bff-883">Currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-884">
                <b>xlCurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-884">
                <b>xlCurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-885">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-885">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-886">货币格式中的小数位数。</span><span class="sxs-lookup"><span data-stu-id="14bff-886">Number of decimal digits to be used in currency formats.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-887">
                <b>xlCurrencyLeadingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-887">
                <b>xlCurrencyLeadingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-888">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-888">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-889">如果显示零货币值的前导零，则返回 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-889">
                <b>True</b> if leading zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-890">
                <b>xlCurrencyMinusSign</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-890">
                <b>xlCurrencyMinusSign</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-891">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-891">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-892">如果对负数使用负号，则返回 
                <b>True</b>；如果使用括号，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-892">
                <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-893">
                <b>xlCurrencyNegative</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-893">
                <b>xlCurrencyNegative</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-894">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-894">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-895">负数货币值的货币格式：0 = (symbolx) 或 (xsymbol) 1 = -symbolx 或 -xsymbol 2 = symbol-x 或 x-symbol 3 = symbolx- 或 xsymbol-，其中 symbol 为国家/地区的货币符号。</span><span class="sxs-lookup"><span data-stu-id="14bff-895">Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region.</span></span> <span data-ttu-id="14bff-896">请注意货币符号的位置由 <b>xlCurrencyBefore</b> 决定。</span><span class="sxs-lookup"><span data-stu-id="14bff-896">Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-897">
                <b>xlCurrencySpaceBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-897">
                <b>xlCurrencySpaceBefore</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-898">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-898">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-899">如果在货币符号前面添加空格，则返回 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-899">
                <b>True</b> if a space is added before the currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-900">
                <b>xlCurrencyTrailingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-900">
                <b>xlCurrencyTrailingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-901">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-901">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-902">如果显示零货币值的尾部零，则返回 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-902">
                <b>True</b> if trailing zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-903">
                <b>xlNoncurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-903">
                <b>xlNoncurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-904">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-904">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-905">以非货币格式使用的小数位数。</span><span class="sxs-lookup"><span data-stu-id="14bff-905">Number of decimal digits to be used in non-currency formats.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-906">日期和时间</span><span class="sxs-lookup"><span data-stu-id="14bff-906">Date and Time</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-907">
                <b>xl24HourClock</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-907">
                <b>xl24HourClock</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-908">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-908">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-909">如果使用 24 小时制时间，则返回 
                <b>True</b>；如果使用 12 小时制时间，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-909">
                <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-910">
                <b>xl4DigitYears</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-910">
                <b>xl4DigitYears</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-911">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-911">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-912">如果使用四位年，则返回 
                <b>True</b>；如果使用两位年，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-912">
                <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-913">
                <b>xlDateOrder</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-913">
                <b>xlDateOrder</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-914">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-914">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-915">日期元素的次序：0 = 月-日-年 1 = 日-月-年 2 = 年-月-日</span><span class="sxs-lookup"><span data-stu-id="14bff-915">Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-916">
                <b>xlDateSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-916">
                <b>xlDateSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-917">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-917">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-918">日期分隔符 (/)。</span><span class="sxs-lookup"><span data-stu-id="14bff-918">Date separator (/).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-919">
                <b>xlDayCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-919">
                <b>xlDayCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-920">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-920">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-921">日符号 (d)。</span><span class="sxs-lookup"><span data-stu-id="14bff-921">Day symbol (d).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-922">
                <b>xlDayLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-922">
                <b>xlDayLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-923">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-923">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-924">如果在日期中显示前导零，则返回 True。</span><span class="sxs-lookup"><span data-stu-id="14bff-924">True if a leading zero is displayed in days.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-925">
                <b>xlHourCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-925">
                <b>xlHourCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-926">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-926">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-927">小时符号 (h)。</span><span class="sxs-lookup"><span data-stu-id="14bff-927">Hour symbol (h).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-928">
                <b>xlMDY</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-928">
                <b>xlMDY</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-929">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-929">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-930">如果长日期显示中日期次序为月-日-年，则返回 
                <b>True</b>；如果次序为日-月-年，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-930">
                <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-931">
                <b>xlMinuteCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-931">
                <b>xlMinuteCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-932">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-932">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-933">分钟符号 (m)。</span><span class="sxs-lookup"><span data-stu-id="14bff-933">Minute symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-934">
                <b>xlMonthCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-934">
                <b>xlMonthCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-935">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-935">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-936">月符号 (m)。</span><span class="sxs-lookup"><span data-stu-id="14bff-936">Month symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-937">
                <b>xlMonthLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-937">
                <b>xlMonthLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-938">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-938">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-939">如果以数字显示月份时显示月份中的前导零，则返回 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-939">
                <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-940">
                <b>xlMonthNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-940">
                <b>xlMonthNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-941">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-941">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-942">为了向后兼容总是返回三个字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-942">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="14bff-943">月份名称的缩写从 Microsoft Windows 中读取并且可以为任意长度。</span><span class="sxs-lookup"><span data-stu-id="14bff-943">Abbreviated month names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-944">
                <b>xlSecondCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-944">
                <b>xlSecondCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-945">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-945">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-946">秒符号 (s)。</span><span class="sxs-lookup"><span data-stu-id="14bff-946">Second symbol (s).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-947">
                <b>xlTimeSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-947">
                <b>xlTimeSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-948">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-948">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-949">时间分隔符 (:)。</span><span class="sxs-lookup"><span data-stu-id="14bff-949">Time separator (:).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-950">
                <b>xlTimeLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-950">
                <b>xlTimeLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-951">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-951">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-952">如果在时间表示中显示前导零，则该值为 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-952">
                <b>True</b> if a leading zero is displayed in times.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-953">
                <b>xlWeekdayNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-953">
                <b>xlWeekdayNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-954">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-954">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-955">为了向后兼容总是返回三个字符。</span><span class="sxs-lookup"><span data-stu-id="14bff-955">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="14bff-956">星期名称的缩写从 Microsoft Windows 中读取并且可以为任意长度。</span><span class="sxs-lookup"><span data-stu-id="14bff-956">Abbreviated weekday names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-957">
                <b>xlYearCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-957">
                <b>xlYearCode</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-958">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-958">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-959">数字格式中的年符号 (y)。</span><span class="sxs-lookup"><span data-stu-id="14bff-959">Year symbol in number formats (y).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-960">度量系统</span><span class="sxs-lookup"><span data-stu-id="14bff-960">Measurement Systems</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-961">
                <b>xlMetric</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-961">
                <b>xlMetric</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-962">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-962">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-963">如果使用米制度量系统，则返回 
                <b>True</b>；如果使用英制度量系统，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-963">
                <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-964">
                <b>xlNonEnglishFunctions</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-964">
                <b>xlNonEnglishFunctions</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-965">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-965">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-966">如果不以英文显示函数，则返回 
                <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-966">
                <b>True</b> if you’re not displaying functions in English.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-967">分隔符</span><span class="sxs-lookup"><span data-stu-id="14bff-967">Separators</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-968">
                <b>xlAlternateArraySeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-968">
                <b>xlAlternateArraySeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-969">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-969">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-970">如果当前数组分隔符与小数分隔符相同时替代的数组项分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-970">Alternate array item separator to be used if the current array separator is the same as the decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-971">
                <b>xlColumnSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-971">
                <b>xlColumnSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-972">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-972">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-973">数组文字类型的列分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-973">Character used to separate columns in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-974">
                <b>xlDecimalSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-974">
                <b>xlDecimalSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-975">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-975">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-976">小数分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-976">Decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-977">
                <b>xlListSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-977">
                <b>xlListSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-978">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-978">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-979">列表分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-979">List separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-980">
                <b>xlRowSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-980">
                <b>xlRowSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-981">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-981">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-982">数组文字类型的行分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-982">Character used to separate rows in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-983">
                <b>xlThousandsSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-983">
                <b>xlThousandsSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="14bff-984">
                <b>字符串</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-984">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="14bff-985">零或千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-985">Zero or thousands separator.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-986">上表显示的符号、分隔符和货币格式可能因所用语言和地理位置而异，而且可能不可用，这取决于选择或安装的语言支持（例如，美国英语）。</span><span class="sxs-lookup"><span data-stu-id="14bff-986">Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="14bff-987">必需 <b>范围</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-987">Required <b>Range</b>.</span></span> <span data-ttu-id="14bff-988">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-988">The intersecting ranges.</span></span> <span data-ttu-id="14bff-989">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-989">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="14bff-990">必需 <b>范围</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-990">Required <b>Range</b>.</span></span> <span data-ttu-id="14bff-991">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-991">The intersecting ranges.</span></span> <span data-ttu-id="14bff-992">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-992">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="14bff-993">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-993">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-994">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-994">The intersecting ranges.</span></span> <span data-ttu-id="14bff-995">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-995">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="14bff-996">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-996">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-997">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-997">The intersecting ranges.</span></span> <span data-ttu-id="14bff-998">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-998">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="14bff-999">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-999">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1000">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1000">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1001">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1001">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="14bff-1002">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1002">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1003">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1003">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1004">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1004">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="14bff-1005">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1005">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1006">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1006">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1007">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1007">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="14bff-1008">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1008">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1009">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1009">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1010">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1010">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="14bff-1011">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1011">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1012">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1012">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1013">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1013">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="14bff-1014">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1014">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1015">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1015">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1016">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1016">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="14bff-1017">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1017">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1018">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1018">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1019">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1019">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="14bff-1020">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1020">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1021">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1021">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1022">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1022">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="14bff-1023">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1023">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1024">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1024">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1025">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1025">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="14bff-1026">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1026">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1027">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1027">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1028">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1028">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="14bff-1029">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1029">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1030">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1030">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1031">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1031">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="14bff-1032">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1032">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1033">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1033">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1034">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1034">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="14bff-1035">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1035">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1036">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1036">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1037">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1037">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="14bff-1038">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1038">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1039">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1039">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1040">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1040">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="14bff-1041">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1041">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1042">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1042">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1043">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1043">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="14bff-1044">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1044">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1045">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1045">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1046">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1046">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="14bff-1047">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1047">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1048">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1048">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1049">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1049">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="14bff-1050">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1050">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1051">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1051">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1052">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1052">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="14bff-1053">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1053">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1054">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1054">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1055">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1055">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="14bff-1056">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1056">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1057">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1057">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1058">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1058">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="14bff-1059">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1059">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1060">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1060">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1061">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1061">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="14bff-1062">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1062">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1063">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1063">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1064">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1064">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="14bff-1065">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1065">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1066">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1066">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1067">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1067">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="14bff-1068">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1068">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1069">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1069">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1070">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1070">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="14bff-1071">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1071">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1072">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1072">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1073">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1073">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="14bff-1074">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1074">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1075">重叠的区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1075">The intersecting ranges.</span></span> <span data-ttu-id="14bff-1076">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1076">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="14bff-1077">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个对象，该对象表示两个或多个范围的矩形交集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1077">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1078">获取指定的工作簿是否在受保护的视图窗口中打开。</span><span class="sxs-lookup"><span data-stu-id="14bff-1078">Gets whether the specified workbook is open in a Protected View window.</span></span></summary>
        <value><span data-ttu-id="14bff-1079"><b>如此</b> 如果指定的工作簿在受保护的视图窗口中打开;否则为 <b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1079"><b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1080">只读</span><span class="sxs-lookup"><span data-stu-id="14bff-1080">Read-only</span></span></para>
          <para><span data-ttu-id="14bff-1081">使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> 该属性可确定工作簿在受保护的视图窗口中是否打开。</span><span class="sxs-lookup"><span data-stu-id="14bff-1081">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1082">如果 Microsoft Excel 使用迭代来处理循环引用，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1082"><b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1083">返回 <see cref="T:Microsoft.Office.Core.LanguageSettings" /> 对象，该对象包含有关 Microsoft Excel 中语言设置的信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-1083">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1084">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1084">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1085">返回或设置操作中所需的单元格的最大数目，如果超过此数目，将触发警告。</span><span class="sxs-lookup"><span data-stu-id="14bff-1085">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span></span> <span data-ttu-id="14bff-1086">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1086">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-1087"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1087"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1088">从屏幕左边缘到主 Microsoft Excel 窗口左边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1088">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1089">如果窗口最大化，则此属性返回一个负数，该负数根据窗口边框的宽度而异。</span><span class="sxs-lookup"><span data-stu-id="14bff-1089">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="14bff-1090">如果将此属性设置为 0 (为零) 则会使窗口在应用程序窗口最大化时略小一点。</span><span class="sxs-lookup"><span data-stu-id="14bff-1090">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="14bff-1091">换句话说，如果此属性为 0 (为零) ，则主 Microsoft Excel 窗口的左边框将在屏幕上几乎不可见。</span><span class="sxs-lookup"><span data-stu-id="14bff-1091">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1092">返回库文件夹的路径，但没有最后的分隔符。</span><span class="sxs-lookup"><span data-stu-id="14bff-1092">Returns the path to the Library folder but without the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="14bff-1093">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1093">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1094">宏的名称或用户定义函数 (UDF) 的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1094">The macro name or the name of a user defined function (UDF).</span></span></param>
        <param name="Description"><span data-ttu-id="14bff-1095">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1095">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1096">宏的描述。</span><span class="sxs-lookup"><span data-stu-id="14bff-1096">The macro description.</span></span></param>
        <param name="HasMenu"><span data-ttu-id="14bff-1097">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1097">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1098">忽略该参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1098">This argument is ignored.</span></span></param>
        <param name="MenuText"><span data-ttu-id="14bff-1099">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1099">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1100">忽略该参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1100">This argument is ignored.</span></span></param>
        <param name="HasShortcutKey"><span data-ttu-id="14bff-1101">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1101">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1102"><b>如果</b> 为 True，则还必须指定 (<paramref name="ShortcutKey" /> 宏的快捷键) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1102"><b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span></span> <span data-ttu-id="14bff-1103">如果该参数为 <b>False</b>，则不为宏指定快捷键。</span><span class="sxs-lookup"><span data-stu-id="14bff-1103">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span></span> <span data-ttu-id="14bff-1104">如果宏已经有快捷键，则将该参数设置为 <b>False</b> 可删除快捷键。</span><span class="sxs-lookup"><span data-stu-id="14bff-1104">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span></span> <span data-ttu-id="14bff-1105">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1105">The default value is <b>False</b>.</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="14bff-1106">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1106">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1107">如果为 <paramref name="HasShortcutKey" /> <b>True，则必需</b>;否则忽略。</span><span class="sxs-lookup"><span data-stu-id="14bff-1107">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span></span> <span data-ttu-id="14bff-1108">快捷键。</span><span class="sxs-lookup"><span data-stu-id="14bff-1108">The shortcut key.</span></span></param>
        <param name="Category"><span data-ttu-id="14bff-1109">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1109">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1110">一个整数，用于指定财务、日期 (或用户定义的现有宏函数类别， &amp; 例如) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span></span> <span data-ttu-id="14bff-1111">请参阅"备注"部分以确定映射到内置类别的整数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1111">See the remarks section to determine the integers that are mapped to the built-in categories.</span></span> <span data-ttu-id="14bff-1112">还可指定自定义类别的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1112">You can also specify a string for a custom category.</span></span> <span data-ttu-id="14bff-1113">如果提供字符串，则它将视为在"插入函数"对话框中显示的类别名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1113">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span></span> <span data-ttu-id="14bff-1114">如果此类别名称从未使用过，则将用该名称定义一个新的类别。</span><span class="sxs-lookup"><span data-stu-id="14bff-1114">If the category name has never been used, a new category is defined with that name.</span></span> <span data-ttu-id="14bff-1115">如果使用的类别名称与内置名称相同，Excel 将用户定义的函数映射到该内置类别。</span><span class="sxs-lookup"><span data-stu-id="14bff-1115">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span></span></param>
        <param name="StatusBar"><span data-ttu-id="14bff-1116">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1116">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1117">宏的状态栏文本。</span><span class="sxs-lookup"><span data-stu-id="14bff-1117">The status bar text for the macro.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="14bff-1118">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1118">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1119">一个指定分配给宏的帮助主题上下文 ID 的整数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1119">An integer that specifies the context ID for the Help topic assigned to the macro.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="14bff-1120">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1121">帮助文件的名称，该文件包含由定义的帮助主题 <paramref name="HelpContextId" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1121">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span></span></param>
        <summary><span data-ttu-id="14bff-1122">对应于“宏选项”对话框中的选项。</span><span class="sxs-lookup"><span data-stu-id="14bff-1122">Corresponds to options in the Macro Options dialog box.</span></span> <span data-ttu-id="14bff-1123">还可使用此方法将用户定义函数 (UDF) 显示在“插入函数”对话框的内置类别或新类别中。</span><span class="sxs-lookup"><span data-stu-id="14bff-1123">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1124">下表列出了哪些整数被映射到可在 Category 参数中使用的内置类别。</span><span class="sxs-lookup"><span data-stu-id="14bff-1124">The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1125">1 </span><span class="sxs-lookup"><span data-stu-id="14bff-1125">1</span></span></term>
              <description><span data-ttu-id="14bff-1126">
                <b>财务</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1126">
                <b>Financial</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1127">2 </span><span class="sxs-lookup"><span data-stu-id="14bff-1127">2</span></span></term>
              <description><span data-ttu-id="14bff-1128">
                <b>日期 &amp; 时间</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1128">
                <b>Date &amp; Time</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1129">3</span><span class="sxs-lookup"><span data-stu-id="14bff-1129">3</span></span></term>
              <description><span data-ttu-id="14bff-1130">
                <b>数学 &amp; 三角</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1130">
                <b>Math &amp; Trig</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1131">4 </span><span class="sxs-lookup"><span data-stu-id="14bff-1131">4</span></span></term>
              <description><span data-ttu-id="14bff-1132">
                <b>统计</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1132">
                <b>Statistical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1133">5 </span><span class="sxs-lookup"><span data-stu-id="14bff-1133">5</span></span></term>
              <description><span data-ttu-id="14bff-1134">
                <b>查找 &amp; 参考</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1134">
                <b>Lookup &amp; Reference</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1135">6 </span><span class="sxs-lookup"><span data-stu-id="14bff-1135">6</span></span></term>
              <description><span data-ttu-id="14bff-1136">
                <b>数据库</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1136">
                <b>Database</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1137">7 </span><span class="sxs-lookup"><span data-stu-id="14bff-1137">7</span></span></term>
              <description><span data-ttu-id="14bff-1138">
                <b>文本</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1138">
                <b>Text</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1139">8 </span><span class="sxs-lookup"><span data-stu-id="14bff-1139">8</span></span></term>
              <description><span data-ttu-id="14bff-1140">
                <b>Logical</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1140">
                <b>Logical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1141">9 </span><span class="sxs-lookup"><span data-stu-id="14bff-1141">9</span></span></term>
              <description><span data-ttu-id="14bff-1142">
                <b>信息</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1142">
                <b>Information</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1143">10 </span><span class="sxs-lookup"><span data-stu-id="14bff-1143">10</span></span></term>
              <description><span data-ttu-id="14bff-1144">
                <b>命令</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1144">
                <b>Commands</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1145">11 </span><span class="sxs-lookup"><span data-stu-id="14bff-1145">11</span></span></term>
              <description><span data-ttu-id="14bff-1146">
                <b>自定义</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1146">
                <b>Customizing</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1147">12 </span><span class="sxs-lookup"><span data-stu-id="14bff-1147">12</span></span></term>
              <description><span data-ttu-id="14bff-1148">
                <b>宏控件</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1148">
                <b>Macro Control</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1149">13 </span><span class="sxs-lookup"><span data-stu-id="14bff-1149">13</span></span></term>
              <description><span data-ttu-id="14bff-1150">
                <b>DDE/External</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1150">
                <b>DDE/External</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1151">14 </span><span class="sxs-lookup"><span data-stu-id="14bff-1151">14</span></span></term>
              <description><span data-ttu-id="14bff-1152">
                <b>用户定义</b>
              </span><span class="sxs-lookup"><span data-stu-id="14bff-1152">
                <b>User Defined</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1153">15 </span><span class="sxs-lookup"><span data-stu-id="14bff-1153">15</span></span></term>
              <description><span data-ttu-id="14bff-1154">第一个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1154">First custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1155">16 </span><span class="sxs-lookup"><span data-stu-id="14bff-1155">16</span></span></term>
              <description><span data-ttu-id="14bff-1156">第二个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1156">Second custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1157">17 </span><span class="sxs-lookup"><span data-stu-id="14bff-1157">17</span></span></term>
              <description><span data-ttu-id="14bff-1158">第三个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1158">Third custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1159">18 </span><span class="sxs-lookup"><span data-stu-id="14bff-1159">18</span></span></term>
              <description><span data-ttu-id="14bff-1160">第四个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1160">Fourth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1161">19</span><span class="sxs-lookup"><span data-stu-id="14bff-1161">19</span></span></term>
              <description><span data-ttu-id="14bff-1162">第五个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1162">Fifth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1163">20</span><span class="sxs-lookup"><span data-stu-id="14bff-1163">20</span></span></term>
              <description><span data-ttu-id="14bff-1164">第六个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1164">Sixth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1165"> 21</span><span class="sxs-lookup"><span data-stu-id="14bff-1165">21</span></span></term>
              <description><span data-ttu-id="14bff-1166">第七个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1166">Seventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1167">22</span><span class="sxs-lookup"><span data-stu-id="14bff-1167">22</span></span></term>
              <description><span data-ttu-id="14bff-1168">第八个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1168">Eighth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1169">23</span><span class="sxs-lookup"><span data-stu-id="14bff-1169">23</span></span></term>
              <description><span data-ttu-id="14bff-1170">第九个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1170">Ninth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1171">24</span><span class="sxs-lookup"><span data-stu-id="14bff-1171">24</span></span></term>
              <description><span data-ttu-id="14bff-1172">第十个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1172">Tenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1173">25</span><span class="sxs-lookup"><span data-stu-id="14bff-1173">25</span></span></term>
              <description><span data-ttu-id="14bff-1174">第十一个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1174">Eleventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1175">26</span><span class="sxs-lookup"><span data-stu-id="14bff-1175">26</span></span></term>
              <description><span data-ttu-id="14bff-1176">第十二个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1176">Twelfth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1177">27</span><span class="sxs-lookup"><span data-stu-id="14bff-1177">27</span></span></term>
              <description><span data-ttu-id="14bff-1178">第十三个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1178">Thirteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1179">28</span><span class="sxs-lookup"><span data-stu-id="14bff-1179">28</span></span></term>
              <description><span data-ttu-id="14bff-1180">第十四个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1180">Fourteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1181">29</span><span class="sxs-lookup"><span data-stu-id="14bff-1181">29</span></span></term>
              <description><span data-ttu-id="14bff-1182">第十五个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1182">Fifteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1183">30</span><span class="sxs-lookup"><span data-stu-id="14bff-1183">30</span></span></term>
              <description><span data-ttu-id="14bff-1184">第十六个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1184">Sixteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1185">31</span><span class="sxs-lookup"><span data-stu-id="14bff-1185">31</span></span></term>
              <description><span data-ttu-id="14bff-1186">第十七个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1186">Seventeenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1187">32</span><span class="sxs-lookup"><span data-stu-id="14bff-1187">32</span></span></term>
              <description><span data-ttu-id="14bff-1188">第十八个自定义类别</span><span class="sxs-lookup"><span data-stu-id="14bff-1188">Eighteenth custom category</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary><span data-ttu-id="14bff-1189">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1189">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-1190">关闭 Microsoft Excel 建立的 MAPI 邮件会话。</span><span class="sxs-lookup"><span data-stu-id="14bff-1190">Closes a MAPI mail session established by Microsoft Excel.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="14bff-1191">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1191">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1192">邮件帐户名或 Microsoft Exchange 配置文件名。</span><span class="sxs-lookup"><span data-stu-id="14bff-1192">The mail account name or Microsoft Exchange profile name.</span></span> <span data-ttu-id="14bff-1193">如果省略该参数，将使用默认的邮件帐户名。</span><span class="sxs-lookup"><span data-stu-id="14bff-1193">If this argument is omitted, the default mail account name is used.</span></span></param>
        <param name="Password"><span data-ttu-id="14bff-1194">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1194">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1195">邮件帐户密码。</span><span class="sxs-lookup"><span data-stu-id="14bff-1195">The mail account password.</span></span> <span data-ttu-id="14bff-1196">在 Microsoft Exchange 中忽略该参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1196">This argument is ignored in Microsoft Exchange.</span></span></param>
        <param name="DownloadNewMail"><span data-ttu-id="14bff-1197">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1198">如果为 <b>True</b>，则立即下载新邮件。</span><span class="sxs-lookup"><span data-stu-id="14bff-1198"><b>True</b> to download new mail immediately.</span></span></param>
        <summary><span data-ttu-id="14bff-p311">登录进入 MAPI Mail 或 Microsoft Exchange 并建立一个邮件会话。如果 Microsoft Mail 不处于运行状态，必须在使用邮件或文档传送功能之前先使用本方法建立邮件会话。</span><span class="sxs-lookup"><span data-stu-id="14bff-p311">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1201">Microsoft Excel 在尝试建立新的邮件会话之前将先退出所有已建立的邮件会话。</span><span class="sxs-lookup"><span data-stu-id="14bff-1201">Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</span></span></para>
          <para><span data-ttu-id="14bff-1202">要直接返回到系统默认的邮件会话，请省略名称和密码这两个参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1202">To piggyback on the system default mail session, omit both the name and password parameters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1203">如果存在活动会话，则以十六进制字符串 (返回 MAPI 邮件会话) ，如果没有会话，则返回<b>Null。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1203">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1204">该属性仅应用于由 Microsoft Excel 建立的邮件会话（不返回 Microsoft Mail 的邮件会话号）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1204">This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</span></span></para>
          <para><span data-ttu-id="14bff-1205">该属性不用于 PowerTalk 邮件系统。</span><span class="sxs-lookup"><span data-stu-id="14bff-1205">This property isn't used on PowerTalk mail systems.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1206">返回安装在主机上的邮件系统。</span><span class="sxs-lookup"><span data-stu-id="14bff-1206">Returns the mail system that's installed on the host machine.</span></span> <span data-ttu-id="14bff-1207">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1207">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1208">
            <b>XlMailSystem</b> 可以是以下 <b>XlMailSystem</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-1208">
            <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-1209">
            <b>xlMAPI</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1209">
            <b>xlMAPI</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1210">
            <b>xlNoMailSystem</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1210">
            <b>xlNoMailSystem</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1211">
            <b>xlPowerTalk</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1211">
            <b>xlPowerTalk</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1212">如果自动调整以其他国家/地区的标准纸张大小（例如，A4）来设置格式的文档，以便以用户所在的国家/地区的标准纸张大小（例如，信件）来正确地打印文档，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1212"><b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1213">如果数学协处理器可用，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1213"><b>True</b> if a math coprocessor is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1214">返回或设置 Microsoft Excel 处理循环引用时迭代之间的最大变化值。</span><span class="sxs-lookup"><span data-stu-id="14bff-1214">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1215">该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> 设置在解析循环引用时 Microsoft Excel 可以使用的最大迭代次数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1215">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1216">返回或设置 Microsoft Excel 处理循环引用的最大迭代次数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1216">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1217">该属性设置 Microsoft Excel 解析循环引用时每次迭代 <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> 之间的最大更改量。</span><span class="sxs-lookup"><span data-stu-id="14bff-1217">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1218">指定应用程序中使用的度量单位。</span><span class="sxs-lookup"><span data-stu-id="14bff-1218">Specifies the measurement unit used in the application.</span></span> <span data-ttu-id="14bff-1219">与 <b>枚举中的</b> 常量对应的 Integer 值，可读写 <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1219">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="14bff-1220"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1220"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1221">返回仍可供 Microsoft Excel 使用的内存量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1221">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1222">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-1222">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1223">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1223">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1224">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1224">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1225">真 要合并应用程序的多个实例到单个实例。</span><span class="sxs-lookup"><span data-stu-id="14bff-1225">True to merge multiple instances of the application into a single instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1226">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1226">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1227">如果鼠标可用，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1227"><b>True</b> if a mouse is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1228">如果按 Enter (Return) 键后活动单元格的位置改变，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1228"><b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1229">使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> 该属性可以指定活动单元格的移动方向。</span><span class="sxs-lookup"><span data-stu-id="14bff-1229">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1230">返回或设置当用户按 Enter 时，活动单元格的移动方向。</span><span class="sxs-lookup"><span data-stu-id="14bff-1230">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span></span> <span data-ttu-id="14bff-1231">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1231">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1232">
            <b>XlDirection</b> 可以是以下 <b>XlDirection 常量</b> 之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-1232">
            <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-1233">
            <b>xlDown</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1233">
            <b>xlDown</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1234">
            <b>xlToLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1234">
            <b>xlToLeft</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1235">
            <b>xlToRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1235">
            <b>xlToRight</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1236">
            <b>xlUp</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1236">
            <b>xlUp</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1237">如果 <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> 该属性为 <b>False，</b>则无论 <b>MoveAfterReturnDirection</b> 属性是如何设置的，所选内容不会移动。</span><span class="sxs-lookup"><span data-stu-id="14bff-1237">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1238">返回 <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> 一个对象，该对象控制 Excel 2007 中新增的多线程重新计算设置。</span><span class="sxs-lookup"><span data-stu-id="14bff-1238">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span></span> <span data-ttu-id="14bff-1239">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-1239">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1240">返回的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1240">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1241">返回 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 一个集合，该集合代表活动工作簿中所有的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1241">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1242">返回保存模板的网络路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-1242">Returns the network path where templates are stored.</span></span> <span data-ttu-id="14bff-1243">网络路径不存在时，该属性返回一个空的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1243">If the network path doesn’t exist, this property returns an empty string.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1244">返回一 <b>个 NewFile</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1244">Returns a <b>NewFile</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-p317">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span><span class="sxs-lookup"><span data-stu-id="14bff-p317">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1247">返回一个集合，其中包含由最近的查询表或数据透视表操作 <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> 生成的所有 ODBC 错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-1247">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1248">如果同时运行多个查询，则集合包含最后完成的查询中的 <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> ODBC 错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-1248">If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1249">返回或设置 ODBC 查询时间限制（以秒表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1249">Returns or sets the ODBC query time limit in seconds.</span></span> <span data-ttu-id="14bff-1250">默认值为 45 秒。</span><span class="sxs-lookup"><span data-stu-id="14bff-1250">The default value is 45 seconds.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1251">返回值为 0（零）表示没有时间限制。</span><span class="sxs-lookup"><span data-stu-id="14bff-1251">The value 0 (zero) indicates an indefinite time limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1252">返回集合，该集合代表最近一次 <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> OLE DB 查询返回的错误信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-1252">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1253">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-1253">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1254">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1254">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1255">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1255">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1256">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1256">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="14bff-1257">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1257">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1258">表示要按的键的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1258">A string indicating the key to be pressed.</span></span></param>
        <param name="Procedure"><span data-ttu-id="14bff-1259">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1259">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1260">表示要运行的过程名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1260">A string indicating the name of the procedure to be run.</span></span> <span data-ttu-id="14bff-1261">如果 <paramref name="Procedure" /> 为空文本 ("，) 时 <paramref name="Key" /> 不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1261">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span></span> <span data-ttu-id="14bff-1262">该格式的 <b>OnKey</b> 将更改键击在 Microsoft Excel 中产生的正常结果。</span><span class="sxs-lookup"><span data-stu-id="14bff-1262">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span></span> <span data-ttu-id="14bff-1263">如果省略，则还原到 Microsoft Excel 中的正常结果，并清除使用以前的 OnKey 方法进行的任何特殊 <paramref name="Procedure" /> <paramref name="Key" /> 键分配。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-1263">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span></span></param>
        <summary><span data-ttu-id="14bff-1264">当按特定键或特定的组合键时运行指定的过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1264">Runs a specified procedure when a particular key or key combination is pressed.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1265">该 <paramref name="Key" /> 参数可以指定与 Alt、Ctrl 或 Shift 组合的任何单个键，也可以指定这些键的任意组合。</span><span class="sxs-lookup"><span data-stu-id="14bff-1265">The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys.</span></span> <span data-ttu-id="14bff-1266">每一个键可由一个或多个字符表示，比如 "a" 表示字符 a，"{ENTER}" 表示 Enter。</span><span class="sxs-lookup"><span data-stu-id="14bff-1266">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="14bff-p322">若要指定按对应的键（例如 Enter 或 Tab）时的非显示字符，请使用下表所列出的代码。表中的每个代码表示键盘上的一个对应键。</span><span class="sxs-lookup"><span data-stu-id="14bff-p322">To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1269">Backspace</span><span class="sxs-lookup"><span data-stu-id="14bff-1269">BACKSPACE</span></span></term>
              <description><span data-ttu-id="14bff-1270">{BACKSPACE} 或 {BS}</span><span class="sxs-lookup"><span data-stu-id="14bff-1270">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1271">Break</span><span class="sxs-lookup"><span data-stu-id="14bff-1271">BREAK</span></span></term>
              <description><span data-ttu-id="14bff-1272">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1272">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1273">Caps Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1273">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1274">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1274">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1275">清除</span><span class="sxs-lookup"><span data-stu-id="14bff-1275">CLEAR</span></span></term>
              <description><span data-ttu-id="14bff-1276">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="14bff-1276">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1277">Delete 或 Del</span><span class="sxs-lookup"><span data-stu-id="14bff-1277">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="14bff-1278">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="14bff-1278">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1279">向下键</span><span class="sxs-lookup"><span data-stu-id="14bff-1279">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1280">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1280">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1281">结束</span><span class="sxs-lookup"><span data-stu-id="14bff-1281">END</span></span></term>
              <description><span data-ttu-id="14bff-1282">{END}</span><span class="sxs-lookup"><span data-stu-id="14bff-1282">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1283">Enter</span><span class="sxs-lookup"><span data-stu-id="14bff-1283">ENTER</span></span></term>
              <description><span data-ttu-id="14bff-1284">~ (波浪符) </span><span class="sxs-lookup"><span data-stu-id="14bff-1284">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1285">Enter（数字小键盘）</span><span class="sxs-lookup"><span data-stu-id="14bff-1285">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="14bff-1286">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="14bff-1286">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1287">Esc</span><span class="sxs-lookup"><span data-stu-id="14bff-1287">ESC</span></span></term>
              <description><span data-ttu-id="14bff-1288">{ESCAPE} 或 {ESC}</span><span class="sxs-lookup"><span data-stu-id="14bff-1288">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1289">F1 到 F15</span><span class="sxs-lookup"><span data-stu-id="14bff-1289">F1 through F15</span></span></term>
              <description><span data-ttu-id="14bff-1290">{F1} 到 {F15}</span><span class="sxs-lookup"><span data-stu-id="14bff-1290">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1291">帮助</span><span class="sxs-lookup"><span data-stu-id="14bff-1291">HELP</span></span></term>
              <description><span data-ttu-id="14bff-1292">{HELP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1292">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1293">主页</span><span class="sxs-lookup"><span data-stu-id="14bff-1293">HOME</span></span></term>
              <description><span data-ttu-id="14bff-1294">{HOME}</span><span class="sxs-lookup"><span data-stu-id="14bff-1294">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1295">Ins</span><span class="sxs-lookup"><span data-stu-id="14bff-1295">INS</span></span></term>
              <description><span data-ttu-id="14bff-1296">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1296">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1297">向左键</span><span class="sxs-lookup"><span data-stu-id="14bff-1297">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1298">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1298">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1299">Num Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1299">NUM LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1300">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1300">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1301">PageDown</span><span class="sxs-lookup"><span data-stu-id="14bff-1301">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="14bff-1302">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1302">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1303">PageUp</span><span class="sxs-lookup"><span data-stu-id="14bff-1303">PAGE UP</span></span></term>
              <description><span data-ttu-id="14bff-1304">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1304">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1305">Return</span><span class="sxs-lookup"><span data-stu-id="14bff-1305">RETURN</span></span></term>
              <description><span data-ttu-id="14bff-1306">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1306">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1307">向右键</span><span class="sxs-lookup"><span data-stu-id="14bff-1307">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1308">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1308">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1309">Scroll Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1309">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1310">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1310">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1311">Tab</span><span class="sxs-lookup"><span data-stu-id="14bff-1311">TAB</span></span></term>
              <description><span data-ttu-id="14bff-1312">{TAB}</span><span class="sxs-lookup"><span data-stu-id="14bff-1312">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1313">向上键</span><span class="sxs-lookup"><span data-stu-id="14bff-1313">UP ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1314">{UP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1314">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-p323">还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定与其他键组合使用的键，可使用下表。</span><span class="sxs-lookup"><span data-stu-id="14bff-p323">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1317">Shift</span><span class="sxs-lookup"><span data-stu-id="14bff-1317">SHIFT</span></span></term>
              <description><span data-ttu-id="14bff-1318">+（加号）</span><span class="sxs-lookup"><span data-stu-id="14bff-1318">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1319">Ctrl</span><span class="sxs-lookup"><span data-stu-id="14bff-1319">CTRL</span></span></term>
              <description><span data-ttu-id="14bff-1320">^ (点) </span><span class="sxs-lookup"><span data-stu-id="14bff-1320">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1321">Alt</span><span class="sxs-lookup"><span data-stu-id="14bff-1321">ALT</span></span></term>
              <description><span data-ttu-id="14bff-1322">%（百分号）</span><span class="sxs-lookup"><span data-stu-id="14bff-1322">% (percent sign)</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-1323">若为特定字符指定处理过程（如 +、^、% 等等），可将此字符用圆括号括起。</span><span class="sxs-lookup"><span data-stu-id="14bff-1323">To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="14bff-1324">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1324">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1325">与“编辑”菜单的“重复”命令一起显示的文本。</span><span class="sxs-lookup"><span data-stu-id="14bff-1325">The text that appears with the Repeat command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="14bff-1326">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1326">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1327">选择“编辑”菜单的“重复”命令时将运行的过程的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1327">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="14bff-1328">设置“重复”菜单项和过程的名称；如果在运行设置此属性的过程之后选择“编辑”菜单的“重复”命令，将运行此处命名的过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1328">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1329">如果某个过程不使用 <b>OnRepeat</b> 方法，重复命令将重复最近运行的过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1329">If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</span></span></para>
          <para><span data-ttu-id="14bff-1330">该过程最后必须使用 <b>OnRepeat</b> 和方法，以防止过程中的后续操作覆盖重复和 <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> 撤消过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1330">The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1331">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="14bff-1331">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1332">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1332">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime"><span data-ttu-id="14bff-1333">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1333">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1334">希望此过程运行的时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1334">The time when you want this procedure to be run.</span></span></param>
        <param name="Procedure"><span data-ttu-id="14bff-1335">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1335">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1336">要运行的过程的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1336">The name of the procedure to be run.</span></span></param>
        <param name="LatestTime"><span data-ttu-id="14bff-1337">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1337">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1338">可以运行相应过程的最后时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1338">The latest time at which the procedure can be run.</span></span> <span data-ttu-id="14bff-1339">例如，如果设置为 <paramref name="LatestTime" /> + 30，并且 Microsoft Excel 由于另一个过程正在运行而未处于"就绪"、"复制、剪切"或"查找"模式，则 Microsoft Excel 将等待 <paramref name="EarliestTime" /> 30 秒，直到第一个过程 <paramref name="EarliestTime" /> 完成。</span><span class="sxs-lookup"><span data-stu-id="14bff-1339">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span></span> <span data-ttu-id="14bff-1340">如果 Microsoft Excel 在 30 秒钟内未进入"就绪"模式，则该过程将不会运行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1340">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span></span> <span data-ttu-id="14bff-1341">如果省略此参数，Microsoft Excel 将会一直等待，直到可以运行该过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1341">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span></span></param>
        <param name="Schedule"><span data-ttu-id="14bff-1342">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1342">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1343"><b>真</b> 要计划新的 <b>OnTime</b> 过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1343"><b>True</b> to schedule a new <b>OnTime</b> procedure.</span></span> <span data-ttu-id="14bff-1344">如果为 <b>False</b>，则清除以前设置的过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1344"><b>False</b> to clear a previously set procedure.</span></span> <span data-ttu-id="14bff-1345">默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1345">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="14bff-1346">安排一个过程在将来的特定时间运行（既可以是具体指定的某个时间，也可以是指定的一段时间之后）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1346">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1347">使用 Now+TimeValue (时间) 计划从现在算起计算的特定时间量 (运行) 时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1347">Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed.</span></span> <span data-ttu-id="14bff-1348">使用 TimeValue(time) 可安排某个过程只运行指定的时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1348">Use TimeValue(time) to schedule something to be run a specific time.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="14bff-1349">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1349">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1350">与“撤消”命令（“编辑”菜单）一起显示的文本。</span><span class="sxs-lookup"><span data-stu-id="14bff-1350">The text that appears with the Undo command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="14bff-1351">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1351">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1352">选择“编辑”菜单的“撤消”命令时运行的过程的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1352">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="14bff-1353">设置“撤消”的文本和过程的名称；如果在运行设置该属性的过程之后选择“编辑”菜单上的“撤消”命令，将运行此处命名的过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1353">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1354">如果某个过程不使用 <b>OnUndo</b> 方法，则撤消命令将被禁用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1354">If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</span></span></para>
          <para><span data-ttu-id="14bff-1355">该过程最后必须使用和 <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> <b>OnUndo</b> 方法，以防止过程中的后续操作覆盖重复和撤消过程。</span><span class="sxs-lookup"><span data-stu-id="14bff-1355">The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1356">返回或设置每当激活一个窗口时要运行的过程的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1356">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1357">当其他过程切换到窗口时，或者当通过 DDE 通道接收切换到窗口的命令时，该属性指定的过程不会运行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1357">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="14bff-1358">相反，此过程会响应用户的操作，例如使用鼠标单击窗口、单击"编辑"菜单上的"转到"等。</span><span class="sxs-lookup"><span data-stu-id="14bff-1358">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="14bff-1359">如果一个工作表或宏表具有为它定义的 Auto_Activate 或 Auto_Deactivate 宏，这些宏将会在 <b>OnWindow</b> 属性指定的过程之后运行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1359">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1360">返回当前操作系统的名称和版本号，例如，"Windows (32 位) 4.00"或"Macintosh 7.00"。</span><span class="sxs-lookup"><span data-stu-id="14bff-1360">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1361">返回注册组织名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1361">Returns the registered organization name.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1362">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1362">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1363">返回应用程序的完整路径，不包括应用程序的最终分隔符和名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1363">Returns the complete path to the application, excluding the final separator and name of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1364">返回路径分隔符 \" (") 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1364">Returns the path separator character ("\").</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1365">如果数据透视表使用结构化选择，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1365"><b>True</b> if PivotTable reports use structured selection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="14bff-1366">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1366">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1367">前一区域或者名称的索引号（从 1 到 4）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1367">The index number (from 1 to 4) of the previous range or name.</span></span></param>
        <summary><span data-ttu-id="14bff-1368">返回最后选择的四个区域或名称的数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-1368">Returns an array of the last four ranges or names selected.</span></span> <span data-ttu-id="14bff-1369">数组中的每个元素都是一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1369">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1370">每次使用"名称"框或"转到"命令 ("编辑"菜单) 转到区域或单元格时，或者每次宏调用该方法时，上一区域都作为元素号 1 添加到此数组中，数组中的其他项将下移。 <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="14bff-1370">Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1371">获取或设置是否打开与打印机的通信。</span><span class="sxs-lookup"><span data-stu-id="14bff-1371">Gets or sets whether communication with the printer is turned on.</span></span></summary>
        <value><span data-ttu-id="14bff-1372"><b>如此</b> 如果打开与打印机的通信;否则为 <b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1372"><b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1373">
            <b>boolean</b> 读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1373">
            <b>boolean</b> Read/write.</span></span></para>
          <para><span data-ttu-id="14bff-1374">将 <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> 该属性设置为 <b>false</b> 可加快设置 PageSetup 属性的代码的执行速度。</span><span class="sxs-lookup"><span data-stu-id="14bff-1374">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties.</span></span> <span data-ttu-id="14bff-1375">将 <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> 属性设置为 <b>true</b> 后，将属性设置为提交所有缓存的 PageSetup 命令。</span><span class="sxs-lookup"><span data-stu-id="14bff-1375">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1376">返回 Microsoft Excel 的全球唯一标识符 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="14bff-1376">Returns the globally unique identifier (GUID) for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1377">如果在保存文件时 Microsoft Excel 要求用户输入汇总信息，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1377"><b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1378">获取一个集合，该集合代表应用程序中打开的所有受保护的 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> 视图窗口。</span><span class="sxs-lookup"><span data-stu-id="14bff-1378">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></summary>
        <value><span data-ttu-id="14bff-1379">一 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> 个集合，该集合代表应用程序中打开的所有受保护的视图窗口。</span><span class="sxs-lookup"><span data-stu-id="14bff-1379">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1380">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-1380">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1381">返回 <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> 一个对象，该对象代表应用程序的快速分析选项。</span><span class="sxs-lookup"><span data-stu-id="14bff-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-1382">退出 Microsoft Excel。</span><span class="sxs-lookup"><span data-stu-id="14bff-1382">Quits Microsoft Excel.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1383">如果使用此方法时，有未保存的工作簿处于打开状态，Microsoft Excel 会显示一个对话框，询问是否要保存所做的更改。</span><span class="sxs-lookup"><span data-stu-id="14bff-1383">If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes.</span></span> <span data-ttu-id="14bff-1384">您可以通过在使用 <b>Quit</b> 方法之前保存所有工作簿或将该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> False 来 <b>阻止此操作</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1384">You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="14bff-1385">如果该属性为 <b>False</b>，则在 Microsoft Excel 退出时，即使有未保存的工作簿，也不会显示对话框，而且不保存就退出。</span><span class="sxs-lookup"><span data-stu-id="14bff-1385">When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</span></span></para>
          <para><span data-ttu-id="14bff-1386">如果将工作簿的属性设置为 True，而不将工作簿保存到磁盘，Microsoft Excel 将退出，而不 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> 要求您保存工作簿。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-1386">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1387">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1387">Reserved for internal use.</span></span></summary>
        <value><span data-ttu-id="14bff-1388">返回 <see cref="T:System.Boolean" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1388">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="14bff-1389">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1389">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1390">区域名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1390">The name of the range.</span></span> <span data-ttu-id="14bff-1391">必须为采用宏语言的 A1 样式引用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1391">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="14bff-1392">可包括区域操作符（冒号）、相交区域操作符（空格）或合并区域操作符（逗号）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1392">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="14bff-1393">也可包括货币符号，但它们会被忽略掉。</span><span class="sxs-lookup"><span data-stu-id="14bff-1393">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="14bff-1394">您可以在区域中任一部分使用局部定义名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1394">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="14bff-1395">如果使用名称，则假定该名称使用的是宏语言。</span><span class="sxs-lookup"><span data-stu-id="14bff-1395">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="14bff-1396">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1396">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1397">区域左上角和右下角的单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-1397">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="14bff-1398">可以是一个包含单个单元格、整列或整行的 <b>Range</b> 对象，或者也可以是一个用宏语言为单个单元格命名的字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1398">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="14bff-1399">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表单元格或单元格区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1399">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1400">该属性相对于 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1400">The property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="14bff-1401">例如，如果选定内容是单元格 C3，则 Selection.Range ("B1") 返回单元格 D3，因为它相对于属性返回 <b>的 Range</b> <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1401">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="14bff-1402">此外，代码 ActiveSheet.Range("B1") 始终返回单元格 B1。</span><span class="sxs-lookup"><span data-stu-id="14bff-1402">On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1403">当 Microsoft Excel 应用程序就绪时，返回 <b>True</b>，当 Microsoft Excel 未就绪时，返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1403">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1404">返回 <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> 一个集合，该集合代表最近使用的文件的列表。</span><span class="sxs-lookup"><span data-stu-id="14bff-1404">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode"><span data-ttu-id="14bff-1405">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1405">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1406">一个字符串，指定向 Visual Basic 模块录入宏录制程序时将录制的 Visual Basic 代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-1406">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span></span> <span data-ttu-id="14bff-1407">该字符串录制在一行中。</span><span class="sxs-lookup"><span data-stu-id="14bff-1407">The string will be recorded on one line.</span></span> <span data-ttu-id="14bff-1408">如果字符串中包含回车（即 ASCII 字符为 10，或代码中含有 Chr$(10)），将分多行录制该字符串。</span><span class="sxs-lookup"><span data-stu-id="14bff-1408">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span></span></param>
        <param name="XlmCode"><span data-ttu-id="14bff-1409">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1409">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1410">忽略该参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1410">This argument is ignored.</span></span></param>
        <summary><span data-ttu-id="14bff-1411">如果宏录制程序正在运行，则记录相应代码。</span><span class="sxs-lookup"><span data-stu-id="14bff-1411">Records code if the macro recorder is on.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1412"><b>RecordMacro</b> 方法不能录入活动模块（即运行 <b>RecordMacro</b> 方法的模块）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1412">The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</span></span></para>
          <para><span data-ttu-id="14bff-1413">若要中止录制（例如，如果用户取消了对话框），请使用两个空字符串调用此函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1413">To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1414">如果以相对引用录制宏，则该属性值为 <b>True</b>；如果以绝对引用录制宏，则该属性值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1414"><b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1415">返回或设置 Microsoft Excel 是以 A1 引用样式还是以 R1C1 引用样式显示单元格引用和行、列标题。</span><span class="sxs-lookup"><span data-stu-id="14bff-1415">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span></span> <span data-ttu-id="14bff-1416">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1416">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1417">
            <b>XlReferenceStyle</b> 可以是以下 <b>XlReferenceStyle</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-1417">
            <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-1418">
            <b>xlA1</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1418">
            <b>xlA1</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1419">
            <b>xlR1C1</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1419">
            <b>xlR1C1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="14bff-1420">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1420">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1421">动态链接库或代码资源的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1421">The name of the DLL or code resource.</span></span></param>
        <param name="Index2"><span data-ttu-id="14bff-1422">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1422">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1423">函数的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1423">The name of the function.</span></span></param>
        <summary><span data-ttu-id="14bff-1424">返回在动态链接库或代码资源中的用 REGISTER 或 REGISTER.ID 宏函数登记的函数信息。</span><span class="sxs-lookup"><span data-stu-id="14bff-1424">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1425">如果不指定这些参数，则此属性返回包含所有已注册函数列表的数组。</span><span class="sxs-lookup"><span data-stu-id="14bff-1425">If you don’t specify these arguments, this property returns an array that contains a list of all registered functions.</span></span> <span data-ttu-id="14bff-1426">数组中的每一行包含一个函数的信息，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="14bff-1426">Each row in the array contains information about a single function, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1427">1 </span><span class="sxs-lookup"><span data-stu-id="14bff-1427">1</span></span></term>
              <description><span data-ttu-id="14bff-1428">动态链接库或代码资源的名称</span><span class="sxs-lookup"><span data-stu-id="14bff-1428">The name of the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1429">2 </span><span class="sxs-lookup"><span data-stu-id="14bff-1429">2</span></span></term>
              <description><span data-ttu-id="14bff-1430">动态链接库或代码资源中过程的名称</span><span class="sxs-lookup"><span data-stu-id="14bff-1430">The name of the procedure in the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1431">3</span><span class="sxs-lookup"><span data-stu-id="14bff-1431">3</span></span></term>
              <description><span data-ttu-id="14bff-1432">指定返回值的数据类型以及参数的数量和数据类型的字符串</span><span class="sxs-lookup"><span data-stu-id="14bff-1432">Strings specifying the data types of the return values and the number and data types of the arguments</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-1433">如果没有注册的函数，则此属性返回 <b>Null</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1433">If there are no registered functions, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="14bff-1434">必需的 <b>字符串</b> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1434">Required <b>String</b>.</span></span> <span data-ttu-id="14bff-1435">指定要加载的 XLL 的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1435">Specifies the name of the XLL to be loaded.</span></span></param>
        <summary><span data-ttu-id="14bff-1436">加载 XLL 代码源，并自动注册该代码源中包含的函数和命令。</span><span class="sxs-lookup"><span data-stu-id="14bff-1436">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-1437">如果代码源加载成功，则该方法返回 <b>True</b>；否则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1437">This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-1438">重复上一个用户界面操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1438">Repeats the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1439">此方法仅在运行过程之前重复用户最后一次采取的操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1439">This method repeats only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="14bff-1440">它必须是过程中的第一行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1440">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1441">设置替换条件以用于替换单元格格式。</span><span class="sxs-lookup"><span data-stu-id="14bff-1441">Sets the replacement criteria to use in replacing cell formats.</span></span> <span data-ttu-id="14bff-1442">替换条件随后将用于对对象方法 <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 的后续 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 调用中。</span><span class="sxs-lookup"><span data-stu-id="14bff-1442">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-p350">重新设置传送名单，从而可用同一名单初始化一个新的传送过程（使用同一收件人列表和收件人地址信息）。使用本方法之前，该传送过程必须已完成。否则本方法将导致错误。</span><span class="sxs-lookup"><span data-stu-id="14bff-p350">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="14bff-1446">如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</span><span class="sxs-lookup"><span data-stu-id="14bff-1446">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="14bff-1447">如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</span><span class="sxs-lookup"><span data-stu-id="14bff-1447">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="14bff-1448">如果工作簿 Book1.xls 的传送过程已完成，本示例将重新设置传送名单。</span><span class="sxs-lookup"><span data-stu-id="14bff-1448">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1449">如果使用智能鼠标进行缩放而不是滚动，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1449"><b>True</b> if the IntelliMouse zooms instead of scrolling.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1450">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表活动工作表上的所有行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1450">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span></span> <span data-ttu-id="14bff-1451">如果活动文档不是工作表，则 <b>Rows</b> 属性失效。</span><span class="sxs-lookup"><span data-stu-id="14bff-1451">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1452">该属性在应用于是多个选定区域的 <b>Range</b> 对象时，只从该区域中第一个子区域内返回行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1452">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span> <span data-ttu-id="14bff-1453">例如，如果 <b>Range</b> 对象有两个子区域：A1:B2 和 C3:D4，则 Selection.Rows.Count 返回 2 而不是 4。</span><span class="sxs-lookup"><span data-stu-id="14bff-1453">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4.</span></span> <span data-ttu-id="14bff-1454">若要在一个可能包含多个选定区域的区域中使用此属性，请测试 <b>Areas.Count</b> 以确定该区域是否包含多个选择区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1454">To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection.</span></span> <span data-ttu-id="14bff-1455">如果是，则循环遍历区域的每个区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1455">If it is, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1456">返回一 <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1456">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="14bff-1457">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1457">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1458">要运行的宏。</span><span class="sxs-lookup"><span data-stu-id="14bff-1458">The macro to run.</span></span> <span data-ttu-id="14bff-1459">它可以是一个包含宏名称的字符串、一个指示函数位置的对象，或者一个注册的 DLL (<see cref="T:Microsoft.Office.Interop.Excel.Range" /> XLL) ID。</span><span class="sxs-lookup"><span data-stu-id="14bff-1459">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span></span> <span data-ttu-id="14bff-1460">如果使用字符串，将在当前工作表的上下文中对该字符串求值。</span><span class="sxs-lookup"><span data-stu-id="14bff-1460">If a string is used, the string will be evaluated in the context of the active sheet.</span></span></param>
        <param name="Arg1"><span data-ttu-id="14bff-1461">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1461">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1462">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1462">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="14bff-1463">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1463">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1464">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1464">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="14bff-1465">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1465">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1466">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1466">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="14bff-1467">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1467">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1468">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1468">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="14bff-1469">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1469">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1470">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1470">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="14bff-1471">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1471">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1472">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1472">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="14bff-1473">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1473">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1474">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1474">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="14bff-1475">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1475">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1476">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1476">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="14bff-1477">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1477">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1478">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1478">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="14bff-1479">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1479">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1480">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1480">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="14bff-1481">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1481">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1482">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1482">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="14bff-1483">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1483">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1484">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1484">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="14bff-1485">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1485">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1486">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1486">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="14bff-1487">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1487">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1488">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1488">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="14bff-1489">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1489">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1490">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1490">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="14bff-1491">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1491">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1492">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1492">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="14bff-1493">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1493">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1494">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1494">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="14bff-1495">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1495">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1496">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1496">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="14bff-1497">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1497">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1498">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1498">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="14bff-1499">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1499">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1500">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1500">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="14bff-1501">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1501">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1502">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1502">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="14bff-1503">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1503">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1504">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1504">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="14bff-1505">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1505">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1506">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1506">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="14bff-1507">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1507">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1508">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1508">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="14bff-1509">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1509">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1510">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1510">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="14bff-1511">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1511">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1512">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1512">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="14bff-1513">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1513">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1514">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1514">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="14bff-1515">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1515">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1516">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1516">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="14bff-1517">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1517">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1518">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1518">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="14bff-1519">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1519">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1520">传递给函数的参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1520">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="14bff-1521">运行一个宏或者调用一个函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1521">Runs a macro or calls a function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-1522">不能对此方法使用命名参数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1522">You cannot use named arguments with this method.</span></span> <span data-ttu-id="14bff-1523">参数必须按位置传递。</span><span class="sxs-lookup"><span data-stu-id="14bff-1523">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="14bff-1524"><b>Run</b> 方法返回被调用的宏返回的任何值。</span><span class="sxs-lookup"><span data-stu-id="14bff-1524">The <b>Run</b> method returns whatever the called macro returns.</span></span> <span data-ttu-id="14bff-1525">作为参数传递给宏的对象通过将 (对象属性转换为 <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" />) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1525">Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object).</span></span> <span data-ttu-id="14bff-1526">这意味着不能用 <b>Run</b> 方法将对象传递给宏。</span><span class="sxs-lookup"><span data-stu-id="14bff-1526">This means that you cannot pass objects to macros by using the <b>Run</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="14bff-1527">保存对指定工作簿所做的更改。</span><span class="sxs-lookup"><span data-stu-id="14bff-1527">Saves changes to the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1528">若要打开工作簿文件，请使用 <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> 该方法。</span><span class="sxs-lookup"><span data-stu-id="14bff-1528">To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="14bff-1529">若要在未将工作簿写入磁盘的情况下将其标记为已保存，请将其 <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> 属性设置为<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1529">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="14bff-1530">第一次保存工作簿时，使用该方法 <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> 指定文件的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1530">The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="14bff-1531">本示例保存活动工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1531">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="14bff-1532">本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</span><span class="sxs-lookup"><span data-stu-id="14bff-1532">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="14bff-1533">本示例保存活动工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1533">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="14bff-1534">本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</span><span class="sxs-lookup"><span data-stu-id="14bff-1534">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="14bff-1535">本示例保存活动工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1535">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="14bff-1536">本示例保存所有打开的工作簿，然后关闭 Microsoft Excel。</span><span class="sxs-lookup"><span data-stu-id="14bff-1536">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1537">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1537">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="14bff-1538">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1538">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1539">如果屏幕更新已启用，此属性的值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1539"><b>True</b> if screen updating is turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1540">关闭屏幕更新以加快代码速度。</span><span class="sxs-lookup"><span data-stu-id="14bff-1540">Turn screen updating off to speed up your code.</span></span> <span data-ttu-id="14bff-1541">你将无法查看代码正在做什么，但它的运行速度会更快。</span><span class="sxs-lookup"><span data-stu-id="14bff-1541">You won't be able to see what the code is doing, but it will run faster.</span></span></para>
          <para><span data-ttu-id="14bff-1542">请记住，在代码结束时<b>将 ScreenUpdating</b>属性设置回<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1542">Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1543">返回活动窗口中的选定对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1543">Returns the selected object in the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1544">返回对象类型取决于当前所选内容 (例如，如果选择了单元格，则此属性返回一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个对象) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1544">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="14bff-1545">如果未选择任何内容，<b>Selection</b> 属性将返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1545">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys"><span data-ttu-id="14bff-1546">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1546">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1547">要作为文本发送到应用程序的键或组合键。</span><span class="sxs-lookup"><span data-stu-id="14bff-1547">The key or key combination you want to send to the application as text.</span></span></param>
        <param name="Wait"><span data-ttu-id="14bff-1548">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1548">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1549">若该值为 <b>True</b>，则 Microsoft Excel 等待击键处理完后再将控制返回给宏。</span><span class="sxs-lookup"><span data-stu-id="14bff-1549"><b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span></span> <span data-ttu-id="14bff-1550">如果该值为 <b>False</b>（或省略），则宏继续执行而不等待击键处理完毕。</span><span class="sxs-lookup"><span data-stu-id="14bff-1550"><b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span></span></param>
        <summary><span data-ttu-id="14bff-1551">将击键发送至活动应用程序。</span><span class="sxs-lookup"><span data-stu-id="14bff-1551">Sends keystrokes to the active application.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-p390">本方法将击键放到键盘缓冲区。某些情况下，在调用要使用击键的方法之前必须先调用此方法。例如，若要往对话框中发送密码，则必须在显示对话框之前调用 <b>SendKeys</b> 方法。</span><span class="sxs-lookup"><span data-stu-id="14bff-p390">This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</span></span></para>
          <para><span data-ttu-id="14bff-1555">该 <paramref name="Keys" /> 参数可以指定任何单个键或与 Alt、Ctrl 或 Shift (组合的任何键或这些键) 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1555">The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="14bff-1556">每个键可由一个或多个字符表示，例如 "a" 表示字符 a，"{ENTER}" 表示 Enter 键。</span><span class="sxs-lookup"><span data-stu-id="14bff-1556">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="14bff-p392">若要指定那些没有屏幕回显该字符的键（例如，Enter 或 Tab），请使用下表所列的代码来表示相应的键。表中的每个代码表示键盘上的一个对应键。</span><span class="sxs-lookup"><span data-stu-id="14bff-p392">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1559">Backspace</span><span class="sxs-lookup"><span data-stu-id="14bff-1559">BACKSPACE</span></span></term>
              <description><span data-ttu-id="14bff-1560">{BACKSPACE} 或 {BS}</span><span class="sxs-lookup"><span data-stu-id="14bff-1560">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1561">Break</span><span class="sxs-lookup"><span data-stu-id="14bff-1561">BREAK</span></span></term>
              <description><span data-ttu-id="14bff-1562">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1562">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1563">Caps Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1563">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1564">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1564">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1565">清除</span><span class="sxs-lookup"><span data-stu-id="14bff-1565">CLEAR</span></span></term>
              <description><span data-ttu-id="14bff-1566">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="14bff-1566">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1567">Delete 或 Del</span><span class="sxs-lookup"><span data-stu-id="14bff-1567">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="14bff-1568">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="14bff-1568">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1569">向下键</span><span class="sxs-lookup"><span data-stu-id="14bff-1569">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1570">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1570">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1571">结束</span><span class="sxs-lookup"><span data-stu-id="14bff-1571">END</span></span></term>
              <description><span data-ttu-id="14bff-1572">{END}</span><span class="sxs-lookup"><span data-stu-id="14bff-1572">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1573">Enter</span><span class="sxs-lookup"><span data-stu-id="14bff-1573">ENTER</span></span></term>
              <description><span data-ttu-id="14bff-1574">~ (波浪符) </span><span class="sxs-lookup"><span data-stu-id="14bff-1574">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1575">Enter（数字小键盘）</span><span class="sxs-lookup"><span data-stu-id="14bff-1575">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="14bff-1576">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="14bff-1576">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1577">Esc</span><span class="sxs-lookup"><span data-stu-id="14bff-1577">ESC</span></span></term>
              <description><span data-ttu-id="14bff-1578">{ESCAPE} 或 {ESC}</span><span class="sxs-lookup"><span data-stu-id="14bff-1578">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1579">F1 到 F15</span><span class="sxs-lookup"><span data-stu-id="14bff-1579">F1 through F15</span></span></term>
              <description><span data-ttu-id="14bff-1580">{F1} 到 {F15}</span><span class="sxs-lookup"><span data-stu-id="14bff-1580">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1581">帮助</span><span class="sxs-lookup"><span data-stu-id="14bff-1581">HELP</span></span></term>
              <description><span data-ttu-id="14bff-1582">{HELP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1582">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1583">主页</span><span class="sxs-lookup"><span data-stu-id="14bff-1583">HOME</span></span></term>
              <description><span data-ttu-id="14bff-1584">{HOME}</span><span class="sxs-lookup"><span data-stu-id="14bff-1584">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1585">Ins</span><span class="sxs-lookup"><span data-stu-id="14bff-1585">INS</span></span></term>
              <description><span data-ttu-id="14bff-1586">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1586">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1587">向左键</span><span class="sxs-lookup"><span data-stu-id="14bff-1587">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1588">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1588">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1589">Num Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1589">NUM LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1590">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1590">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1591">PageDown</span><span class="sxs-lookup"><span data-stu-id="14bff-1591">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="14bff-1592">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1592">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1593">PageUp</span><span class="sxs-lookup"><span data-stu-id="14bff-1593">PAGE UP</span></span></term>
              <description><span data-ttu-id="14bff-1594">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1594">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1595">Return</span><span class="sxs-lookup"><span data-stu-id="14bff-1595">RETURN</span></span></term>
              <description><span data-ttu-id="14bff-1596">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="14bff-1596">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1597">向右键</span><span class="sxs-lookup"><span data-stu-id="14bff-1597">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1598">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="14bff-1598">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1599">Scroll Lock</span><span class="sxs-lookup"><span data-stu-id="14bff-1599">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="14bff-1600">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="14bff-1600">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1601">Tab</span><span class="sxs-lookup"><span data-stu-id="14bff-1601">TAB</span></span></term>
              <description><span data-ttu-id="14bff-1602">{TAB}</span><span class="sxs-lookup"><span data-stu-id="14bff-1602">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1603">向上键</span><span class="sxs-lookup"><span data-stu-id="14bff-1603">UP ARROW</span></span></term>
              <description><span data-ttu-id="14bff-1604">{UP}</span><span class="sxs-lookup"><span data-stu-id="14bff-1604">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="14bff-p393">还可指定与 Shift 和/或 Ctrl 和/或 Alt 组合使用的键。若要指定与其他键组合使用的键，可使用下表。</span><span class="sxs-lookup"><span data-stu-id="14bff-p393">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="14bff-1607">Shift</span><span class="sxs-lookup"><span data-stu-id="14bff-1607">SHIFT</span></span></term>
              <description><span data-ttu-id="14bff-1608">+（加号）</span><span class="sxs-lookup"><span data-stu-id="14bff-1608">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1609">Ctrl</span><span class="sxs-lookup"><span data-stu-id="14bff-1609">CTRL</span></span></term>
              <description><span data-ttu-id="14bff-1610">^ (点) </span><span class="sxs-lookup"><span data-stu-id="14bff-1610">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="14bff-1611">Alt</span><span class="sxs-lookup"><span data-stu-id="14bff-1611">ALT</span></span></term>
              <description><span data-ttu-id="14bff-1612">%（百分号）</span><span class="sxs-lookup"><span data-stu-id="14bff-1612">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName"><span data-ttu-id="14bff-1613">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1613">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1614">指定自定义自动格式的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1614">Specifies the name of a custom autoformat.</span></span> <span data-ttu-id="14bff-1615">此名称可以是命名自定义自动格式的字符串，也可以作为特殊常量 <b>xlBuiltIn</b> 来指定内置图表模板。</span><span class="sxs-lookup"><span data-stu-id="14bff-1615">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span></span></param>
        <param name="Gallery"><span data-ttu-id="14bff-1616">可选对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1616">Optional Object.</span></span> <span data-ttu-id="14bff-1617">指定库的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1617">Specifies the name of a gallery.</span></span></param>
        <summary><span data-ttu-id="14bff-1618">指定 Microsoft Excel 在创建新图表时将使用的图表模板的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1618">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl"><span data-ttu-id="14bff-1619">要检查的网站 URL。</span><span class="sxs-lookup"><span data-stu-id="14bff-1619">The URL of site to check.</span></span></param>
        <summary><span data-ttu-id="14bff-1620">返回指定 URL 的网站上运行的 SharePoint Foundation 版本号。</span><span class="sxs-lookup"><span data-stu-id="14bff-1620">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span></span></summary>
        <returns><span data-ttu-id="14bff-1621"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1621"><b>Integer</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1622">返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-1622">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1623">返回或设置 Microsoft Excel 自动插入到新工作簿中的工作表数目。</span><span class="sxs-lookup"><span data-stu-id="14bff-1623">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="14bff-1624">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1624">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1625">如果图表显示图表提示名称，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1625"><b>True</b> if charts show chart tip names.</span></span> <span data-ttu-id="14bff-1626">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1626">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1627">如果图表显示图表提示值，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1627"><b>True</b> if charts show chart tip values.</span></span> <span data-ttu-id="14bff-1628">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1628">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1629">返回或设置一 <b>个boolean</b> 值 ，表示是否在功能区中显示"开发工具"选项卡。</span><span class="sxs-lookup"><span data-stu-id="14bff-1629">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span></span> <span data-ttu-id="14bff-1630">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1630">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-1631"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1631"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-1632">此属性对应于“Excel 选项”对话框中的“在功能区显示‘开发工具’选项卡”复选框。</span><span class="sxs-lookup"><span data-stu-id="14bff-1632">This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1633">返回或设置一 <b>个boolean</b> 值 ，表示是否在用户右单击工作簿窗口中显示浮动工具栏。</span><span class="sxs-lookup"><span data-stu-id="14bff-1633">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span></span> <span data-ttu-id="14bff-1634">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1634">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-1635"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1635"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1636">控制是否在选定内容上显示快速分析上下文用户界面。</span><span class="sxs-lookup"><span data-stu-id="14bff-1636">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span></span> <span data-ttu-id="14bff-1637"><b>TRUE</b> 表示将显示"快速分析"按钮。</span><span class="sxs-lookup"><span data-stu-id="14bff-1637"><b>TRUE</b> means the Quick Analysis button will show.</span></span> <span data-ttu-id="14bff-1638">对应于"文件"菜单、"选项 <b>"、"Excel</b>选项"和"常规"选项卡中的"显示快速分析"复选框上的"显示快速分析"选项。可读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1638">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span></span> <span data-ttu-id="14bff-1639"><b>Boolean</b> (<b>bool</b> in C#) .</span><span class="sxs-lookup"><span data-stu-id="14bff-1639"><b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1640">返回或设置一 <b>个boolean</b> 值 ，表示当用户选择文本时是否显示浮动工具栏。</span><span class="sxs-lookup"><span data-stu-id="14bff-1640">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span></span> <span data-ttu-id="14bff-1641">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1641">Read/write.</span></span></summary>
        <value><span data-ttu-id="14bff-1642"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1642"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="14bff-1643">对应于“Excel 选项”对话框中的“选择时显示浮动工具栏”复选框。</span><span class="sxs-lookup"><span data-stu-id="14bff-1643">Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1644">当 <b>Microsoft Excel</b> (显示) 工作簿任务窗格时，返回 True 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1644">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1645">如果打开工具提示，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1645"><b>True</b> if ToolTips are turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1646">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1646">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1647">获取应用程序中当前加载的颜色样式集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1647">Gets the set of color styles that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="14bff-1648">应用程序中当前加载的颜色样式集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1648">The set of color styles that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1649">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-1649">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1650">获取应用程序中当前加载的 SmartArt 布局集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1650">Gets the set of SmartArt layouts that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="14bff-1651">应用程序中当前加载的 SmartArt 布局集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1651">The set of SmartArt layouts that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1652">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-1652">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1653">获取应用程序中当前加载的 SmartArt 快速样式集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1653">Gets the set of SmartArt quick styles which are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="14bff-1654">应用程序中当前加载的 SmartArt 快速样式集。</span><span class="sxs-lookup"><span data-stu-id="14bff-1654">The set of SmartArt quick styles which are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1655">只读。</span><span class="sxs-lookup"><span data-stu-id="14bff-1655">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1656">返回 <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> 应用程序的集合。</span><span class="sxs-lookup"><span data-stu-id="14bff-1656">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1657">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1657">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1658">返回 <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> 一个对象，该对象代表应用程序的拼写选项。</span><span class="sxs-lookup"><span data-stu-id="14bff-1658">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1659">返回或设置标准字体的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1659">Returns or sets the name of the standard font.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1660">如果使用该属性更改标准字体，则直到重新启动 Microsoft Excel 后，所做的更改才能生效。</span><span class="sxs-lookup"><span data-stu-id="14bff-1660">If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1661">以磅为单位返回或设置标准字体大小。</span><span class="sxs-lookup"><span data-stu-id="14bff-1661">Returns or sets the standard font size, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1662">如果使用该属性更改标准字体大小，则直到重新启动 Microsoft Excel 后，所做的更改才能生效。</span><span class="sxs-lookup"><span data-stu-id="14bff-1662">If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1663">返回不包括最终分隔符的启动文件夹的完整路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-1663">Returns the complete path of the startup folder excluding the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1664">返回或设置状态栏中的文字。</span><span class="sxs-lookup"><span data-stu-id="14bff-1664">Returns or sets the text in the status bar.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1665">如果 Microsoft Excel 控制状态栏，则本属性返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1665">This property returns <b>False</b> if Microsoft Excel has control of the status bar.</span></span> <span data-ttu-id="14bff-1666">若要恢复默认的状态栏文字，可将本属性设为 <b>False</b>，这在状态栏处于隐藏状态时也起作用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1666">To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="14bff-1667">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1667">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1668">返回模板所存储的本地路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-1668">Returns the local path where templates are stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1669">返回作为对象调用用户定义函数的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 单元格。</span><span class="sxs-lookup"><span data-stu-id="14bff-1669">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1670">在用户定义的函数中，用户不能访问 <b>Range</b> 对象上的属性或方法。</span><span class="sxs-lookup"><span data-stu-id="14bff-1670">Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function.</span></span> <span data-ttu-id="14bff-1671">当完成了重新计算后，用户可以为今后的使用和执行附加操作而存储 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1671">Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1672">返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 一个对象，该对象代表运行当前宏代码的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1673">使用此属性来引用包含宏代码的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1673">Use this property to refer to the workbook that contains your macro code.</span></span> <span data-ttu-id="14bff-1674">仅可使用 <b>ThisWorkbook</b> 从加载项自身内部引用加载项工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1674"><b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself.</span></span> <span data-ttu-id="14bff-1675"><b>ActiveWorkbook</b> 属性不返回加载项工作簿，它返回的是调用加载项的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1675">The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in.</span></span> <span data-ttu-id="14bff-1676"><see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />该属性可能会失败，因为创建加载项时工作簿名称可能已更改。</span><span class="sxs-lookup"><span data-stu-id="14bff-1676">The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in.</span></span> <span data-ttu-id="14bff-1677"><b>ThisWorkbook</b> 始终返回其中正在运行代码的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1677"><b>ThisWorkbook</b> always returns the workbook in which the code is running.</span></span></para>
          <para><span data-ttu-id="14bff-1678">此属性只能从 Excel 内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1678">This property can be used only from inside Excel.</span></span> <span data-ttu-id="14bff-1679">不可用它来访问任何其他应用程序中的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1679">You cannot use it to access a workbook from any other application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1680">设置或返回用于千位分隔符的字符作为 <b>字符串</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1680">Sets or returns the character used for the thousands separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1681">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1681">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1682">从屏幕的上边缘到主 Microsoft Excel 窗口的上边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1682">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span></span> <span data-ttu-id="14bff-1683">如果应用程序窗口已最小化，则此属性将控制窗口图标的位置（在屏幕的任何位置）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1683">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1684">返回或设置 Microsoft Excel 菜单或帮助键，通常为“/”。</span><span class="sxs-lookup"><span data-stu-id="14bff-1684">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1685">返回或设置按下 Microsoft Excel 菜单键后将执行的操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1685">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span></span> <span data-ttu-id="14bff-1686">可为 <b>xlExcelMenus</b> 或 <b>xlLotusHelp</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1686">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1687">如果 Lotus 1-2-3 常用键是活动的，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1687"><b>True</b> if transition navigation keys are active.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1688">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="14bff-1688">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14bff-1689">取消最后一个用户界面操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1689">Cancels the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="14bff-1690">此方法仅撤消用户在运行该过程之前执行的最后一次操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1690">This method undoes only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="14bff-1691">它必须是过程中的第一行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1691">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="14bff-1692">必需 <b>范围</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1692">Required <b>Range</b>.</span></span> <span data-ttu-id="14bff-1693">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1693">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="14bff-1694">必需 <b>范围</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1694">Required <b>Range</b>.</span></span> <span data-ttu-id="14bff-1695">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1695">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="14bff-1696">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1696">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1697">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1697">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="14bff-1698">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1698">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1699">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1699">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="14bff-1700">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1700">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1701">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1701">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="14bff-1702">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1702">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1703">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1703">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="14bff-1704">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1704">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1705">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1705">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="14bff-1706">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1706">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1707">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1707">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="14bff-1708">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1708">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1709">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1709">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="14bff-1710">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1710">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1711">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1711">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="14bff-1712">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1712">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1713">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1713">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="14bff-1714">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1714">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1715">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1715">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="14bff-1716">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1716">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1717">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1717">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="14bff-1718">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1718">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1719">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1719">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="14bff-1720">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1720">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1721">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1721">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="14bff-1722">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1722">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1723">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1723">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="14bff-1724">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1724">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1725">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1725">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="14bff-1726">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1726">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1727">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1727">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="14bff-1728">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1728">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1729">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1729">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="14bff-1730">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1730">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1731">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1731">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="14bff-1732">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1732">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1733">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1733">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="14bff-1734">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1734">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1735">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1735">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="14bff-1736">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1736">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1737">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1737">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="14bff-1738">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1738">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1739">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1739">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="14bff-1740">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1740">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1741">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1741">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="14bff-1742">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1742">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1743">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1743">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="14bff-1744">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1744">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1745">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1745">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="14bff-1746">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1746">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1747">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1747">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="14bff-1748">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1748">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1749">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1749">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="14bff-1750">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1750">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1751">必须至少指定两个 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1751">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="14bff-1752">返回两个或多个区域的合并区域。</span><span class="sxs-lookup"><span data-stu-id="14bff-1752">Returns the union of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1753">返回在应用程序窗口区域中一个窗口能占有的最大高度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1753">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1754">返回窗口在应用程序窗口区域中可以占用的最大空间宽度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1754">Returns the maximum width of the space that a window can occupy in the application window area in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1755">获取或设置 Microsoft Excel 是否允许在计算群集上运行 XLL 加载项中的用户定义函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1755">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span></span></summary>
        <value><span data-ttu-id="14bff-1756">如果 Excel 允许在计算群集中运行 XLL 加载项中的用户定义函数，则其为<b>true;</b>否则为<b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1756"><b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="14bff-1757">读/写。</span><span class="sxs-lookup"><span data-stu-id="14bff-1757">Read/write.</span></span></para>
          <para><span data-ttu-id="14bff-1758">如果 Excel 允许在计算群集中运行 XLL 加载项中的用户定义函数，则其为
            <b>true;</b>否则<b>为 false</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1758">
            <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>.</span></span> <span data-ttu-id="14bff-1759">该属性的设置对应于"Excel 选项"对话框高级类别中的"公式"下的"允许用户定义的 XLL 函数在计算群集"复选框 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 上运行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1759">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="14bff-1760">
            <b>注意</b>：若要启用 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 该属性，必须在 HPC 群集连接器 (高性能) 计算。</span><span class="sxs-lookup"><span data-stu-id="14bff-1760">
            <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="14bff-1761">群集连接器可用来在 HPC 群集上远程运行群集安全的 XLL 函数，以提高性能。</span><span class="sxs-lookup"><span data-stu-id="14bff-1761">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="14bff-1762">设置该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 后，使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 该属性指定要使用的 HPC 群集连接器。</span><span class="sxs-lookup"><span data-stu-id="14bff-1762">After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1763">返回 <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> 一个对象，该对象代表在工作簿中分配的对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1763">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1764">如果应用程序可见，或者用户已创建或启动应用程序，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1764"><b>True</b> if the application is visible or if it was created or started by the user.</span></span> <span data-ttu-id="14bff-1765"><b>假</b>如果使用<b>CreateObject 或 GetObject</b>函数以<b></b>编程方式创建或启动应用程序，并且应用程序处于隐藏状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-1765"><b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1766">当对象的 <b>UserControl</b> 属性为 <b>False</b> 时，则最后一个以编程方式对该对象的引用释放以后，该对象也将释放。</span><span class="sxs-lookup"><span data-stu-id="14bff-1766">When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released.</span></span> <span data-ttu-id="14bff-1767">如果本属性为 <b>False</b>，会话中最后一个对象释放后，Microsoft Excel 将退出。</span><span class="sxs-lookup"><span data-stu-id="14bff-1767">If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1768">返回用户计算机上 COM 加载宏安装位置的路径。</span><span class="sxs-lookup"><span data-stu-id="14bff-1768">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1769">返回或设置当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="14bff-1769">Returns or sets the name of the current user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1770">如果 Microsoft Excel 的系统分隔符已启用，则该属性的值为 <b>True</b>（默认值）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1770"><b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1771">返回"Microsoft Excel"。</span><span class="sxs-lookup"><span data-stu-id="14bff-1771">Returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1772">返回 <b>VBE</b> 对象表示 Visual Basic 编辑器中。</span><span class="sxs-lookup"><span data-stu-id="14bff-1772">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1773">返回 Microsoft Excel 版本号。</span><span class="sxs-lookup"><span data-stu-id="14bff-1773">Returns the Microsoft Excel version number.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1774">决定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="14bff-1774">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile"><span data-ttu-id="14bff-1775">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1775">Optional <b>Object</b>.</span></span> <span data-ttu-id="14bff-1776">如果为 <b>True</b>，则将函数标记为易失性函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1776"><b>True</b> to mark the function as volatile.</span></span> <span data-ttu-id="14bff-1777">如果为 <b>False</b>，则将函数标记为非易失性函数。</span><span class="sxs-lookup"><span data-stu-id="14bff-1777"><b>False</b> to mark the function as nonvolatile.</span></span> <span data-ttu-id="14bff-1778">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1778">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="14bff-p444">用于将用户自定义函数标记为易失性函数，无论何时在工作表的任意单元格中进行计算时，易失性函数都必须重新进行计算。非易失性函数只在输入变量改变时才重新计算，若不用于计算工作表单元格的用户自定义函数中，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="14bff-p444">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time"><span data-ttu-id="14bff-1783">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1783">Required <b>Object</b>.</span></span> <span data-ttu-id="14bff-1784">希望宏以 Microsoft Excel 日期格式恢复的时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1784">The time at which you want the macro to resume in Microsoft Excel date format.</span></span></param>
        <summary><span data-ttu-id="14bff-1785">暂停正在运行的宏直到指定时间。</span><span class="sxs-lookup"><span data-stu-id="14bff-1785">Pauses a running macro until a specified time.</span></span> <span data-ttu-id="14bff-1786">如果到达指定时间，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1786">Returns <b>True</b> if the specified time has arrived.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="14bff-1787">
            <b>重要</b>提示 <b>：Wait</b> 方法将暂停所有 Microsoft Excel 活动，并可能阻止在 <b>Wait</b> 生效时在计算机上执行其他操作。</span><span class="sxs-lookup"><span data-stu-id="14bff-1787">
            <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect.</span></span> <span data-ttu-id="14bff-1788">不过，后台操作（如打印和重新计算）将继续进行。</span><span class="sxs-lookup"><span data-stu-id="14bff-1788">However, background processes such as printing and recalculation continue.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1789">当该属性设置为 True 时，如果开发人员尝试使用现有函数名称创建新函数，则该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> 将引发警报。 <b></b></span><span class="sxs-lookup"><span data-stu-id="14bff-1789">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span></span> <span data-ttu-id="14bff-1790">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1790">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="14bff-1791"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="14bff-1791"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1792">返回 <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> 一个对象，该对象代表重新计算工作表时跟踪的范围。</span><span class="sxs-lookup"><span data-stu-id="14bff-1792">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1793">从应用程序窗口左边缘到其右边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1793">The distance, in points, from the left edge of the application window to its right edge.</span></span> <span data-ttu-id="14bff-1794">如果窗口已最小化，则此属性为只读，并返回窗口图标的宽度。</span><span class="sxs-lookup"><span data-stu-id="14bff-1794">If the window is minimized, this property is read-only and returns the width of the window icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1795">返回 <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 一个集合，该集合代表所有工作簿中所有窗口。</span><span class="sxs-lookup"><span data-stu-id="14bff-1795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1796">此属性返回的集合中既包括可见窗口，也包括隐藏窗口。</span><span class="sxs-lookup"><span data-stu-id="14bff-1796">This property returns a collection of both visible and hidden windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1797">如果此计算机正在运行的是 Microsoft Windows for Pen Computing，则该属性的值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="14bff-1797"><b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1798">返回或设置窗口的状态。</span><span class="sxs-lookup"><span data-stu-id="14bff-1798">Returns or sets the state of the window.</span></span> <span data-ttu-id="14bff-1799">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" /> 。</span><span class="sxs-lookup"><span data-stu-id="14bff-1799">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1800">
            <b>XlWindowState</b> 可以是以下 <b>XlWindowState</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="14bff-1800">
            <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</span></span></para>
          <para><span data-ttu-id="14bff-1801">
            <b>xlMaximized</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1801">
            <b>xlMaximized</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1802">
            <b>xlNormal</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1802">
            <b>xlNormal</b>
          </span></span></para>
          <para><span data-ttu-id="14bff-1803">
            <b>xlMinimized</b>
          </span><span class="sxs-lookup"><span data-stu-id="14bff-1803">
            <b>xlMinimized</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1804">返回 <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> 一个集合，该集合代表所有打开的工作簿。</span><span class="sxs-lookup"><span data-stu-id="14bff-1804">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1805">由 <b>Workbooks</b> 属性返回的集合并不包含打开的外接程序（一种特殊的隐藏工作簿）。</span><span class="sxs-lookup"><span data-stu-id="14bff-1805">The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook.</span></span> <span data-ttu-id="14bff-1806">但如果知道文件名，则可返回单个打开的外接程序。</span><span class="sxs-lookup"><span data-stu-id="14bff-1806">You can, however, return a single open add-in if you know the file name.</span></span> <span data-ttu-id="14bff-1807">例如，Workbooks ("Oscar.xla") 将返回名为"Oscar.xla"的打开加载项作为 <b>Workbook</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1807">For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1808">返回 <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="14bff-1808">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14bff-1809">返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表活动工作簿中所有的工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-1809">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="14bff-1810">此属性不返回宏工作表;使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> 属性或 <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> 属性返回这些工作表。</span><span class="sxs-lookup"><span data-stu-id="14bff-1810">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
