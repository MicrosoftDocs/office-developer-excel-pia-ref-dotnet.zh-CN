<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b12eeb1525d59a72dc56c31e86d541cd2b6125d0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20574933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8ca4b-101">所有的集合<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象的当前打开的 Microsoft Excel 应用程序中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ca4b-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="8ca4b-102">
        <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />属性可返回<b>工作簿</b>集合。</para>
        <para>使用<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />方法可创建一个新的空白工作簿并将其添加到集合。</para>
        <para>使用<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法打开文件。</para>
        <para>有关使用一个<b>Workbook</b>对象的详细信息，请参阅<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象。</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="8ca4b-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</para>
          <para>For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="8ca4b-103">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-103">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="8ca4b-104">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>
          <span data-ttu-id="8ca4b-105">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>
          <span data-ttu-id="8ca4b-106">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">
          <span data-ttu-id="8ca4b-107">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-108">确定如何创建新工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-108">Determines how the new workbook is created.</span>
          </span>
          <span data-ttu-id="8ca4b-109">如果此参数是一个字符串，指定现有的 Microsoft Excel 文件的名称，则新工作簿作为模板创建与指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-109">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span>
          </span>
          <span data-ttu-id="8ca4b-110">如果该参数为常量，新工作簿包含一个工作表的指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-110">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span>
          </span>
          <span data-ttu-id="8ca4b-111">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" />常量： <b>xlWBATChart</b>、 <b>xlWBATExcel4IntlMacroSheet</b>、 <b>xlWBATExcel4MacroSheet</b>或<b>xlWBATWorksheet</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-112">如果省略此参数，则 Microsoft Excel 创建新的工作簿 （由<b>SheetsInNewWorkbook</b>属性设置表的数量） 的空白表数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-112">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-113">创建一个新的工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-113">Creates a new workbook.</span>
          </span>
          <span data-ttu-id="8ca4b-114">新工作簿成为活动工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-114">The new workbook becomes the active workbook.</span>
          </span>
          <span data-ttu-id="8ca4b-115">返回<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="8ca4b-116">
            <para>如果<paramref name="Template" />参数指定的文件、 文件名可包含路径。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-116">
              <para>If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ca4b-117">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-117">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="8ca4b-118">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-118">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-119">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-119">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-120">要签出的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-120">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-p105">如果 Microsoft Excel 可以将指定的工作簿从服务器签出，则该值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-p105">
              <b>True</b> if Microsoft Excel can check out a specified workbook from a server. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-123">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-123">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-124">要签出的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-124">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-125">将指定工作簿从服务器复制到本地计算机进行编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-125">Copies the specified workbook from a server to a local computer for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ca4b-126">关闭对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-126">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="8ca4b-127">
            <para>关闭工作簿使用<b>Close</b>方法不会运行 Auto_Close 宏工作簿中。使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />方法可运行自动关闭宏。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-127">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ca4b-128">返回集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-128">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="8ca4b-129">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-129">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ca4b-130">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-130">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="8ca4b-131">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-131">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="8ca4b-132">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-132">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="8ca4b-133">
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-133">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="8ca4b-134">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-134">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-135">对象的名称或索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-135">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-136">从集合中返回一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-136">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-137">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-137">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-138">要打开的工作簿的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-138">The file name of the workbook to be opened.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="8ca4b-139">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-140">指定文件中链接的方式的更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-140">Specifies the way links in the file are updated.</span>
          </span>
          <span data-ttu-id="8ca4b-141">如果省略此参数，则提示用户指定如何将更新链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-141">If this argument is omitted, the user is prompted to specify how links will be updated.</span>
          </span>
          <span data-ttu-id="8ca4b-142">否则，此参数是下表中列出的值之一。如果 Microsoft Excel 在 WKS 打开的文件，WK1 或 WK3 格式和<paramref name="UpdateLinks" />参数为 2，Microsoft Excel 图形附加到的文件从生成图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-142">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span>
          </span>
          <span data-ttu-id="8ca4b-143">如果参数为 0，则不创建任何图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-143">If the argument is 0, no charts are created.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="8ca4b-144">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-144">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-145">如果为 True，则以只读模式打开工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-145">True to open the workbook in read-only mode.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="8ca4b-146">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-147">如果 Microsoft Excel 打开文本文件，则该参数指定的分隔符下, 表中所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-147">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span>
          </span>
          <span data-ttu-id="8ca4b-148">如果省略此参数，则使用当前的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-148">If this argument is omitted, the current delimiter is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="8ca4b-149">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-150">一个字符串，包含所需打开受保护的工作簿的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-150">A string that contains the password required to open a protected workbook.</span>
          </span>
          <span data-ttu-id="8ca4b-151">如果省略此参数，并且工作簿需要密码，则提示用户输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-151">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="8ca4b-152">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-152">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-153">一个字符串，包含写入写保护的工作簿所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-153">A string that contains the password required to write to a write-reserved workbook.</span>
          </span>
          <span data-ttu-id="8ca4b-154">如果省略此参数，并且工作簿需要密码，则将提示用户输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-154">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span>
          </span>
        </param>
        <param name="IgnoreReadOnlyRecommended">
          <span data-ttu-id="8ca4b-155">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-155">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-156">如果为  <b>True</b> ，则不让 Microsoft Excel 显示只读的建议消息（如果该工作簿以 <b>"建议只读"</b>选项保存）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-156">
              <b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="8ca4b-157">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-158">如果该文件是一个文本文件，该参数表示发起 （以便可以正确映射代码页和回车/换行 (CR/LF)）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-158">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span>
          </span>
          <span data-ttu-id="8ca4b-159">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />常量： <b>xlMacintosh</b>、 <b>xlWindows</b>或<b>xlMSDOS</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-159">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-160">如果省略此参数，则使用当前操作系统。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-160">If this argument is omitted, the current operating system is used.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="8ca4b-161">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-162">如果该文件是一个文本文件， <b>Format</b>参数为 6，此参数是一个字符串，指定要用作分隔符的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-162">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span>
          </span>
          <span data-ttu-id="8ca4b-163">例如，chr （9） 用于选项卡，请使用"、"为逗号，使用";"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-163">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span>
          </span>
          <span data-ttu-id="8ca4b-164">使用仅字符串的第一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-164">Only the first character of the string is used.</span>
          </span>
        </param>
        <param name="Editable">
          <span data-ttu-id="8ca4b-165">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-165">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-166">如果文件是 Microsoft Excel 4.0 外接程序，该参数为<b>True</b>以使它位于可见窗口打开外接程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-166">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span>
          </span>
          <span data-ttu-id="8ca4b-167">如果该参数为<b>False</b>或省略外, 接程序以打开隐藏，并且不能被取消隐藏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-167">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span>
          </span>
          <span data-ttu-id="8ca4b-168">此选项不适用于创建在 Microsoft Excel 5.0 或更高版本的加载项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-168">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span>
          </span>
          <span data-ttu-id="8ca4b-169">如果该文件是 Excel 模板，用于<b>True</b>打开指定的模板进行编辑或<b>False</b>打开基于指定模板的新工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-169">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span>
          </span>
          <span data-ttu-id="8ca4b-170">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-170">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="8ca4b-171">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-171">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-172">如果不能在读/写模式下打开该文件，该参数为<b>True</b>将文件添加到文件通知列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-172">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span>
          </span>
          <span data-ttu-id="8ca4b-173">Microsoft Excel 将打开文件另存为只读，轮询文件通知列表，以及文件何时有空，则通知用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-173">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span>
          </span>
          <span data-ttu-id="8ca4b-174">如果该参数为<b>False</b>或被省略，不请求任何通知，并打开不可用的文件的任何尝试将失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-174">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span>
          </span>
        </param>
        <param name="Converter">
          <span data-ttu-id="8ca4b-175">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-175">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-176">尝试打开文件时的第一个文件转换器的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-176">The index of the first file converter to try when opening the file.</span>
          </span>
          <span data-ttu-id="8ca4b-177">指定的文件转换器尝试首先;如果此转换器不能识别该文件，则会尝试其他所有转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-177">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span>
          </span>
          <span data-ttu-id="8ca4b-178">转换器索引包含的行数，返回的转换器的<see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-178">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="8ca4b-179">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-180">
            <b>True</b>将此工作簿添加到列表中最近使用的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-180">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="8ca4b-181">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-181">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="8ca4b-182">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-183">
            <b>True</b>将保存对 Microsoft Excel （包括控制面板设置） 的语言文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-183">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="8ca4b-184">
            <b>False</b>（默认值） 保存文件，针对语言的 Visual Basic for Applications (VBA) （即通常美国英语除非从运行 Workbooks.Open VBA 项目是旧国际化的 XL5/95 VBA 项目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-184">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <param name="CorruptLoad">
          <span data-ttu-id="8ca4b-185">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-186">可以是下列常量之一： <b>xlNormalLoad</b>、 <b>xlRepairFile</b>和<b>xlExtractData</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-186">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-187">如果未不指定任何值的默认行为通常为普通，但可能安全加载或数据恢复如果 Excel 已尝试打开该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-187">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span>
          </span>
          <span data-ttu-id="8ca4b-188">首次尝试为正常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-188">The first attempt is normal.</span>
          </span>
          <span data-ttu-id="8ca4b-189">Excel 停止操作打开文件时，如果第二次尝试是安全的负载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-189">If Excel stops operating while opening the file, the second attempt is safe load.</span>
          </span>
          <span data-ttu-id="8ca4b-190">如果 Excel 再次停止操作下, 一次尝试为数据恢复。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-190">If Excel again stops operating, the next attempt is data recovery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-191">打开一个工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-191">Opens a workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="8ca4b-192">
            <para>默认情况下，以编程方式打开文件时将启用宏。使用<see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />属性来设置以编程方式打开文件时所使用的宏安全模式。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-192">
              <para>By default, macros are enabled when opening files programmatically. Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-193">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-193">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-194">连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-194">The connection string.</span>
          </span>
        </param>
        <param name="CommandText">
          <span data-ttu-id="8ca4b-195">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-195">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-196">查询的命令文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-196">The command text of the query.</span>
          </span>
        </param>
        <param name="CommandType">
          <span data-ttu-id="8ca4b-197">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-197">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-198">查询的命令类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-198">The command type of the query.</span>
          </span>
          <span data-ttu-id="8ca4b-199">以下命令类型才可用： 默认、 SQL 和表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-199">The following command types are available: Default, SQL, and Table.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="8ca4b-200">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-201">查询的背景。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-201">The background of the query.</span>
          </span>
        </param>
        <param name="ImportDataAs">
          <span data-ttu-id="8ca4b-202">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-203">确定查询的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-203">Determines the format of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-204">返回<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象代表一个数据库。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-204">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-205">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-205">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-206">指定要打开和分列的文本文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-206">Specifies the file name of the text file to be opened and parsed.</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="8ca4b-207">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-207">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-208">指定的文本文件的原点而言的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-208">Specifies the origin of the text file.</span>
          </span>
          <span data-ttu-id="8ca4b-209">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />常量： <b>xlMacintosh</b>、 <b>xlWindows</b>或<b>xlMSDOS</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-209">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-210">此外，这可能是一个整数，表示所需的代码页的代码页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-210">Additionally, this could be an integer representing the code page number of the desired code page.</span>
          </span>
          <span data-ttu-id="8ca4b-211">例如，"1256"将指定源文本文件的编码为阿拉伯文 (Windows)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-211">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span>
          </span>
          <span data-ttu-id="8ca4b-212">如果省略此参数，则方法将使用<b>文本导入向导</b>中的文件原始格式选项的当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-212">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span>
          </span>
        </param>
        <param name="StartRow">
          <span data-ttu-id="8ca4b-213">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-214">在要启动分析文本行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-214">The row number at which to start parsing text.</span>
          </span>
          <span data-ttu-id="8ca4b-215">默认值为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-215">The default value is 1.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="8ca4b-216">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-216">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-217">指定文件中的数据的列格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-217">Specifies the column format of the data in the file.</span>
          </span>
          <span data-ttu-id="8ca4b-218">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />常量： <b>xlDelimited</b>或<b>xlFixedWidth</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-218">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-219">如果未指定此参数，Microsoft Excel 将尝试打开该文件时确定的列格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-219">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="8ca4b-220">可选<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-220">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="8ca4b-221">指定文本识别符号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-221">Specifies the text qualifier.</span>
          </span>
          <span data-ttu-id="8ca4b-222">可以是下列任一<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />常量。<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-222">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="8ca4b-223">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-224">
            <b>True</b>将连续分隔符视为一个分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-224">
              <b>True</b> to have consecutive delimiters considered one delimiter.</span>
          </span>
          <span data-ttu-id="8ca4b-225">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-225">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="8ca4b-226">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-227">如果为 true 的分隔符制表符 (<paramref name="DataType" />必须<b>xlDelimited</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-227">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-228">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-228">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="8ca4b-229">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-230">
            <b>True</b>以具有分号字符是分隔符 (<paramref name="DataType" />必须<b>xlDelimited</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-230">
              <b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-231">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-231">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="8ca4b-232">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-232">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-233">
            <b>，则返回 true</b>的逗号分隔字符是分隔符 (<paramref name="DataType" />必须<b>xlDelimited</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-233">
              <b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-234">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-234">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="8ca4b-235">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-235">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-236">
            <b>True</b>以具有空格字符是分隔符 (<paramref name="DataType" />必须<b>xlDelimited</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-236">
              <b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-237">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-237">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="8ca4b-238">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-238">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-239">
            <b>True</b>指定的字符<paramref name="OtherChar" />参数是分隔符 (<paramref name="DataType" />必须<b>xlDelimited</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-239">
              <b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-240">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-240">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="8ca4b-241">可选<b>对象</b>(如果使用<paramref name="Other" />为<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-241">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="8ca4b-242">指定分隔符字符何时<paramref name="Other" />是<b>，则返回 True</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-242">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-243">如果多个指定个字符，使用仅字符串的第一个字符;剩余的字符将被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-243">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="8ca4b-244">可选<see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-244">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          </span>
          <span data-ttu-id="8ca4b-245">包含单个列的数据分析信息的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-245">An array containing parse information for individual columns of data.</span>
          </span>
          <span data-ttu-id="8ca4b-246">解释取决于的值<paramref name="DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-246">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="8ca4b-247">当数据分隔时，此参数是数组的两个元素的数组，其中每两个元素数组指定特定的列的转换选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-247">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="8ca4b-248">第一个元素是 （从 1 开始） 的列号，第二个元素指定如何分析列的<b>XlColumnDataType</b>常量之一。<b>xlGeneralFormat</b>常规<b>xlTextFormat</b>文本<b>xlMDYFormat</b> MDY 日期<b>xlDMYFormat</b> DMY 日期<b>xlYMDFormat</b> YMD 日期<b>xlMYDFormat</b> MYD 日期<b>xlDYMFormat</b> DYM 日期<b>xlYDMFormat</b> YDM 日期<b>xlEMDFormat</b> EMD 日期<b>xlSkipColumn</b>只有您已安装和选择繁体中文支持，跳过 ColumnYou 可以使用<b>xlEMDFormat</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-248">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span>
          </span>
          <span data-ttu-id="8ca4b-249">
            <b>XlEMDFormat</b>常量指定繁体中文卡时代日历日期正在被使用。列说明符可以按任意顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-249">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="8ca4b-250">如果没有输入数据中的特定列没有列标识符，分析列与常规设置。<b>Notes</b>如果您指定的列时要跳过，必须明确说明其余各列的类型或数据不能正确拆分。如果数据中没有可识别的日期，将将工作表中的日期形式格式化单元格，即使列的设置为常规。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-250">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span>
          </span>
          <span data-ttu-id="8ca4b-251">此外，如果您指定列的上述日期格式之一，并且数据不包含可识别的日期，则在工作表中的单元格格式将 General.If 源数据中含有固定宽度的列，每两个元素数组中的第一个元素指定列中的起始字符的位置 （作为整数; 字符 0 （零） 为第一个字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-251">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="8ca4b-252">前面的表中所列，两个元素数组中的第二个元素为介于 0 和 9，指定列的分析选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-252">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="8ca4b-253">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-253">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-254">文本的可视布局。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-254">The visual layout of the text.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="8ca4b-255">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-255">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-256">Microsoft Excel 时识别号码使用小数分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-256">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="8ca4b-257">默认设置是系统设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-257">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="8ca4b-258">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-258">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-259">千位分隔符时识别号码 Excel 使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-259">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="8ca4b-260">默认设置是系统设置。下表显示文本的各种导入设置导入 Excel 的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-260">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span>
          </span>
          <span data-ttu-id="8ca4b-261">数值结果显示在最右边的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-261">Numeric results are displayed in the rightmost column.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="8ca4b-262">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-262">Optional <b>Object</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="8ca4b-263">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-263">Optional <b>Object</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-264">载入一个文本文件，并将其作为包含单个工作表的新工作簿进行分列处理，然后在此工作表中放入经过分列处理的文本文件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-264">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="8ca4b-265">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-265">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-266">要打开的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-266">The name of the file to open.</span>
          </span>
        </param>
        <param name="Stylesheets">
          <span data-ttu-id="8ca4b-267">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-268">单个值或指定要应用的 XSL 转换 (XSLT) 样式表处理指令的值的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-268">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span>
          </span>
        </param>
        <param name="LoadOption">
          <span data-ttu-id="8ca4b-269">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-269">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="8ca4b-270">指定 Excel 打开 XML 数据文件的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-270">Specifies how Excel opens the XML data file.</span>
          </span>
          <span data-ttu-id="8ca4b-271">可以是下列任一<see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" />常量：<b>xlXmlLoadImportToList</b>将 XML 数据文件的内容放在 XML 列表。<b>xlXmlLoadMapXml</b><b>XML 结构</b>任务窗格中显示 XML 数据文件的架构。<b>xlXmlLoadOpenXml</b>打开 XML 数据文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-271">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span>
          </span>
          <span data-ttu-id="8ca4b-272">将平展文件的内容。<b>xlXmlLoadPromptUser</b>提示用户选择打开文件的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-272">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ca4b-273">打开 XML 数据文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-273">Opens an XML data file.</span>
          </span>
          <span data-ttu-id="8ca4b-274">返回<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-274">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="8ca4b-275">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-275">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ca4b-p150">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ca4b-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>