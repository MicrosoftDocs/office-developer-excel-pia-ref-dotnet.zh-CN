<Type Name="Worksheets" FullName="Microsoft.Office.Interop.Excel.Worksheets">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62181a586d545e1a026f86bd8ec84b25d6e092ad" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20581499" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Worksheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Worksheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Worksheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Worksheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Worksheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B1-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="22058-101">所有的集合<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />指定的或活动工作簿中的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="22058-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects in the specified or active workbook.</span>
      </span>
      <span data-ttu-id="22058-102">每个<b>工作表</b>对象代表工作表。</span>
      <span class="sxs-lookup">
        <span data-stu-id="22058-102">Each <b>Worksheet</b> object represents a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="22058-103">
        <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />属性可返回<b>工作表</b>集合。</para>
        <para>使用<see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />方法可创建新工作表并将其添加到集合。</para>
        <para>使用<b>工作表</b>(<paramref name="index" />)，其中<paramref name="index" />是工作表的索引号或名称，可返回单个<b>Worksheet</b>对象。</para>
        <para>
          <b>工作表</b>对象也是成员<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />集合。<b>Sheets</b>集合包含工作簿 （图表工作表和工作表） 中的所有工作表。</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="22058-103">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> property to return the <b>Worksheets</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new worksheet and add it to the collection.</para>
          <para>Use <b>Worksheets</b>(<paramref name="index" />), where <paramref name="index" /> is the worksheet index number or name, to return a single <b>Worksheet</b> object.</para>
          <para>The <b>Worksheet</b> object is also a member of the <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection. The <b>Sheets</b> collection contains all the sheets in the workbook (both chart sheets and worksheets).</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="22058-104">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="22058-105">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="22058-106">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-107">指定工作表的对象，新建的工作表将置于此工作表之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-107">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="22058-108">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-108">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-109">指定工作表的对象，新建的工作表将置于此工作表之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-109">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="22058-110">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-111">要添加的表数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-111">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="22058-112">默认值为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-112">The default value is one.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="22058-113">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-114">指定工作表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-114">Specifies the sheet type.</span>
          </span>
          <span data-ttu-id="22058-115">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />常量：<b>滴</b>、 <b>xlChart</b>、 <b>xlExcel4MacroSheet</b>或<b>xlExcel4IntlMacroSheet</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-115">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span>
          </span>
          <span data-ttu-id="22058-116">如果您要插入工作表基于现有模板，指定模板的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-116">If you are inserting a sheet based on an existing template, specify the path to the template.</span>
          </span>
          <span data-ttu-id="22058-117">默认值是<b>滴</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-117">The default value is <b>xlWorksheet</b>.</span>
          </span>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="22058-118">
            <para>如果<paramref name="Before" />和<paramref name="After" />是同时省略，新建的工作表插入到活动工作表之前。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-118">
              <para>If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="22058-119">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-119">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-120">指定工作表的对象，新建的工作表将置于此工作表之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-120">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="22058-121">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-121">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-122">指定工作表的对象，新建的工作表将置于此工作表之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-122">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="22058-123">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-123">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-124">要添加的表数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-124">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="22058-125">默认值为 1</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-125">The default value is one</span>
          </span>
        </param>
        <param name="NewLayout">
          <span data-ttu-id="22058-126">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-127">指定要用于新工作表的布局的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-127">An object that specifies the layout to be used for the new worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-128">此方法仅实现的<b>Charts</b>集合对象，并将产生一个运行的时错误，如果在<b>工作表</b>和<b>工作表</b>对象上使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-128">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on  the <b>Sheets</b> and <b>Worksheets</b> objects.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="22058-129">
            <para>如果<paramref name="Before" />和<paramref name="After" />是同时省略，新建的工作表插入到活动工作表之前。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-129">
              <para>If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-130">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-130">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="22058-131">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="22058-132">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-133">将在其前面放置复制的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-133">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="22058-134">不能指定<paramref name="Before" />如果指定<paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-134">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="22058-135">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-135">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-136">将在其后放置复制的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-136">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="22058-137">不能指定<paramref name="After" />如果指定<paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-137">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-138">将工作表复制到工作簿的另一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-138">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22058-139">
            <para>如果不指定<paramref name="Before" />或<paramref name="After" />，Microsoft Excel 将新建一个包含复制的工作表的新工作簿。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-139">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-140">返回集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-140">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="22058-141">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-141">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-142">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-142">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="22058-143">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-143">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="22058-144">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-144">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="22058-145">
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-145">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22058-146">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-146">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22058-147">当您删除的<para><see cref="T:Microsoft.Office.Interop.Excel.Workbook" />或<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />，此方法将显示一个对话框，提示用户确认删除。默认情况下显示此对话框。<b>Delete</b>方法返回一个<b>Boolean</b>值，如果用户单击取消对话框上的或<b>，则返回 True</b> ，如果用户单击删除为<b>False</b> 。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-147">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="22058-148">所需<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-148">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="22058-149">要填充集合中的所有工作表上的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-149">The range to fill on all the worksheets in the collection.</span>
          </span>
          <span data-ttu-id="22058-150">该范围必须从集合中的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-150">The range must be from a worksheet within the collection.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="22058-151">可选<see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-151">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          </span>
          <span data-ttu-id="22058-152">指定如何复制区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-152">Specifies how to copy the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-153">将单元格区域复制到集合中所有其他工作表的同一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-153">Copies a range to the same area on all other worksheets in a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-154">返回<see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" />集合，代表水平分页符工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-154">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="22058-155">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-155">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="22058-156">
            <para>没有限制为每个工作表的 1,026 水平分页符。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-156">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="22058-157">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-157">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-158">对象的名称或索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-158">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-159">从集合中返回一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-159">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="22058-160">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-161">将在其前面放置移动的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-161">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="22058-162">不能指定<paramref name="Before" />如果指定<paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-162">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="22058-163">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-163">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-164">将在其后放置移动的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-164">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="22058-165">不能指定<paramref name="After" />如果指定<b>之前</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-165">You cannot specify <paramref name="After" /> if you specify <b>Before</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-166">将工作表移到工作簿中的其他位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-166">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22058-167">
            <para>如果不指定<paramref name="Before" />或<paramref name="After" />，Microsoft Excel 将新建一个包含移动的工作表的新工作簿。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-167">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-p121">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-p121">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="22058-170">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-171">从中开始打印的页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-171">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="22058-172">如果省略此参数，则打印从开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-172">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="22058-173">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-174">要打印的末页数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-174">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="22058-175">如果省略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-175">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="22058-176">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-177">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-177">The number of copies to print.</span>
          </span>
          <span data-ttu-id="22058-178">如果省略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-178">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="22058-179">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-180">
            <b>True</b>由 Microsoft Excel 调用之前打印对象的打印预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-180">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="22058-181">
            <b>False</b>（或省略） 若要立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-181">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="22058-182">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-183">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-183">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="22058-184">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-185">
            <b>True</b>打印到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-185">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="22058-186">如果<paramref name="PrToFileName" />未指定，则 Microsoft Excel 将提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-186">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="22058-187">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-187">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-188">如果为 <b>True</b>，则逐份打印多个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-188">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="22058-189">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-189">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22058-190">如果<paramref name="PrintToFile" />设置为<b>True</b>，则该参数指定要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-190">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-191">打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-191">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22058-192">
            <para>"页面"的说明中的<paramref name="From" />和<paramref name="To" />指打印页 — 表或工作簿中的未全部页。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-192">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="22058-193">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-193">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="22058-194">启用对对象的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-194">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-195">按对象打印后的外观效果显示对象的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-195">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="22058-196">可选<b>对象</b>（仅与表一起使用）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-196">Optional <b>Object</b> (used only with sheets).</span>
          </span>
          <span data-ttu-id="22058-197">
            <b>为</b> 当前所选内容替换为指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-197">
              <b>True</b> to replace the current selection with the specified object.</span>
          </span>
          <span data-ttu-id="22058-198">
            <b>False</b> 来扩展当前选定内容以包括任何以前选定的对象和指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-198">
              <b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22058-199">选择对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-199">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22058-200">
            <para>，选择单元格区域，请使用<b>Select</b>方法。若要使单个单元格活动单元格，请使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />方法。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-200">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-201">确定对象是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-201">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="22058-202">读取/写入 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-202">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22058-203">返回<see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" />集合，代表垂直分页符工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-203">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="22058-204">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="22058-204">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>