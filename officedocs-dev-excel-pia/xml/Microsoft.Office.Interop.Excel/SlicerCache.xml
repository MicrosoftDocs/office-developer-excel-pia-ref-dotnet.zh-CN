<Type Name="SlicerCache" FullName="Microsoft.Office.Interop.Excel.SlicerCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="951453b7aced83a646566a98d4ccf3cf249622cc" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20579588" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface SlicerCache" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract SlicerCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.SlicerCache" />
  <TypeSignature Language="VB.NET" Value="Public Interface SlicerCache" />
  <TypeSignature Language="C++ CLI" Value="public interface class SlicerCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244C4-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表切片器以及有关哪些信息的当前筛选状态<see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />或<see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />切片器连接到。</summary>
    <remarks>
      <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />属性<see cref="T:Microsoft.Office.Interop.Excel._Workbook" />对象可访问集合<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />工作簿中的对象。</para>
      <para>每个切片器有基本<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象代表切片器和其对应的项标题中显示的图块数为单位的当前用户界面状态中显示的项目。在 Excel 中的用户看到每个切片器控件由<see cref="T:Microsoft.Office.Interop.Excel.Slicer" />对象，它具有<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象与其相关联</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用对象识别符，此属性获取<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。 如果使用对象识别符，此属性获取<see cref="T:Microsoft.Office.Interop.Excel.Application" />值，该值代表指定对象的创建者的对象。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Application" />对象。</value>
        <remarks>
          <para>只读的。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllFilters">
      <MemberSignature Language="C#" Value="public void ClearAllFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAllFilters() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.SlicerCache.ClearAllFilters" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllFilters ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllFilters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2561)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除切片器或日程表，具体取决于切片器缓存类型的筛选器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDateFilter">
      <MemberSignature Language="C#" Value="public void ClearDateFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearDateFilter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.SlicerCache.ClearDateFilter" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearDateFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearDateFilter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除时间线 （日期筛选器） 的筛选器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearManualFilter">
      <MemberSignature Language="C#" Value="public void ClearManualFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearManualFilter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.SlicerCache.ClearManualFilter" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearManualFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearManualFilter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2594)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除与指定切片器缓存关联的所有切片器的筛选。</summary>
        <remarks>
          <para>如果清除从一个切片器筛选通过使用<see cref="M:Microsoft.Office.Interop.Excel.SlicerCache.ClearManualFilter" />方法，但一个或多个切片器的交叉筛选数据，切片器中第一个切片器, 的某些项目仍处于灰显状态。例如，如果您有客户和国家/地区的切片器的交叉筛选，并执行 ActiveWorkbook.SlicerCaches("Slicer_Customer")。ClearManualFilter，Customer 切片器中的所有项目之前，不能可用执行 ActiveWorkbook.SlicerCaches("Slicer_Country")。ClearManualFilter。在交叉筛选的详细信息，请参阅<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个指示在其中创建此对象的应用程序的 32 位<b>整数</b>。</summary>
        <value>32 位<b>整数</b>，指示在其中创建此对象的应用程序。</value>
        <remarks>
          <para>只读的<b>long</b>。</para>如果对象在 Microsoft Excel 中创建的
          <para>，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.Creator" />属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossFilterType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType CrossFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType CrossFilterType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property CrossFilterType As XlSlicerCrossFilterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSlicerCrossFilterType CrossFilterType { Microsoft::Office::Interop::Excel::XlSlicerCrossFilterType get(); void set(Microsoft::Office::Interop::Excel::XlSlicerCrossFilterType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2978)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否切片器参与跨用共享相同的切片器缓存，其他切片器筛选和交叉筛选的显示方式。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType" />对象。</value>
        <remarks>
          <para>读/写。</para>如果多个切片器关联的同一个数据透视表，默认情况下，如果您在一个切片器筛选的项目有没有相应的数据，另一个切片器中的
          <para>，这些项目将灰显。例如，如果您具有 Country 切片器和状态切片器，并单击国家切片器中的国家/地区，所有状态的都相关不在的国家/地区将灰显。此功能称为为"跨筛选"。</para>设置对应的
          <para>用户界面设置<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性直观地指明空数据项和显示项目的切片器设置对话框中没有数据最后一个复选框。设置<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性设为<see cref="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerCrossFilterShowItemsWithDataAtTop" />对应于同时选中这两直观地指明没有数据的项并显示项目没有数据上次复选框。设置<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性设为<see cref="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerCrossFilterShowItemsWithNoData" />对应于仅选择直观地指明项目没有数据复选框。清除两个复选框对应于设置<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性设为<see cref="F:Microsoft.Office.Interop.Excel.XlSlicerCrossFilterType.xlSlicerNoCrossFilter" />。</para><para>OLAP 数据源 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 不支持<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.CrossFilterType" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象。对于 OLAP 数据源，使用<see cref="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.CrossFilterType" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />对象，而。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.SlicerCache.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除指定的切片器缓存以及相关联的切片器。</summary>
        <remarks>
          <para>若要删除独立切片器缓存于特定的切片器，请使用<see cref="M:Microsoft.Office.Interop.Excel.Slicer.Delete" />方法<see cref="T:Microsoft.Office.Interop.Excel.Slicer" />改为对象。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterCleared">
      <MemberSignature Language="C#" Value="public bool FilterCleared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterCleared" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.FilterCleared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterCleared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterCleared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回是否清除切片器或日程表筛选状态。 <b>Boolean</b>(<b>bool</b> C# 中)。 只读</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指定的<b>SlicerCache</b>对象中的索引<see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" />集合。</summary>
        <value>返回<see cref="T:System.Int32" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public bool List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool List" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool List { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为<b>true</b>的切片器缓存为上表的切片器。 <b>False</b>否则为。 <b>Boolean</b>(C# 中<b>bool</b> )只读</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>ListObject</b>对象<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />对象。 只读</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置切片器缓存的名称。</summary>
        <value>切片器缓存的名称。</value>
        <remarks>
          <para>切片器缓存的名称必须是唯一的工作簿的命名空间中。默认情况下，分配给切片器缓存的名称为与关联 Slicer_ 跟数据透视表字段的切片器缓存的名称。例如，如果切片器相关联的数据透视表中的产品类别字段，则默认名称将的 Slicer_Product_Category （任何空格字段名称中的替换下划线字符）。如果同名 Slicer_Product_Category 工作簿中没有超过一个与之关联的切片器与同一工作簿中的产品类别字段或某些其他命名的实体，Excel 会将大量追加后要生成的唯一名称的名称如 Slicer_Product_Category1。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLAP">
      <MemberSignature Language="C#" Value="public bool OLAP { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OLAP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLAP As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OLAP { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2077)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2077)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取是否与指定的切片器缓存关联的切片器基于 OLAP 数据源。</summary>
        <value>
          <b>true</b>如果与指定的切片器缓存关联的切片器基于 OLAP 数据源;否则为<b>false</b>。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <b>，则返回 true</b>，如果切片器基于 OLAP 数据源; 否则为<b>false</b>。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取父<see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" />指定的对象的<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象。</summary>
        <value>父<see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" />指定的对象的<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象。</value>
        <remarks>
          <para>只读的。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerPivotTables PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerPivotTables PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As SlicerPivotTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerPivotTables ^ PivotTables { Microsoft::Office::Interop::Excel::SlicerPivotTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerPivotTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取<see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" />集合，其中包含有关数据透视表的信息的切片器缓存当前筛选。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" />集合，其中包含有关数据透视表的信息的切片器缓存当前筛选。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <see cref="T:Microsoft.Office.Interop.Excel.SlicerPivotTables" />集合返回<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.PivotTables" />属性将为空，如果与指定的切片器关联<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />未连接到任何数据透视表。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireManualUpdate">
      <MemberSignature Language="C#" Value="public bool RequireManualUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireManualUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.RequireManualUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireManualUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireManualUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>所需的切片器缓存的则返回 true 时手动更新。 Boolean (C# 中<b>bool</b> ) 读/写</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllItems">
      <MemberSignature Language="C#" Value="public bool ShowAllItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAllItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAllItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(452)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(452)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否切片器连接到相应的 PivotCache 中从中删除指定的切片器缓存显示项目。</summary>
        <value>
          <b>true</b>如果切片器连接到指定的切片器缓存中相应的 PivotCache; 显示已被删除的项目否则为<b>false</b>。 默认值为 <b>true</b> 。</value>
        <remarks>
          <para>读/写。</para>
          <para>时<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems" />属性设置为<b>true</b> （默认值），连接到指定的切片器缓存的切片器中显示的源数据中已删除项目。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems" />属性对应于显示项目从切片器设置对话框中的数据源复选框中删除的设置。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems" />属性仅适用于基于工作簿范围或列表的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />)，或基于关系数据源的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal" />和<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" />  =  <b>false</b>)。尝试设置<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.ShowAllItems" />属性切片器连接到数据透视表的基于外部 OLAP 数据源 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 会生成运行时错误。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCacheLevels">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCacheLevels SlicerCacheLevels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCacheLevels SlicerCacheLevels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerCacheLevels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCacheLevels As SlicerCacheLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCacheLevels ^ SlicerCacheLevels { Microsoft::Office::Interop::Excel::SlicerCacheLevels ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2974)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2974)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCacheLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取集合中的<see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />代表指定的切片器缓存所基于的 OLAP 层次结构级别的对象。</summary>
        <value>集合的<see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />代表指定的切片器缓存所基于的 OLAP 层次结构级别的对象。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerCacheLevels" />属性仅适用于筛选的 OLAP 数据源的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>)。尝试从非 OLAP 切片器中访问此属性会生成运行时错误。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCacheType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSlicerCacheType SlicerCacheType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSlicerCacheType SlicerCacheType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerCacheType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCacheType As XlSlicerCacheType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSlicerCacheType SlicerCacheType { Microsoft::Office::Interop::Excel::XlSlicerCacheType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSlicerCacheType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回的切片器缓存 – 切片器或日程表的类型。 只读</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerItems SlicerItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerItems SlicerItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerItems As SlicerItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerItems ^ SlicerItems { Microsoft::Office::Interop::Excel::SlicerItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2977)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取<see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" />集合，其中包含切片器缓存中的所有项的集合。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" />集合，其中包含切片器缓存中的所有项的集合。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerItems" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象才适用，基于数据透视表的切片器基于工作簿范围或列表 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />)，或基于数据透视表的切片器基于关系数据源的 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal" />和<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" />  =  <b>false</b>)。尝试访问<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SlicerItems" />切片器连接到外部 OLAP 数据源的属性 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 会生成运行时错误。对于 OLAP 数据源，使用<see cref="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.SlicerItems" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />对象改为。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Slicers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicers Slicers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicers Slicers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.Slicers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Slicers As Slicers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicers ^ Slicers { Microsoft::Office::Interop::Excel::Slicers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取<see cref="T:Microsoft.Office.Interop.Excel.Slicers" />集合包含的集合，该集合<see cref="T:Microsoft.Office.Interop.Excel.Slicer" />对象与指定关联<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.Slicers" />集合包含的集合，该集合<see cref="T:Microsoft.Office.Interop.Excel.Slicer" />对象与指定关联<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。</value>
        <remarks>
          <para>只读的。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSlicerSort SortItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSlicerSort SortItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SortItems" />
      <MemberSignature Language="VB.NET" Value="Public Property SortItems As XlSlicerSort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSlicerSort SortItems { Microsoft::Office::Interop::Excel::XlSlicerSort get(); void set(Microsoft::Office::Interop::Excel::XlSlicerSort value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSlicerSort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否对切片器中的项目进行排序。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.XlSlicerSort" />对象。</value>
        <remarks>
          <para>读/写。</para>
          <para>此属性的默认设置是<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" />。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SortItems" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />对象仅适用于基于连接到工作簿范围或列表的数据透视表的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> = <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />).尝试访问<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SortItems" />切片器连接到 OLAP 数据源的属性 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 会生成运行时错误。对于 OLAP 数据源，使用<see cref="P:Microsoft.Office.Interop.Excel.SlicerCacheLevel.SortItems" />属性<see cref="T:Microsoft.Office.Interop.Excel.SlicerCacheLevel" />对象改为。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortUsingCustomLists">
      <MemberSignature Language="C#" Value="public bool SortUsingCustomLists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortUsingCustomLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SortUsingCustomLists" />
      <MemberSignature Language="VB.NET" Value="Public Property SortUsingCustomLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SortUsingCustomLists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否将通过自定义列表排序指定的切片器缓存中的项目。</summary>
        <value>如果为<b>true</b>将按自定义列表; 排序指定的切片器缓存中的项目否则为<b>false</b>。</value>
        <remarks>
          <para>读/写。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SortUsingCustomLists" />属性对应于使用自定义列表的设置时排序切片器设置对话框的复选框。若要访问与当前安装的 Excel 相关联的自定义列表，单击文件选项卡，单击选项、 高级，，然后单击在常规类别下的编辑自定义列表。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SortUsingCustomLists" />属性仅适用于筛选非 OLAP 数据源的切片器。尝试从正在筛选的 OLAP 数据源的切片器缓存中访问此属性 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 会生成运行时错误。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取切片器连接到数据源的名称。</summary>
        <value>切片器连接到数据源的名称。</value>
        <remarks>
          <para>只读的。</para>
          <para>的切片器基于工作簿中的数据 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />)，或基于非 OLAP 外部数据的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal" />和<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" />  =  <b>false</b>)，返回源数据中相应列的名称。</para>
          <para>对于 OLAP 切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>)，返回切片器所基于的层次结构的 MDX 唯一名称。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotTableSourceType SourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotTableSourceType SourceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceType As XlPivotTableSourceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotTableSourceType SourceType { Microsoft::Office::Interop::Excel::XlPivotTableSourceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(685)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(685)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotTableSourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取的切片器连接到的数据源的类型。</summary>
        <value>切片器连接到的数据源的类型。</value>
        <remarks>
          <para>只读的。</para>
          <para>仅<see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />和<see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal" />支持数据源类型。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimelineState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TimelineState TimelineState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TimelineState TimelineState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.TimelineState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimelineState As TimelineState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TimelineState ^ TimelineState { Microsoft::Office::Interop::Excel::TimelineState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TimelineState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>SlicerCache</b>对象的特定于日程表的状态。 只读</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleSlicerItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerItems VisibleSlicerItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerItems VisibleSlicerItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleSlicerItems As SlicerItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerItems ^ VisibleSlicerItems { Microsoft::Office::Interop::Excel::SlicerItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取<see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" />集合，其中包含指定的切片器缓存中的所有可见项目的集合。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.SlicerItems" />集合，其中包含指定的切片器缓存中的所有可见项目的集合。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItems" />属性才适用，基于数据透视表的切片器基于工作簿范围或列表 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> = <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />).尝试访问<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItems" />切片器连接到 OLAP 数据源的属性 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>) 会生成运行时错误。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleSlicerItemsList">
      <MemberSignature Language="C#" Value="public object VisibleSlicerItemsList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VisibleSlicerItemsList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItemsList" />
      <MemberSignature Language="VB.NET" Value="Public Property VisibleSlicerItemsList As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VisibleSlicerItemsList { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2976)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在其中应用手动筛选的所有级别层次结构的成员的 MDX 唯一名称的列表。</summary>
        <value>在其中应用手动筛选的所有级别层次结构的成员的 MDX 唯一名称的列表。</value>
        <remarks>
          <para>读/写。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.VisibleSlicerItemsList" />属性仅适用于基于 OLAP 数据源的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.OLAP" /> =  <b>，则返回 true</b>)。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SlicerCache.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取<see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />对象，表示由指定的切片器的数据连接。</summary>
        <value>A<see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />对象，表示由指定的切片器的数据连接。</value>
        <remarks>
          <para>只读的。</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.WorkbookConnection" />属性仅适用于基于外部数据源的切片器 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> = <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal" />).尝试访问<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.WorkbookConnection" />属性连接到数据透视表的切片器基于工作簿范围或列表 (<see cref="T:Microsoft.Office.Interop.Excel.SlicerCache" />。<see cref="P:Microsoft.Office.Interop.Excel.SlicerCache.SourceType" /> =  <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase" />) 将生成运行时错误。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>