<Type Name="CalculatedMembers" FullName="Microsoft.Office.Interop.Excel.CalculatedMembers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ef237f29eff8550f0d57ac22a72517d08855192" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20572833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CalculatedMembers : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMembers implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMembers" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMembers&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMembers : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024454-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d80df-101">所有的集合<see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />指定数据透视表上的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d80df-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects on the specified PivotTable.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="d80df-102">每个<see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />对象代表计算的成员或计算度量值。</span>
        <span class="sxs-lookup">
          <span data-stu-id="d80df-102">Each <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> object represents a calculated member or calculated measure.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="d80df-103">使用<see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" />属性<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />对象返回<see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" />集合。</span>
        <span class="sxs-lookup">
          <span data-stu-id="d80df-103">Use the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object to return a <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMember _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As CalculatedMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMember ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::CalculatedMember ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="d80df-104">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Add (string Name, string Formula, object SolveOrder, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember Add([in]string Name, [in]string Formula, [in]object SolveOrder, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Formula As String, Optional SolveOrder As Object, Optional Type As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.String" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="d80df-105">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-105">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="d80df-106">计算成员的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-106">The name of the calculated member.</span>
          </span>
        </param>
        <param name="Formula">
          <span data-ttu-id="d80df-107">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-107">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="d80df-108">计算成员的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-108">The formula of the calculated member.</span>
          </span>
        </param>
        <param name="SolveOrder">
          <span data-ttu-id="d80df-109">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-109">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d80df-110">计算成员的求解次序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-110">The solve order for the calculated member.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="d80df-111">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d80df-112">计算成员的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-112">The type of calculated member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d80df-113">向数据透视表计算的字段或计算的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-113">Adds a calculated field or calculated item to a PivotTable.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="d80df-114">
              <paramref name="Formula" />参数必须具有有效的 MDX （多维表达式） 语法语句。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-114">The <paramref name="Formula" /> argument must have a valid MDX (multidimensional expression) syntax statement.</span>
            </span>
            <span data-ttu-id="d80df-115">
              <paramref name="Name" />参数必须是可接受的联机分析处理 (OLAP) 提供程序和<paramref name="Type" />参数必须定义。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-115">The <paramref name="Name" /> argument has to be acceptable to the Online Analytical Processing (OLAP) provider and the <paramref name="Type" /> argument has to be defined.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="d80df-116">如果您设置<paramref name="Type" />到此方法的参数<paramref name="xlCalculatedSet" />，然后必须调用<see cref="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)" />方法以使新的字段集在数据透视表中可见。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-116">If you set the <paramref name="Type" /> argument of this method to <paramref name="xlCalculatedSet" />, then you must call the <see cref="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)" /> method to make the new field set visible in the PivotTable.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Add2 (string Name, object Formula, object SolveOrder, object Type, object Dynamic, object DisplayFolder, object HierarchizeDistinct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember Add2([in]string Name, [in]object Formula, [in]object SolveOrder, [in]object Type, [in]object Dynamic, [in]object DisplayFolder, [in]object HierarchizeDistinct) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add2(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Name As String, Formula As Object, Optional SolveOrder As Object, Optional Type As Object, Optional Dynamic As Object, Optional DisplayFolder As Object, Optional HierarchizeDistinct As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Dynamic" Type="System.Object" />
        <Parameter Name="DisplayFolder" Type="System.Object" />
        <Parameter Name="HierarchizeDistinct" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <param name="Formula">To be added.</param>
        <param name="SolveOrder">To be added.</param>
        <param name="Type">To be added.</param>
        <param name="Dynamic">To be added.</param>
        <param name="DisplayFolder">To be added.</param>
        <param name="HierarchizeDistinct">To be added.</param>
        <summary>
          <span data-ttu-id="d80df-117">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-117">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d80df-118">返回<see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-118">Returns <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCalculatedMember">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember AddCalculatedMember (string Name, object Formula, object SolveOrder, object Type, object DisplayFolder, object MeasureGroup, object ParentHierarchy, object ParentMember, object NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember AddCalculatedMember([in]string Name, [in]object Formula, [in]object SolveOrder, [in]object Type, [in]object DisplayFolder, [in]object MeasureGroup, [in]object ParentHierarchy, [in]object ParentMember, [in]object NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.AddCalculatedMember(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCalculatedMember (Name As String, Formula As Object, Optional SolveOrder As Object, Optional Type As Object, Optional DisplayFolder As Object, Optional MeasureGroup As Object, Optional ParentHierarchy As Object, Optional ParentMember As Object, Optional NumberFormat As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3091)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="DisplayFolder" Type="System.Object" />
        <Parameter Name="MeasureGroup" Type="System.Object" />
        <Parameter Name="ParentHierarchy" Type="System.Object" />
        <Parameter Name="ParentMember" Type="System.Object" />
        <Parameter Name="NumberFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="d80df-119">计算成员的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-119">The name of the calculated member.</span>
          </span>
        </param>
        <param name="Formula">
          <span data-ttu-id="d80df-120">计算成员的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-120">The formula of the calculated member.</span>
          </span>
        </param>
        <param name="SolveOrder">
          <span data-ttu-id="d80df-121">计算成员的求解次序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-121">The solve order for the calculated member.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="d80df-122">计算成员的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-122">The type of calculated member.</span>
          </span>
        </param>
        <param name="DisplayFolder">
          <span data-ttu-id="d80df-123">存在显示计算度量值的文件夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-123">A folder that exists to display calculated measures.</span>
          </span>
        </param>
        <param name="MeasureGroup">
          <span data-ttu-id="d80df-124">向其计算所属的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-124">The group to which the calculated belongs.</span>
          </span>
        </param>
        <param name="ParentHierarchy">
          <span data-ttu-id="d80df-125">
            <b>ParentMember</b>父路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-125">The parent path of the <b>ParentMember</b>.</span>
          </span>
        </param>
        <param name="ParentMember">
          <span data-ttu-id="d80df-126">计算成员的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-126">The parent of the calculated member.</span>
          </span>
        </param>
        <param name="NumberFormat">
          <span data-ttu-id="d80df-127">用于计算成员的号码的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-127">The format of numbers used for calculated members.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d80df-128">向数据透视表计算的字段或计算的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-128">Adds a calculated field or calculated item to a PivotTable.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="d80df-129">
              <b>公式</b>参数必须有有效的 MDX （多维表达式） 语法语句。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-129">The <b>Formula</b> argument must have a valid MDX (multidimensional expression) syntax statement.</span>
            </span>
            <span data-ttu-id="d80df-130">
              <b>名称</b>参数必须是可接受的联机分析处理 (OLAP) 提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-130">The <b>Name</b> argument has to be acceptable to the Online Analytical Processing (OLAP) provider.</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="d80df-131">
                  <b>DisplayFolder</b>： 显示文件夹仅供计算度量值。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-131">
                    <b>DisplayFolder</b>: Display folders are only valid for calculated measures.</span>
                </span>
                <span data-ttu-id="d80df-132">它们不是有效的计算成员的。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-132">They are not valid for calculated members.</span>
                </span>
                <span data-ttu-id="d80df-133">字符串可以具有分号;在它。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-133">The string can have semicolons ; in it.</span>
                </span>
                <span data-ttu-id="d80df-134">分号指定多个显示文件夹。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-134">Semicolons designate multiple display folders.</span>
                </span>
                <span data-ttu-id="d80df-135">例如，如果您使用的字符串我 folder1; myfolder2 然后计算度量值将显示在两个显示文件夹一个命名 myfolder1 其他命名 myfolder2。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-135">For example, if you use the string my folder1;myfolder2 then the calculated measure will show in two display folders one named myfolder1 the other named ‘myfolder2’.</span>
                </span>
                <span data-ttu-id="d80df-136">字符串可以具有反斜杠 \。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-136">The string can have backslashes \.</span>
                </span>
                <span data-ttu-id="d80df-137">这将指定的显示文件夹的分层路径。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-137">This designates a hierarchical path for the display folder.</span>
                </span>
                <span data-ttu-id="d80df-138">例如，如果您使用将会字符串 welcome\to\seattle 调用欢迎包含显示文件夹的显示文件夹调用到其中包含一个名为西雅图的显示文件夹。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-138">For example, if you use the string welcome\to\seattle there will be a display folder called welcome that contains a display folder called to which contains a display folder called seattle.</span>
                </span>
                <span data-ttu-id="d80df-139">显示文件夹是虚拟文件夹。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-139">Display folders are virtual folders.</span>
                </span>
                <span data-ttu-id="d80df-140">它们真正不存在同一意义上说，我们认为系统文件夹中。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-140">They do not really exist in the same sense that we think of system folders.</span>
                </span>
                <span data-ttu-id="d80df-141">仅存在为了显示计算度量值。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-141">They only exist for purposes of displaying the calculated measures.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="d80df-142">
                  <b>NumberFormat</b>： 只能通过宏设置数字格式。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-142">
                    <b>NumberFormat</b>: The number formats can only be set by macros.</span>
                </span>
                <span data-ttu-id="d80df-143">没有设置其用户界面。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-143">There is no user interface for setting them.</span>
                </span>
                <span data-ttu-id="d80df-144">这是不能通过用户界面设置的唯一属性。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-144">This is the only property that cannot be set via the user interface.</span>
                </span>
                <span data-ttu-id="d80df-145">类型始终是<b>xlNumberFormatTypeDefault</b>时通过用户界面创建的计算的成员。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-145">The type is always <b>xlNumberFormatTypeDefault</b> when a calculated member is created via the user interface.</span>
                </span>
                <span data-ttu-id="d80df-146">仅供计算成员的数字格式。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-146">The number formats are only valid for calculated members.</span>
                </span>
                <span data-ttu-id="d80df-147">不计算度量值无效。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-147">They are not valid for calculated measures.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="d80df-148">
                  <b>ParentHierarchy</b>： 父层次结构可以是任何有效的 MDX 层次结构。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-148">
                    <b>ParentHierarchy</b>: The parent hierarchy can be any valid MDX hierarchy.</span>
                </span>
                <span data-ttu-id="d80df-149">父层次结构仅供计算成员。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-149">Parent hierarchies are only valid for calculated members.</span>
                </span>
                <span data-ttu-id="d80df-150">不计算度量值无效。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-150">They are not valid for calculated measures.</span>
                </span>
                <span data-ttu-id="d80df-151">如果这另一父层次结构中选择父成员，父层次结构将自动更改要匹配的父成员的父级层次结构。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d80df-151">If a parent member is chosen that is in a different parent hierarchy, the parent hierarchy will be automatically changed to match the parent hierarchy of the parent member.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d80df-152">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-152">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d80df-153">返回集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-153">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d80df-154">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-154">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="d80df-155">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-155">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="d80df-156">
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-156">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="d80df-157">例如，Microsoft Excel 具有 XCEL 的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d80df-157">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMember Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As CalculatedMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMember ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::CalculatedMember ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d80df-158">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-158">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d80df-159">对象的名称或索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-159">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d80df-160">从集合中返回一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-160">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d80df-161">返回指定对象的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d80df-161">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>