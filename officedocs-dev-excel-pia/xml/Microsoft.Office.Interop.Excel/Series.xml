<Type Name="Series" FullName="Microsoft.Office.Interop.Excel.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a8cc36d1324ac7595cb7a40f82c526876f56ea7" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574828" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Series" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Series" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Series" />
  <TypeSignature Language="VB.NET" Value="Public Interface Series" />
  <TypeSignature Language="C++ CLI" Value="public interface class Series" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1cc81-101">代表图表上的系列。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cc81-101">Represents a series in a chart.</span>
      </span>
      <span data-ttu-id="1cc81-102">
        <b>Series</b>对象是成员<see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" />集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cc81-102">The <b>Series</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="1cc81-103">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-104">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="1cc81-105">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-105">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCustomType(Microsoft::Office::Interop::Excel::XlChartType ChartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="1cc81-106">所需<see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-106">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="1cc81-107">标准图表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-107">A standard chart type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-108">将标准图表类型或自定义图表类型应用于数据系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-108">Applies a standard or custom chart type to a series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="1cc81-109">可选<see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-109">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="1cc81-110">要应用的数据标签的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-110">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="1cc81-111">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-112">
            <b>True</b> 显示图例项标示点旁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-112">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="1cc81-113">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-113">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="1cc81-114">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-115">
            <b>如此</b> 如果对象自动生成合适的文字内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-115">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="1cc81-116">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-116">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-117">为<see cref="T:Microsoft.Office.Interop.Excel.Chart" />和<see cref="T:Microsoft.Office.Interop.Excel.Series" />对象，<b>则返回 True</b>如果系列有引导线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-117">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="1cc81-118">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-119">数据标签的系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-119">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="1cc81-120">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-121">数据标签的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="1cc81-122">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-123">数据标签的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="1cc81-124">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-125">数据标签的百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-125">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="1cc81-126">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-127">数据标签的气泡大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-127">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="1cc81-128">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-129">数据标签的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-129">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-130">将数据标签应用于图表中的某一数据点、某一数据系列或所有数据系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-130">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p114">如果图片应用于系列中数据点或所有数据点之后，则该属性值为 <b>True</b> 。 <b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p114">
              <b>True</b> if a picture is applied to the end of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p115">如果图片应用于系列中数据点或所有数据点之前，则该属性值为 <b>True</b> 。 <b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p115">
              <b>True</b> if a picture is applied to the front of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p116">如果图片应用于系列中数据点或所有数据点的旁边，则该属性值为 <b>True</b> 。 <b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p116">
              <b>True</b> if a picture is applied to the sides of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.AxisGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisGroup As XlAxisGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAxisGroup AxisGroup { Microsoft::Office::Interop::Excel::XlAxisGroup get(); void set(Microsoft::Office::Interop::Excel::XlAxisGroup value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAxisGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-137">返回指定的图表组或系列的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-137">Returns the group for the specified chart group or series.</span>
          </span>
          <span data-ttu-id="1cc81-138">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-138">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-139">对于三维图表，仅 <b>xlPrimary</b> 有效。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-139">For 3-D charts, only <b>xlPrimary</b> is valid.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-140">返回或设置用于三维条形图或柱形图的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-140">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
          <span data-ttu-id="1cc81-141">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-141">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-142">返回<see cref="T:Microsoft.Office.Interop.Excel.Border" />对象，它代表对象的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-142">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleSizes">
      <MemberSignature Language="C#" Value="public object BubbleSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BubbleSizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BubbleSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleSizes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BubbleSizes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-143">返回或设置一个 string，指的是包含图表的气泡大小数据的工作表单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-143">Returns or sets a string that refers to the worksheet cells containing the size data for the bubble chart.</span>
          </span>
          <span data-ttu-id="1cc81-144">仅适用于气泡图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-144">Applies only to bubble charts.</span>
          </span>
          <span data-ttu-id="1cc81-145">读取/写入 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-145">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-146">在返回的单元格引用时，它将返回描述 A1 样式表示法中的单元格的字符串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-146">When you return the cell reference, it will return a string describing the cells in A1-style notation.</span>
            </span>
            <span data-ttu-id="1cc81-147">若要设置图表的气泡大小数据，必须使用 R1 样式表示法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-147">To set the size data for the bubble chart, you must use R1-style notation.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-148">返回或设置图表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-148">Returns or sets the chart type.</span>
          </span>
          <span data-ttu-id="1cc81-149">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-149">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-150">某些图表类型对数据透视图报表无效。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-150">Some chart types aren’t available for PivotChart reports.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-151">清除对象的格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-151">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-152">将对象复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-152">Copies the object to the Clipboard.</span>
          </span>
          <span data-ttu-id="1cc81-153">将数据点或数据系列的图片复制到剪贴板中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-153">Copies a picture of the point or series to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-154">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-154">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="1cc81-155">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-155">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="1cc81-156">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-157">
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-157">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="1cc81-158">例如，Microsoft Excel 具有 XCEL 的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-158">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabels">
      <MemberSignature Language="C#" Value="public object DataLabels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataLabels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataLabels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="1cc81-159">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-160">数据标签的编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-160">The number of the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-161">返回一个 object 值，该值代表之一的单个数据标签 (<see cref="T:Microsoft.Office.Interop.Excel.DataLabel" />对象) 或所有数据系列的数据标签集合 (<see cref="T:Microsoft.Office.Interop.Excel.DataLabels" />集合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-161">Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-p126">如果系列中指定数据标签的 <b>"显示值"</b>选项处于打开状态，则返回的集合中每个数据点最多包含一个数据标签。可对系列中的各个数据点打开或关闭数据标签。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p126">If the series has the <b>Show Value</b> option turned on for the data labels, the returned collection can contain up to one label for each point. Data labels can be turned on or off for individual points in the series.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-164">如果指定系列处于面积图中，并且数据标签的 <b>"显示标签"</b>选项处于打开状态，则返回的集合中仅包含单个数据标签，即面积系列的标签。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-164">If the series is on an area chart and has the <b>Show Label</b> option turned on for the data labels, the returned collection contains only a single label, which is the label for the area series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-165">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-165">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-166">删除 <b>Point</b> 对象或 <b>LegendKey</b> 对象将删除整个数据系列。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-166">Deleting a <b>Point</b> or <b>LegendKey</b> object deletes the entire series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBar">
      <MemberSignature Language="C#" Value="public object ErrorBar (Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, Microsoft.Office.Interop.Excel.XlErrorBarType Type, object Amount, object MinusValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ErrorBar([in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarType Type, [in]object Amount, [in]object MinusValues) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorBar (Direction As XlErrorBarDirection, Include As XlErrorBarInclude, Type As XlErrorBarType, Optional Amount As Object, Optional MinusValues As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlErrorBarDirection" />
        <Parameter Name="Include" Type="Microsoft.Office.Interop.Excel.XlErrorBarInclude" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlErrorBarType" />
        <Parameter Name="Amount" Type="System.Object" />
        <Parameter Name="MinusValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="1cc81-167">所需<see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-167">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          </span>
          <span data-ttu-id="1cc81-168">误差线方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-168">The error bar direction.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="1cc81-169">所需<see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-169">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          </span>
          <span data-ttu-id="1cc81-170">要包含的误差线部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-170">The error bar parts to include.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="1cc81-171">所需<see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-171">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          </span>
          <span data-ttu-id="1cc81-172">误差线类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-172">The error bar type.</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="1cc81-173">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-174">误差量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-174">The error amount.</span>
          </span>
          <span data-ttu-id="1cc81-175">用于仅正误差量时<paramref name="Type" />是<b>xlErrorBarTypeCustom</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-175">Used for only the positive error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <param name="MinusValues">
          <span data-ttu-id="1cc81-176">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-177">负误差量时<paramref name="Type" />是<b>xlErrorBarTypeCustom</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-177">The negative error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-178">将误差线应用于系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-178">Applies error bars to the series.</span>
          </span>
          <span data-ttu-id="1cc81-179">
            <b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-179">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorBars ErrorBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorBars ErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorBars As ErrorBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorBars ^ ErrorBars { Microsoft::Office::Interop::Excel::ErrorBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-180">返回<see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" />对象，它代表数据系列的误差线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-180">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object that represents the error bars for the series.</span>
          </span>
          <span data-ttu-id="1cc81-181">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-181">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-182">返回或设置饼图或圆环图的扇区的分离程度值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-182">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span>
          </span>
          <span data-ttu-id="1cc81-183">如果没有分离 （切片的提示是与饼图中心中），则返回 0 （零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-183">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span>
          </span>
          <span data-ttu-id="1cc81-184">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-184">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-185">返回<see cref="T:Microsoft.Office.Interop.Excel.FillFormat" />对象，其中包含填充格式指定的图表或形状的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="1cc81-186">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-186">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-187">返回<see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-187">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="1cc81-188">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-188">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-189">使用 A1 样式表示法返回或设置对象的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-189">Returns or sets the object's formula in A1-style notation.</span>
          </span>
          <span data-ttu-id="1cc81-190">可读写 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-190">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-191">此属性对于 OLAP 数据源无效。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-191">This property is not available for OLAP data sources.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p138">如果单元格包含一个常量，此属性返回该常量。如果单元格为空，此 <b>Formula</b> 属性返回一个空字符串。如果单元格包含公式，<b>Formula</b> 属性将该公式作为字符串返回，所用格式与在编辑栏（包括等号）中显示时的格式相同。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p138">If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p139">如果将单元格的值或者公式设置为日期类型，则 Microsoft Excel 将检查此单元格的数字格式是否符合日期或者时间格式。如果不符合，Microsoft Excel 将把数字格式设置为默认的短日期格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p139">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p140">如果指定区域是一维或二维区域，则可将公式指定为 Visual Basic 中相同维数的数组。同样，也可在 Visual Basic 数组中使用公式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p140">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-199">如果为多单元格区域设置公式，则会用公式填充该区域所有的单元格。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-199">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public string FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-200">返回或设置在用户的语言使用 A1-样式引用的对象的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-200">Returns or sets the formula for the object using A1-style references in the language of the user.</span>
          </span>
          <span data-ttu-id="1cc81-201">读/写<b>String</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-201">Read/write <b>String</b></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-p142">如果指定单元格包含常量，此属性返回的就是该常量。如果单元格为空，此属性返回一个空字符串。如果单元格包含公式，此属性将该公式作为字符串返回，所用格式与在编辑栏（包括等号）中显示时的格式相同。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p142">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p143">如果将单元格的格式的值或公式设为日期类型，Microsoft Excel 将检查该单元格的格式是否符合某个日期或时间数组格式，如果不符合，将采用默认的短日期数字格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p143">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p144">如果指定区域是一维或二维区域，则可将公式指定为 Visual Basic 中相同维数的数组。同样，也可在 Visual Basic 数组中使用公式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p144">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-209">如果对多重单元格区域设置公式，则该区域中的所有单元格都用此公式填充。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-209">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public string FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-210">返回或设置使用 R1C1 样式表示法对象的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-210">Returns or sets the formula for the object using R1C1-style notation.</span>
          </span>
          <span data-ttu-id="1cc81-211">可读写 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-211">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-p146">如果单元格包含一个常量，此属性返回该常量。如果单元格为空，此属性返回一个空字符串。如果单元格包含公式，此属性将该公式作为字符串返回，所使用的格式与在公式栏中显示的格式相同（包括等号）。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p146">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p147">如果将单元格的格式的值或公式设为日期类型，Microsoft Excel 将检查该单元格的格式是否符合某个日期或时间数组格式，如果不符合，将采用默认的短日期数字格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p147">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p148">如果指定区域是一维或二维区域，则可将公式指定为 Visual Basic 中相同维数的数组。同样，也可在 Visual Basic 数组中使用公式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p148">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-219">如果对多重单元格区域设置公式，则该区域中的所有单元格都用此公式填充。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-219">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public string FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1Local { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p149">返回或设置对象，使用的用户语言的 R1C1 样式表示法表示的公式。读/写， <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p149">Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-p150">如果指定单元格包含常量，此属性返回的就是该常量。如果单元格为空，此属性返回一个空字符串。如果单元格包含公式，此属性将该公式作为字符串返回，所用格式与在编辑栏（包括等号）中显示时的格式相同。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p150">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p151">如果将单元格的格式的值或公式设为日期类型，Microsoft Excel 将检查该单元格的格式是否符合某个日期或时间数组格式，如果不符合，将采用默认的短日期数字格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p151">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-p152">如果指定区域是一维或二维区域，则可将公式指定为 Visual Basic 中相同维数的数组。同样，也可在 Visual Basic 数组中使用公式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p152">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-229">如果对多重单元格区域设置公式，则该区域中的所有单元格都用此公式填充。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-229">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p153">如果数据系列有三维外观，则该属性值为 <b>True</b>。仅适用于气泡图。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p153">
              <b>True</b> if the series has a three-dimensional appearance. Applies only to bubble charts. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabels">
      <MemberSignature Language="C#" Value="public bool HasDataLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasDataLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p154">如果数据系列具有数据标签，则该属性值为 <b>True</b> 。 <b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p154">
              <b>True</b> if the series has data labels. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrorBars">
      <MemberSignature Language="C#" Value="public bool HasErrorBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public Property HasErrorBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrorBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-235">
            <b>如此</b> 如果数据系列有误差线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-235">
              <b>True</b> if the series has error bars.</span>
          </span>
          <span data-ttu-id="1cc81-236">此属性不可用于三维图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-236">This property isn’t available for 3-D charts.</span>
          </span>
          <span data-ttu-id="1cc81-237">可读写 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-237">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLeaderLines">
      <MemberSignature Language="C#" Value="public bool HasLeaderLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasLeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLeaderLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLeaderLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p156">如果数据系列有引导线，则该属性值为 <b>True</b> 。 <b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p156">
              <b>True</b> if the series has leader lines. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-240">返回<see cref="T:Microsoft.Office.Interop.Excel.Interior" />值，该值代表指定对象的内部的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-240">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColor">
      <MemberSignature Language="C#" Value="public int InvertColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-241">获取或设置在一系列中的负数据点的填充颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-241">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc81-242">系列中的负数据点的填充颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-242">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-243">为可读/写属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-243">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-244">
              <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />属性使您能够负数据点的填充色设置为特定的数字、 十六进制数，八进制数或 RGB 颜色值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-244">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property enables you to set the fill color for negative data points as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
            <span data-ttu-id="1cc81-245">若要设置的值作为 RBG 值，使用 Visual Basic 的<b>RGB</b>函数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-245">To set the value as an RBG value, use the Visual Basic <b>RGB</b> function.</span>
            </span>
            <span data-ttu-id="1cc81-246">而不是使用<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />属性，您可以使用<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />属性，使用一组较简单的当前调色板中的整数值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-246">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, which uses a simpler set of integer values from the current color palette.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-247">为<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />属性起作用，<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />属性<see cref="T:Microsoft.Office.Interop.Excel.Series" />对象还必须设置为<b>true</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-247">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColorIndex">
      <MemberSignature Language="C#" Value="public int InvertColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColorIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-248">获取或设置在一系列中的负数据点的填充颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-248">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc81-249">系列中的负数据点的填充颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-249">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-250">为可读/写属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-250">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-251">
              <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />属性使您能够设置负数据点的填充颜色的颜色索引值为从 0 到 56。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-251">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property enables you to set the fill color for negative data points as a color index value from 0 to 56.</span>
            </span>
            <span data-ttu-id="1cc81-252">而不是使用<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />属性，您可以使用<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />属性，使您能够将颜色设置为特定数值，十六进制、 八进制或 RGB 颜色值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-252">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, which enables you to set the color as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-253">为<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />属性起作用，<see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />属性<see cref="T:Microsoft.Office.Interop.Excel.Series" />对象还必须设置为<b>true</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-253">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p159">如果指定项与一个负数相对应时 Microsoft Excel 就将其反色，则为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p159">
              <b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFiltered">
      <MemberSignature Language="C#" Value="public bool IsFiltered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFiltered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.IsFiltered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFiltered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFiltered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-256">此设置控制是否系列已被筛选图表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-256">This setting controls whether the series has been filtered out from the chart.</span>
          </span>
          <span data-ttu-id="1cc81-257">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-257">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="1cc81-258">
            <b>Boolean</b>(C# 中<b>bool</b> )读/写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-258">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-259">当用户筛选出一系列时，系列<b>IsFiltered</b>属性切换为<b>True</b>，并且系列传递超出其父级<b>SeriesCollection</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-259">When a user filters out a series, the series <b>IsFiltered</b> property switches to <b>True</b>, and the series is transferred out of its parent <b>SeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="1cc81-260">但是，该系列仍保留其父级<b>FullSeriesCollection</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-260">However, that series still remains in its parent <b>FullSeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="1cc81-261">当系列重新用户筛选器时，它将插入回中<b>SeriesCollection</b>其原始位置。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-261">When a user filters the series back in, it is inserted back in its original place in the <b>SeriesCollection</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaderLines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LeaderLines LeaderLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LeaderLines LeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.LeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaderLines As LeaderLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LeaderLines ^ LeaderLines { Microsoft::Office::Interop::Excel::LeaderLines ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LeaderLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p162">返回一个 <b>LeaderLines</b> 对象，该对象表示系列的引导线。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p162">Returns a <b>LeaderLines</b> object that represents the leader lines for the series. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-264">返回或设置为 RGB 值的数据标记背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-264">Returns or sets the marker background color as an RGB value.</span>
          </span>
          <span data-ttu-id="1cc81-265">仅适用于折线图、 散点图和雷达图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-265">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="1cc81-266">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-266">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-267">返回或设置数据标记背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-267">Returns or sets the marker background color.</span>
          </span>
          <span data-ttu-id="1cc81-268">仅适用于折线图、 散点图和雷达图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-268">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="1cc81-269">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-269">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-270">返回或设置为 RGB 值的标记的前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-270">Returns or sets the foreground color of the marker as an RGB value.</span>
          </span>
          <span data-ttu-id="1cc81-271">仅适用于折线图、 散点图和雷达图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-271">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="1cc81-272">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-272">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-273">返回或设置标记前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-273">Returns or sets the marker foreground color.</span>
          </span>
          <span data-ttu-id="1cc81-274">仅适用于折线图、 散点图和雷达图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-274">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="1cc81-275">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-275">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-276">返回或设置数据标记大小，以磅为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-276">Returns or sets the data-marker size in points.</span>
          </span>
          <span data-ttu-id="1cc81-277">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-277">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-278">返回或设置折线图、散点图或雷达图中数据点或系列的数据标记样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-278">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span>
          </span>
          <span data-ttu-id="1cc81-279">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-279">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p169">返回或设置对象的名称。 <b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p169">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-282">下表显示了 <b>Name</b> 属性和相关属性的示例值，同时假设有一个具有唯一名称为“[Europe].[France].[Paris]”的 OLAP 数据源，有一个包含项名称为“Paris”的非 OLAP 数据源。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-282">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1cc81-283">
                  <b>标题</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-283">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-284">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-284">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1cc81-285">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-285">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1cc81-286">
                  <b>名称</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-286">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-287">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-287">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1cc81-288">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-288">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1cc81-289">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-289">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-290">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-290">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1cc81-291">（与 SQL 属性值相同，只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-291">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1cc81-292">
                  <b>值</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-292">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-293">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-293">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1cc81-294">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-294">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="1cc81-295">指定的索引时<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />集合，您可以使用下表中所示的语法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-295">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1cc81-296">表达式。PivotItems ("[Europe]。 [法国]。[Paris]")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-296">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-297">表达式。PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-297">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="1cc81-298">当使用<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />属性引用集合中的特定成员，您可以使用下表中所示的文本索引名称。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-298">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1cc81-299">[Europe]。[France]。[Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-299">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1cc81-300">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1cc81-300">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p170">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p170">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-303">从剪贴板中粘贴图片，将其作为所选系列的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-303">Pastes a picture from the Clipboard as the marker on the selected series.</span>
          </span>
          <span data-ttu-id="1cc81-304">此方法可用于列、 条形图、 行或雷达图，并且将<see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" />属性设为<b>xlMarkerStylePicture</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-304">This method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-305">返回或设置在柱形或条形图显示图片的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-305">Returns or sets the way pictures are displayed on a column or bar picture chart.</span>
          </span>
          <span data-ttu-id="1cc81-306">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-306">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-307">返回或设置图表上的每张图片的单位，如果<see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" />属性设置为<b>xlScale</b> （如果没有，则忽略此属性）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-307">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <b>xlScale</b> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="1cc81-308">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-308">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-309">返回或设置图表上的每张图片的单位，如果<see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" />属性设置为<see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" />（如果没有，则忽略此属性）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-309">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="1cc81-310">读/写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-310">Read/Write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc81-311">
            <b>Double</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-311">
              <b>Double</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotColorIndex">
      <MemberSignature Language="C#" Value="public int PlotColorIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotColorIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-312">获取在内部用于将系列格式与图表元素相关联的索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-312">Gets an index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc81-313">在内部用于将系列格式与图表元素相关联的索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-313">An index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-314">只读。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-314">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-315">该属性由 Excel 在内部使用，不应从代码调用它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-315">This property is used internally by Excel and is not intended to be called from your code.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotOrder">
      <MemberSignature Language="C#" Value="public int PlotOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-316">返回或设置指定图表组中选定数据系列的绘制顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-316">Returns or sets the plot order for the selected series within the chart group.</span>
          </span>
          <span data-ttu-id="1cc81-317">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-317">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-p176">只能设置图表组内的绘制顺序（在图表中包含若干图表类型的情况下，不能设置整个图表的绘制顺序）。图表组指具有相同图表类型和子类型的数据系列的集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-p176">You can set plot order only within a chart group (you cannot set the plot order for the entire chart if you have more than one chart type). A chart group is a collection of series with the same chart type.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1cc81-320">更改某个系列的绘制顺序将导致调整必要图图表组中的其他数据系列的绘制顺序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-320">Changing the plot order of one series will cause the plot orders of the other series in the chart group to be adjusted as necessary.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public object Points (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Points([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Points (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="1cc81-321">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-322">数据点的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-322">The name or number of the point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-323">返回一个 object 值，该值代表单点 (<see cref="T:Microsoft.Office.Interop.Excel.Point" />对象) 或所有数据点的集合 (<see cref="T:Microsoft.Office.Interop.Excel.Points" />集合) 的系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-323">Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) in the series.</span>
          </span>
          <span data-ttu-id="1cc81-324">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-324">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-325">选择对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-325">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-326">若要选择一个单元格的范围，请使用<b>Select</b>方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-326">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="1cc81-327">若要使单个单元格活动单元格，请使用<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-327">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-328">
            <b>True</b>如果字体为是阴影字体或对象是否带有阴影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-328">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="1cc81-329">可读写 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-329">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smooth">
      <MemberSignature Language="C#" Value="public bool Smooth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Smooth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Smooth" />
      <MemberSignature Language="VB.NET" Value="Public Property Smooth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Smooth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-p181">如果折线图或散点图有平滑线，则为 <b>True</b>。仅适用于折线图和散点图。可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-p181">
              <b>True</b> if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trendlines">
      <MemberSignature Language="C#" Value="public object Trendlines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trendlines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trendlines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="1cc81-333">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-333">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1cc81-334">趋势线的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-334">The name or number of the trendline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc81-335">返回一个对象，表示单个趋势线 (<see cref="T:Microsoft.Office.Interop.Excel.Trendline" />对象) 或所有趋势线的集合 (<see cref="T:Microsoft.Office.Interop.Excel.Trendlines" />集合) 的数据系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-335">Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) for the series.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-336">返回或设置的图表或系列的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-336">Returns or sets the chart or series type.</span>
          </span>
          <span data-ttu-id="1cc81-337">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-337">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public object Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Values" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Values { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-338">返回或设置系列中的所有值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-338">Returns or sets a collection of all the values in the series.</span>
          </span>
          <span data-ttu-id="1cc81-339">这可以是区域工作表或数组常量的值，但不是两者的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-339">This can be a range on a worksheet or an array of constant values, but not a combination of both.</span>
          </span>
          <span data-ttu-id="1cc81-340">读取/写入 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-340">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-341">对于数据透视图，该属性为只读。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-341">For PivotChart reports, this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValues">
      <MemberSignature Language="C#" Value="public object XValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.XValues" />
      <MemberSignature Language="VB.NET" Value="Public Property XValues As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XValues { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc81-342">返回或设置 x 值的图表系列的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-342">Returns or sets an array of x values for a chart series.</span>
          </span>
          <span data-ttu-id="1cc81-343">可以将<b>XValues</b>属性设置为工作表区域或数组值，但不是能为二者的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-343">The <b>XValues</b> property can be set to a range on a worksheet or to an array of values, but it cannot be a combination of both.</span>
          </span>
          <span data-ttu-id="1cc81-344">读取/写入 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc81-344">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1cc81-345">对数据透视图报表此属性是只读的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1cc81-345">For PivotChart reports this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>