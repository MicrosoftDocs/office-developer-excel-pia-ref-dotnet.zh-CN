<Type Name="Validation" FullName="Microsoft.Office.Interop.Excel.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64490ccfa07c156fb946aaf6fbcab62bd0310122" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009350" /></Metadata><TypeSignature Language="C#" Value="public interface Validation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Validation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Validation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Validation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002442F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18625-101">代表工作表区域的数据有效性规则。</span><span class="sxs-lookup"><span data-stu-id="18625-101">Represents data validation for a worksheet range.</span></span></summary>
    <remarks><para><span data-ttu-id="18625-102">使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> 该属性可返回 <b>Validation</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="18625-102">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> property to return the <b>Validation</b> object.</span></span></para>
      <para><span data-ttu-id="18625-103">使用此方法 <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> 向区域添加数据验证并创建新的 <b>Validation</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="18625-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to add data validation to a range and create a new <b>Validation</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Office.Interop.Excel.XlDVType Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add([in]valuetype Microsoft.Office.Interop.Excel.XlDVType Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Type As XlDVType, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDVType" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="18625-104">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-104">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="18625-105">有效性验证类型。</span><span class="sxs-lookup"><span data-stu-id="18625-105">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="18625-106">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-106">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-107">验证警报样式。</span><span class="sxs-lookup"><span data-stu-id="18625-107">The validation alert style.</span></span> <span data-ttu-id="18625-108">可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> ： <b>xlValidAlertInformation</b>、 <b>xlValidAlertStop</b>或 <b>xlValidAlertWarning</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-108">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>, or <b>xlValidAlertWarning</b>.</span></span></param>
        <param name="Operator"><span data-ttu-id="18625-109">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-110">数据验证运算符。</span><span class="sxs-lookup"><span data-stu-id="18625-110">The data validation operator.</span></span> <span data-ttu-id="18625-111">可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> <b>：xlBetween</b>、 <b>xlEqual</b>、 <b>xlGreater</b>、 <b>xlGreaterEqual</b>、 <b>xlLess</b>、 <b>xlLessEqual</b>、 <b>xlNotBetween</b>或 <b>xlNotEqual</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>, or <b>xlNotEqual</b>.</span></span></param>
        <param name="Formula1"><span data-ttu-id="18625-112">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-113">数据验证公式中的第一部分。</span><span class="sxs-lookup"><span data-stu-id="18625-113">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="18625-114">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-115">数据验证的第二部分是 <paramref name="Operator" /> <b>xlBetween</b> 或 <b>xlNotBetween</b> (，否则，此参数将被忽略) 。</span><span class="sxs-lookup"><span data-stu-id="18625-115">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="18625-116">向指定区域内添加数据有效性验证。</span><span class="sxs-lookup"><span data-stu-id="18625-116">Adds data validation to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="18625-117">Add 方法需要不同的参数，具体取决于验证类型，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="18625-117">The Add method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="18625-118">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-118">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="18625-119">
                <paramref name="Formula1" /> 必需; <paramref name="Formula2" /> 将被忽略。</span><span class="sxs-lookup"><span data-stu-id="18625-119">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="18625-120"><paramref name="Formula1" />必须包含一个表达式，当数据输入有效时，其计算结果为<b>True;</b>如果数据输入无效，则其计算结果为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="18625-120"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-121">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-121">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="18625-122">
                <paramref name="AlertStyle" />， <paramref name="Formula1" /> 或 <paramref name="Formula2" /> 已使用。</span><span class="sxs-lookup"><span data-stu-id="18625-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, or <paramref name="Formula2" /> are used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-123">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-123">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="18625-124">
                <paramref name="Formula1" /> 必需; <paramref name="Formula2" /> 将被忽略。</span><span class="sxs-lookup"><span data-stu-id="18625-124">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="18625-125"><paramref name="Formula1" /> 必须包含以逗号分隔的值列表或对此列表的工作表引用。</span><span class="sxs-lookup"><span data-stu-id="18625-125"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to this list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-126">
                <b>xlValidateWholeNumber</b>、<b>xlValidateDate</b>、<b>xlValidateDecimal</b>、<b>xlValidateTextLength</b> 或 <b>xlValidateTime</b></span><span class="sxs-lookup"><span data-stu-id="18625-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, or <b>xlValidateTime</b></span></span></term>
              <description><span data-ttu-id="18625-127">可指定 <paramref name="Formula1" /> 其中一个 <paramref name="Formula2" /> 或必须指定两者之一，也可以同时指定这两者。</span><span class="sxs-lookup"><span data-stu-id="18625-127">One of either <paramref name="Formula1" /> or <paramref name="Formula2" /> must be specified, or both may be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertStyle">
      <MemberSignature Language="C#" Value="public int AlertStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlertStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlertStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlertStyle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-128">返回有效性检验警告样式。</span><span class="sxs-lookup"><span data-stu-id="18625-128">Returns the validation alert style.</span></span> <span data-ttu-id="18625-129">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-129">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-130">使用 <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> 该方法可设置范围的警报样式。</span><span class="sxs-lookup"><span data-stu-id="18625-130">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to set the alert style for a range.</span></span> <span data-ttu-id="18625-131">如果区域已具有数据验证，请使用 <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> 该方法更改警报样式。</span><span class="sxs-lookup"><span data-stu-id="18625-131">If the range already has data validation, use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change the alert style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-132">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="18625-132">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-133">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="18625-133">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="18625-134">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="18625-134">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="18625-135">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-135">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-136"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="18625-136">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="18625-137">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="18625-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18625-138">删除对象。</span><span class="sxs-lookup"><span data-stu-id="18625-138">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-139">返回或设置数据有效性检验错误消息。</span><span class="sxs-lookup"><span data-stu-id="18625-139">Returns or sets the data validation error message.</span></span> <span data-ttu-id="18625-140">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-140">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public string ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-141">返回或设置数据有效性错误对话框的标题。</span><span class="sxs-lookup"><span data-stu-id="18625-141">Returns or sets the title of the data-validation error dialog box.</span></span> <span data-ttu-id="18625-142">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-142">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-143">返回与条件格式或者数据有效性相关联的值或表达式。</span><span class="sxs-lookup"><span data-stu-id="18625-143">Returns the value or expression associated with the conditional format or data validation.</span></span> <span data-ttu-id="18625-144">可为常量值、字符串值、单元格引用或公式。</span><span class="sxs-lookup"><span data-stu-id="18625-144">Can be a constant value, a string value, a cell reference, or a formula.</span></span> <span data-ttu-id="18625-145">只读 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-145">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-146">返回与条件格式或数据有效性验证第二部分相关联的值或表达式。</span><span class="sxs-lookup"><span data-stu-id="18625-146">Returns the value or expression associated with the second part of a conditional format or data validation.</span></span> <span data-ttu-id="18625-147">只读 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-147">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-148">此属性仅在数据有效性条件格式属性为 <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> <b>xlBetween</b> 或 <b>xlNotBetween 时使用</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-148">This property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>.</span></span> <span data-ttu-id="18625-149">它可以是常量值、字符串值、单元格引用或公式。</span><span class="sxs-lookup"><span data-stu-id="18625-149">It can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreBlank">
      <MemberSignature Language="C#" Value="public bool IgnoreBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreBlank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreBlank As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreBlank { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-150">如果指定区域内的数据有效性检验允许空值，则该值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-150"><b>True</b> if blank values are permitted by the range data validation.</span></span> <span data-ttu-id="18625-151">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-151">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-152">如果 <b>IgnoreBlank</b> 属性 <b>为 True，</b>则单元格数据在单元格为空或由 or 属性引用的单元格为空时 <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> 被视为有效。</span><span class="sxs-lookup"><span data-stu-id="18625-152">If the <b>IgnoreBlank</b> property is <b>True</b>, cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> or <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> property is blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IMEMode">
      <MemberSignature Language="C#" Value="public int IMEMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IMEMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IMEMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IMEMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IMEMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-153">返回或设置日文输入规则的说明。</span><span class="sxs-lookup"><span data-stu-id="18625-153">Returns or sets the description of the Japanese input rules.</span></span> <span data-ttu-id="18625-154">可以是常量 <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="18625-154">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants.</span></span> <span data-ttu-id="18625-155"><b>Integer</b> 型，可读/写。</span><span class="sxs-lookup"><span data-stu-id="18625-155">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-156">只有安装和选择了日文语言支持时，才可设置该属性。</span><span class="sxs-lookup"><span data-stu-id="18625-156">Note that this property can be set only when Japanese language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InCellDropdown">
      <MemberSignature Language="C#" Value="public bool InCellDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InCellDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property InCellDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InCellDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-157">如果数据有效性显示含有有效取值的下拉列表，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-157"><b>True</b> if data validation displays a drop-down list that contains acceptable values.</span></span> <span data-ttu-id="18625-158">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-158">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="18625-159">如果数据有效性检验类型不是 <b>xlValidateList</b>，将忽略该属性。</span><span class="sxs-lookup"><span data-stu-id="18625-159">This property is ignored if the validation type isn’t <b>xlValidateList</b>.</span></span></para>
          <para><span data-ttu-id="18625-160">使用 <paramref name="Minimum" /> 对象的 <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> 或 <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> 方法的参数 <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> 指定包含有效数据的范围。</span><span class="sxs-lookup"><span data-stu-id="18625-160">Use the <paramref name="Minimum" /> argument of the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object to specify the range that contains valid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMessage">
      <MemberSignature Language="C#" Value="public string InputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property InputMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-161">返回或设置数据有效性检验输入信息。</span><span class="sxs-lookup"><span data-stu-id="18625-161">Returns or sets the data validation input message.</span></span> <span data-ttu-id="18625-162">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-162">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTitle">
      <MemberSignature Language="C#" Value="public string InputTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-163">返回或设置数据有效性输入对话框的标题。</span><span class="sxs-lookup"><span data-stu-id="18625-163">Returns or sets the title of the data-validation input dialog box.</span></span> <span data-ttu-id="18625-164">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-164">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (object Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]object Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Optional Type As Object, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="18625-165">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-165">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="18625-166">有效性验证类型。</span><span class="sxs-lookup"><span data-stu-id="18625-166">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="18625-167">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-167">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span> <span data-ttu-id="18625-168">验证警报样式。</span><span class="sxs-lookup"><span data-stu-id="18625-168">The validation alert style.</span></span></param>
        <param name="Operator"><span data-ttu-id="18625-169">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-169">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span></span> <span data-ttu-id="18625-170">数据验证运算符。</span><span class="sxs-lookup"><span data-stu-id="18625-170">The data validation operator.</span></span></param>
        <param name="Formula1"><span data-ttu-id="18625-171">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-172">数据验证公式中的第一部分。</span><span class="sxs-lookup"><span data-stu-id="18625-172">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="18625-173">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="18625-174">数据验证的第二部分是 <paramref name="Operator" /> <b>xlBetween</b> 或 <b>xlNotBetween</b> (，否则，此参数将被忽略) 。</span><span class="sxs-lookup"><span data-stu-id="18625-174">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="18625-175">修改指定区域的数据有效性验证。</span><span class="sxs-lookup"><span data-stu-id="18625-175">Modifies data validation for a range.</span></span></summary>
        <remarks><para><span data-ttu-id="18625-176"><b>Modify</b> 方法所要求的参数依有效性验证的类型而定，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="18625-176">The <b>Modify</b> method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="18625-177">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-177">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="18625-178">
                <paramref name="AlertStyle" />， <paramref name="Formula1" /> <paramref name="Formula2" /> 则不进行使用。</span><span class="sxs-lookup"><span data-stu-id="18625-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, and <paramref name="Formula2" /> are not used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-179">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-179">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="18625-180">
                <paramref name="Formula1" /> 必需; <paramref name="Formula2" /> 将被忽略。</span><span class="sxs-lookup"><span data-stu-id="18625-180">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="18625-181"><paramref name="Formula1" />必须包含一个表达式，当数据输入有效时，其计算结果为<b>True;</b>如果数据输入无效，则其计算结果为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="18625-181"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-182">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="18625-182">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="18625-183">
                <paramref name="Formula1" /> 必需; <paramref name="Formula2" /> 将被忽略。</span><span class="sxs-lookup"><span data-stu-id="18625-183">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="18625-184"><paramref name="Formula1" /> 必须包含以逗号分隔的值列表或列表的工作表引用。</span><span class="sxs-lookup"><span data-stu-id="18625-184"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to the list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="18625-185">
                <b>xlValidateDate</b>、<b>xlValidateDecimal</b>、<b>xlValidateTextLength</b>、 <b>xlValidateTime</b> 或 <b>xlValidateWholeNumber</b></span><span class="sxs-lookup"><span data-stu-id="18625-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b>, or <b>xlValidateWholeNumber</b></span></span></term>
              <description><span data-ttu-id="18625-186">
                <paramref name="Formula1" /> 或 <paramref name="Formula2" /> ，或两者都必须指定。</span><span class="sxs-lookup"><span data-stu-id="18625-186">
                <paramref name="Formula1" /> or <paramref name="Formula2" />, or both, must be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-187">返回条件格式或数据验证的运算符。</span><span class="sxs-lookup"><span data-stu-id="18625-187">Returns the operator for the conditional format or data validation.</span></span> <span data-ttu-id="18625-188">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-188">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-189">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="18625-189">Returns the parent object for the specified object.</span></span> <span data-ttu-id="18625-190">只读。</span><span class="sxs-lookup"><span data-stu-id="18625-190">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public bool ShowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowError" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-191">如果用户输入无效数据时显示数据有效性检查错误消息，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-191"><b>True</b> if the data validation error message will be displayed whenever the user enters invalid data.</span></span> <span data-ttu-id="18625-192">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-192">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInput">
      <MemberSignature Language="C#" Value="public bool ShowInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-193">如果用户在数据有效性检查区域内选定了某一单元格时，显示数据有效性检查输入消息，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-193"><b>True</b> if the data validation input message will be displayed whenever the user selects a cell in the data validation range.</span></span> <span data-ttu-id="18625-194">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-195">返回数据类型的验证值。</span><span class="sxs-lookup"><span data-stu-id="18625-195">Returns data type validation for a range.</span></span> <span data-ttu-id="18625-196">只读 <b>Integer</b> 类型，可以是常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> 。</span><span class="sxs-lookup"><span data-stu-id="18625-196">Read-only <b>Integer</b> that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Value { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18625-197"><b>如此</b> 如果所有验证条件都满足 (，即，如果区域包含有效的数据) 。</span><span class="sxs-lookup"><span data-stu-id="18625-197"><b>True</b> if all the validation criteria are met (that is, if the range contains valid data).</span></span> <span data-ttu-id="18625-198">只读 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="18625-198">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>