<Type Name="Validation" FullName="Microsoft.Office.Interop.Excel.Validation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="083a06403ed93601b1e670cd7b0f4d2f6291f627" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20575801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Validation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Validation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Validation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Validation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002442F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9f4f3-101">代表工作表区域的数据有效性规则。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f4f3-101">Represents data validation for a worksheet range.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="9f4f3-102">
        <para>使用<see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" />属性返回<b>Validation</b>对象。</para>
        <para>使用<see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />添加到区域的数据验证并创建新的<b>Validation</b>对象的方法。</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="9f4f3-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> property to return the <b>Validation</b> object.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to add data validation to a range and create a new <b>Validation</b> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Office.Interop.Excel.XlDVType Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add([in]valuetype Microsoft.Office.Interop.Excel.XlDVType Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Type As XlDVType, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDVType" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9f4f3-103">所需<see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-103">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span>
          </span>
          <span data-ttu-id="9f4f3-104">有效性验证类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-104">The validation type.</span>
          </span>
        </param>
        <param name="AlertStyle">
          <span data-ttu-id="9f4f3-105">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-105">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-106">有效性验证警告样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-106">The validation alert style.</span>
          </span>
          <span data-ttu-id="9f4f3-107">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />常量： <b>xlValidAlertInformation</b>、 <b>xlValidAlertStop</b>或<b>xlValidAlertWarning</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-107">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>, or <b>xlValidAlertWarning</b>.</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="9f4f3-108">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-108">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-109">数据有效性验证运算符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-109">The data validation operator.</span>
          </span>
          <span data-ttu-id="9f4f3-110">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />常量： <b>xlBetween</b>、 <b>xlEqual</b>、 <b>xlGreater</b>、 <b>xlGreaterEqual</b>、 <b>xlLess</b>、 <b>xlLessEqual</b>、 <b>xlNotBetween</b>或<b>xlNotEqual</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-110">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>, or <b>xlNotEqual</b>.</span>
          </span>
        </param>
        <param name="Formula1">
          <span data-ttu-id="9f4f3-111">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-112">数据验证公式中的第一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-112">The first part of the data validation equation.</span>
          </span>
        </param>
        <param name="Formula2">
          <span data-ttu-id="9f4f3-113">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-114">数据有效性的第二部分时<paramref name="Operator" />为<b>xlBetween</b>或<b>xlNotBetween</b> （否则，则忽略此参数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-114">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f4f3-115">向指定区域内添加数据有效性验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-115">Adds data validation to the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9f4f3-116">
            <para>添加方法所要求的参数，具体取决于有效性验证类型下, 表中所示。</para>
            <list type="table">
              <item>
                <term>
                  <b>xlValidateCustom</b>
                </term>
                <description>
                  <paramref name="Formula1" /> ，则需要;<paramref name="Formula2" /> ，则忽略。<paramref name="Formula1" />必须包含表达式无效数据项时计算结果为<b>True</b>时是有效的数据输入和<b>False</b> 。</description>
              </item>
              <item>
                <term>
                  <b>xlInputOnly</b>
                </term>
                <description>
                  <paramref name="AlertStyle" />， <paramref name="Formula1" />，或<paramref name="Formula2" />用于。</description>
              </item>
              <item>
                <term>
                  <b>xlValidateList</b>
                </term>
                <description>
                  <paramref name="Formula1" /> ，则需要;<paramref name="Formula2" /> ，则忽略。<paramref name="Formula1" />必须包含逗号分隔的值列表或对此列表的工作表引用。</description>
              </item>
              <item>
                <term>
                  <b>xlValidateWholeNumber</b>、 <b>xlValidateDate</b>、 <b>xlValidateDecimal</b>、 <b>xlValidateTextLength</b>或<b>xlValidateTime</b></term>
                <description>一个任一<paramref name="Formula1" />或<paramref name="Formula2" />必须指定和 / 或可以指定。</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-116">
              <para>The Add method requires different arguments, depending on the validation type, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlValidateCustom</b>
                  </term>
                  <description>
                    <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored. <paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</description>
                </item>
                <item>
                  <term>
                    <b>xlInputOnly</b>
                  </term>
                  <description>
                    <paramref name="AlertStyle" />, <paramref name="Formula1" />, or <paramref name="Formula2" /> are used.</description>
                </item>
                <item>
                  <term>
                    <b>xlValidateList</b>
                  </term>
                  <description>
                    <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored. <paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to this list.</description>
                </item>
                <item>
                  <term>
                    <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, or <b>xlValidateTime</b></term>
                  <description>One of either <paramref name="Formula1" /> or <paramref name="Formula2" /> must be specified, or both may be specified.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertStyle">
      <MemberSignature Language="C#" Value="public int AlertStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlertStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlertStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlertStyle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-117">返回有效性验证警告样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-117">Returns the validation alert style.</span>
          </span>
          <span data-ttu-id="9f4f3-118">只读<see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-118">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-119">使用<para><see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />方法，以便设置范围的警告样式。如果该区域已有数据有效性，使用<see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />方法，以更改警告样式。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-119">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to set the alert style for a range. If the range already has data validation, use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change the alert style.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-120">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-121">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="9f4f3-122">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="9f4f3-123">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-124">
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-124">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-125">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-125">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p108">返回或设置数据有效性检验错误消息。<b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p108">Returns or sets the data validation error message. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public string ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p109">返回或设置数据有效性错误对话框的标题。<b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p109">Returns or sets the title of the data-validation error dialog box. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p110">返回与条件格式或者数据有效性相关联的值或表达式。可为常量值、字符串值、单元格引用或公式。<b>String</b> 型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p110">Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-133">返回的值或条件格式或数据有效性的第二部分相关联的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-133">Returns the value or expression associated with the second part of a conditional format or data validation.</span>
          </span>
          <span data-ttu-id="9f4f3-134">只读 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-134">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-135">
            <para>此属性是使用仅当数据验证条件格式<see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" />属性为<b>xlBetween</b>或<b>xlNotBetween</b>。它可以是以常量值、 一个 string 值、 单元格引用或公式。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-135">
              <para>This property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>. It can be a constant value, a string value, a cell reference, or a formula.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreBlank">
      <MemberSignature Language="C#" Value="public bool IgnoreBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreBlank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreBlank As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreBlank { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p112">如果指定区域内的数据有效性检验允许空值，则该值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p112">
              <b>True</b> if blank values are permitted by the range data validation. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-138">
            <para>
              <b>IgnoreBlank</b>属性为<b>True</b>，如果单元格数据被视为有效，如果单元格为空，或者通过以下任一方式引用的单元格中<see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" />或<see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" />属性为空。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-138">
              <para>If the <b>IgnoreBlank</b> property is <b>True</b>, cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> or <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> property is blank.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IMEMode">
      <MemberSignature Language="C#" Value="public int IMEMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IMEMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IMEMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IMEMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IMEMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-139">返回或设置日语输入规则的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-139">Returns or sets the description of the Japanese input rules.</span>
          </span>
          <span data-ttu-id="9f4f3-140">可以是一个<see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" />常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-140">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants.</span>
          </span>
          <span data-ttu-id="9f4f3-141">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-141">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-142">
            <para>注意，仅当安装和选择了日文语言支持时，才可以设置此属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-142">
              <para>Note that this property can be set only when Japanese language support has been installed and selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InCellDropdown">
      <MemberSignature Language="C#" Value="public bool InCellDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InCellDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property InCellDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InCellDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p114">如果数据有效性显示含有有效取值的下拉列表，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p114">
              <b>True</b> if data validation displays a drop-down list that contains acceptable values. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9f4f3-145">
            <para>如果验证类型不是<b>xlValidateList</b>，将忽略此属性。</para>
            <para>使用<paramref name="Minimum" />参数<see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />或<see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />方法<see cref="T:Microsoft.Office.Interop.Excel.Validation" />对象以指定包含有效数据的区域。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-145">
              <para>This property is ignored if the validation type isn’t <b>xlValidateList</b>.</para>
              <para>Use the <paramref name="Minimum" /> argument of the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object to specify the range that contains valid data.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMessage">
      <MemberSignature Language="C#" Value="public string InputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property InputMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p115">返回或设置数据有效性检验输入信息。<b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p115">Returns or sets the data validation input message. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTitle">
      <MemberSignature Language="C#" Value="public string InputTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p116">返回或设置数据有效性输入对话框的标题。<b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p116">Returns or sets the title of the data-validation input dialog box. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (object Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]object Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Optional Type As Object, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9f4f3-150">所需<see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-150">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span>
          </span>
          <span data-ttu-id="9f4f3-151">有效性验证类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-151">The validation type.</span>
          </span>
        </param>
        <param name="AlertStyle">
          <span data-ttu-id="9f4f3-152">可选<see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-152">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span>
          </span>
          <span data-ttu-id="9f4f3-153">有效性验证警告样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-153">The validation alert style.</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="9f4f3-154">可选<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-154">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span>
          </span>
          <span data-ttu-id="9f4f3-155">数据有效性验证运算符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-155">The data validation operator.</span>
          </span>
        </param>
        <param name="Formula1">
          <span data-ttu-id="9f4f3-156">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-156">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-157">数据验证公式中的第一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-157">The first part of the data validation equation.</span>
          </span>
        </param>
        <param name="Formula2">
          <span data-ttu-id="9f4f3-158">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-158">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9f4f3-159">数据有效性的第二部分时<paramref name="Operator" />为<b>xlBetween</b>或<b>xlNotBetween</b> （否则，则忽略此参数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-159">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f4f3-160">修改指定区域的数据有效性验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-160">Modifies data validation for a range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9f4f3-161">
            <para>
              <b>Modify</b>方法所要求的参数，具体取决于有效性验证类型下, 表中所示。</para>
            <list type="table">
              <item>
                <term>
                  <b>xlInputOnly</b>
                </term>
                <description>
                  <paramref name="AlertStyle" />， <paramref name="Formula1" />，和<paramref name="Formula2" />未使用。</description>
              </item>
              <item>
                <term>
                  <b>xlValidateCustom</b>
                </term>
                <description>
                  <paramref name="Formula1" /> ，则需要;<paramref name="Formula2" /> ，则忽略。<paramref name="Formula1" />必须包含表达式无效数据项时计算结果为<b>True</b>时是有效的数据输入和<b>False</b> 。</description>
              </item>
              <item>
                <term>
                  <b>xlValidateList</b>
                </term>
                <description>
                  <paramref name="Formula1" /> ，则需要;<paramref name="Formula2" /> ，则忽略。<paramref name="Formula1" />必须包含逗号分隔的值列表的工作表引用。</description>
              </item>
              <item>
                <term>
                  <b>xlValidateDate</b>、 <b>xlValidateDecimal</b>、 <b>xlValidateTextLength</b>、 <b>xlValidateTime</b>或<b>xlValidateWholeNumber</b></term>
                <description>
                  <paramref name="Formula1" />或<paramref name="Formula2" />，必须指定和 / 或。</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-161">
              <para>The <b>Modify</b> method requires different arguments, depending on the validation type, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlInputOnly</b>
                  </term>
                  <description>
                    <paramref name="AlertStyle" />, <paramref name="Formula1" />, and <paramref name="Formula2" /> are not used.</description>
                </item>
                <item>
                  <term>
                    <b>xlValidateCustom</b>
                  </term>
                  <description>
                    <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored. <paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</description>
                </item>
                <item>
                  <term>
                    <b>xlValidateList</b>
                  </term>
                  <description>
                    <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored. <paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to the list.</description>
                </item>
                <item>
                  <term>
                    <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b>, or <b>xlValidateWholeNumber</b></term>
                  <description>
                    <paramref name="Formula1" /> or <paramref name="Formula2" />, or both, must be specified.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-162">返回条件格式或数据有效性的运算符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-162">Returns the operator for the conditional format or data validation.</span>
          </span>
          <span data-ttu-id="9f4f3-163">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-163">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p123">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p123">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public bool ShowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowError" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p124">如果用户输入无效数据时显示数据有效性检查错误消息，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p124">
              <b>True</b> if the data validation error message will be displayed whenever the user enters invalid data. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInput">
      <MemberSignature Language="C#" Value="public bool ShowInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-p125">如果用户在数据有效性检查区域内选定了某一单元格时，显示数据有效性检查输入消息，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-p125">
              <b>True</b> if the data validation input message will be displayed whenever the user selects a cell in the data validation range. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-170">返回范围内的数据类型有效性验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-170">Returns data type validation for a range.</span>
          </span>
          <span data-ttu-id="9f4f3-171">可以是常量之一只读<b>整数</b><see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-171">Read-only <b>Integer</b> that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Value { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f4f3-172">
            <b>True</b>如果满足所有的有效性验证条件 （即，如果该区域包含有效数据）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-172">
              <b>True</b> if all the validation criteria are met (that is, if the range contains valid data).</span>
          </span>
          <span data-ttu-id="9f4f3-173">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f4f3-173">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>