<Type Name="Window" FullName="Microsoft.Office.Interop.Excel.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="628d319ce41e267cd4a082a94f976467ed8bebe1" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009259" /></Metadata><TypeSignature Language="C#" Value="public interface Window" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Window" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Window" />
  <TypeSignature Language="VB.NET" Value="Public Interface Window" />
  <TypeSignature Language="C++ CLI" Value="public interface class Window" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020893-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8e8f-101">代表窗口。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-101">Represents a window.</span></span> <span data-ttu-id="b8e8f-102">许多工作表特征（如滚动条和标尺）实际上是窗口的属性。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-102">Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</span></span></summary>
    <remarks><para><span data-ttu-id="b8e8f-103"><b>Window</b>对象是集合的一 <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 个成员。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-103">The <b>Window</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span></span> <span data-ttu-id="b8e8f-104">对象的属性返回的<b>Windows</b>集合包含应用程序的所有窗口，而该对象的属性返回的 Windows 集合仅包含指定工作簿 <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> <see cref="T:Microsoft.Office.Interop.Excel.Application" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 中的窗口。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-104">The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</span></span></para>
      <para><span data-ttu-id="b8e8f-105">使用<b>Windows</b> () 返回单个 Window 对象，其中窗口名称或索引 <paramref name="index" /> <paramref name="index" /> 号<b></b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-105">Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</span></span></para>
      <para><span data-ttu-id="b8e8f-106">注意，活动窗口总是 Windows(1)。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-106">Note that the active window is always Windows(1).</span></span></para>
      <para><span data-ttu-id="b8e8f-107">窗口题主是窗口未处于最大化时窗口最上方标题栏中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-107">The window caption is the text shown in the title bar at the top of the window when the window isn’t maximized.</span></span> <span data-ttu-id="b8e8f-108">该题注还会显示在“窗口”菜单最下方的打开文件列表中。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-108">The caption is also shown in the list of open files on the bottom of the Windows menu.</span></span> <span data-ttu-id="b8e8f-109">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> 该属性可设置或返回窗口标题。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-109">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> property to set or return the window caption.</span></span> <span data-ttu-id="b8e8f-110">更改窗口题注不会更改工作簿的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-110">Changing the window caption doesn’t change the name of the workbook.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-111">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-111">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e8f-112">将窗口提到 z-次序的最前面。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-112">Brings the window to the front of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-113"><b>Activate</b>方法不会运行任何Auto_Activate或Auto_Deactivate附加到工作簿的宏。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-113">The <b>Activate</b> method won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook.</span></span> <span data-ttu-id="b8e8f-114">使用 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> 该方法运行这些宏。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-114">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateNext">
      <MemberSignature Language="C#" Value="public object ActivateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivateNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivateNext" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivateNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e8f-115">激活指定的窗口，然后将它发送到窗口 z-order 的后面。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-115">Activates the specified window, and then sends it to the back of the window z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePrevious">
      <MemberSignature Language="C#" Value="public object ActivatePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivatePrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivatePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivatePrevious () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivatePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e8f-116">激活指定窗口，然后激活窗口 z-次序末尾的窗口。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-116">Activates the specified window and then activates the window at the back of the window z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-117">返回一个对象，该对象代表活动窗口中的活动单元格 (位于活动窗口顶部或) <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 指定窗口中。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-117">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="b8e8f-118">如果窗口中未显示工作表，则此属性将失败。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-118">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-119">如果不指定对象限定符，则此属性将返回活动窗口中的活动单元格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-119">If you don't specify an object qualifier, this property returns the active cell in the active window.</span></span></para>
          <para><span data-ttu-id="b8e8f-p106">请仔细区分活动单元格和选定区域。活动单元格为选定区域内部的一个单元格。而选定区域可以包含多个单元格，但只有一个单元格为活动单元格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-p106">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-123">返回一 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 个对象，该对象代表活动 (嵌入图表或图表工作表) 。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-123">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="b8e8f-124">嵌入式图表在被选中或激活时被认为是活动的。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-124">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="b8e8f-125">当没有图表处于活动状态时，此属性返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-125">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-126">如果不指定对象识别符，此属性返回活动工作簿中的活动图表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-126">If you don't specify an object qualifier, this property returns the active chart in the active workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePane">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Pane ActivePane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Pane ActivePane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActivePane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivePane As Pane" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Pane ^ ActivePane { Microsoft::Office::Interop::Excel::Pane ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Pane</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-127">返回 <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> 一个对象，该对象代表窗口中的活动窗格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object that represents the active pane in the window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-128">此属性仅用于工作表和宏表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-128">This property can be used only on worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="b8e8f-129">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> 该属性获取活动窗格的索引。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-129">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property to obtain the index of the active pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-p108">返回一个对象，它代表活动工作簿中或指定的窗口或工作簿中的活动工作表（最上面的工作表）。如果没有活动的工作表，则返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value><span data-ttu-id="b8e8f-132"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-132"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="b8e8f-133">如果不指定对象识别符，则此属性返回活动工作簿中的活动工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-133">If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</span></span></para>
          <para><span data-ttu-id="b8e8f-134">如果某个工作簿出现在若干个窗口中，那么该工作簿的 <b>ActiveSheet</b> 属性在不同窗口中可能不同。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-134">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheetView">
      <MemberSignature Language="C#" Value="public object ActiveSheetView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheetView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheetView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheetView As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheetView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-135">返回一个对象，该对象代表指定窗口中活动工作表的视图。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-135">Returns an object that represents the view of the active sheet in the specified window.</span></span> <span data-ttu-id="b8e8f-136">只读。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-136">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-137">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-137">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterDateGrouping">
      <MemberSignature Language="C#" Value="public bool AutoFilterDateGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterDateGrouping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.AutoFilterDateGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterDateGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterDateGrouping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-138">如果用于日期分组的自动筛选器当前显示在指定的窗口中，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-138"><b>True</b> if the auto filter for date grouping is currently displayed in the specified window.</span></span> <span data-ttu-id="b8e8f-139">读/写。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-139">Read/write.</span></span></summary>
        <value><span data-ttu-id="b8e8f-140"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-140"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public object Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caption { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-141">显示在文档窗口的标题栏中的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-141">The name that appears in the title bar of the document window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><span data-ttu-id="b8e8f-142">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-142">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-143">如果工作簿无更改，则忽略该参数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-143">If there are no changes to the workbook, this argument is ignored.</span></span> <span data-ttu-id="b8e8f-144">如果工作簿存在更改且其在其他打开的窗口中显示，则忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-144">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span></span> <span data-ttu-id="b8e8f-145">如果工作簿发生更改，但该工作簿未显示在任何其他打开的窗口中，则此参数指定是否应该保存更改，如下表所示。ValueAction<b>True</b>保存对工作簿所做的更改。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-145">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span></span> <span data-ttu-id="b8e8f-146">如果还没有与工作簿关联的文件名，则 <paramref name="FileName" /> 使用。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-146">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span></span> <span data-ttu-id="b8e8f-147">如果 <paramref name="FileName" /> 省略，则要求用户提供文件名。<b>False</b>不保存对此文件的更改。OmittedDisplays a dialog box asking the user whether or not to save changes.</span><span class="sxs-lookup"><span data-stu-id="b8e8f-147">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span></span></param>
        <param name="Filename"><span data-ttu-id="b8e8f-148">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-149">以此文件名保存所做的更改。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-149">Save changes under this file name.</span></span></param>
        <param name="RouteWorkbook"><span data-ttu-id="b8e8f-150">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-151">如果无需将工作簿路由到下一收件人（在其没有传送名单或已路由的情况下），忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-151">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span></span> <span data-ttu-id="b8e8f-152">否则，Microsoft Excel 将路由工作簿，如下表所示。ValueMeaning<b>True</b>将工作簿发送给下一个收件人。<b>False</b>不发送工作簿。OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span><span class="sxs-lookup"><span data-stu-id="b8e8f-152">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span></span></param>
        <summary><span data-ttu-id="b8e8f-153">关闭对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-153">Closes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-154"><b>Close</b>方法不运行工作簿Auto_Close宏。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-154">The <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="b8e8f-155">使用 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> 该方法运行自动关闭宏。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-155">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-156">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-156">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-157">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-157">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="b8e8f-158"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-158">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b8e8f-159">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-159">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulas">
      <MemberSignature Language="C#" Value="public bool DisplayFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-160">如果窗口正显示公式，则为 <b>True</b>；如果窗口正显示值，则为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-160"><b>True</b> if the window is displaying formulas; <b>False</b> if the window is displaying values.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-161">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-161">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayGridlines">
      <MemberSignature Language="C#" Value="public bool DisplayGridlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayGridlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayGridlines" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayGridlines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayGridlines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-162">如果显示网格线，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-162"><b>True</b> if gridlines are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-163">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-163">This property applies only to worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="b8e8f-164">此属性仅影响显示的网格线。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-164">This property affects only displayed gridlines.</span></span> <span data-ttu-id="b8e8f-165">使用 <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> 该属性可控制网格线的打印。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-165">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> property to control the printing of gridlines.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHeadings">
      <MemberSignature Language="C#" Value="public bool DisplayHeadings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHeadings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHeadings" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHeadings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHeadings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-166"><b>如此</b>如果同时显示行标题和列标题;如果没有显示标题，则其为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-166"><b>True</b> if both row and column headings are displayed; <b>False</b> if there are no headings displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-167">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-167">This property applies only to worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="b8e8f-168">此属性仅影响显示的标题。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-168">This property affects only displayed headings.</span></span> <span data-ttu-id="b8e8f-169">使用 <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> 该属性可控制标题的打印。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-169">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> property to control the printing of headings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHorizontalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayHorizontalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHorizontalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHorizontalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-170">如果显示水平滚动条，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-170"><b>True</b> if the horizontal scroll bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayOutline">
      <MemberSignature Language="C#" Value="public bool DisplayOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayOutline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayOutline" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayOutline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayOutline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-171">如果显示分级显示符号，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-171"><b>True</b> if outline symbols are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-172">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-172">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-173">如果指定的窗口或工作表是从右到左显示（而非从左到右），则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-173"><b>True</b> if the specified window is displayed from right to left instead of from left to right.</span></span> <span data-ttu-id="b8e8f-174">如果对象从左到右显示，则为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-174"><b>False</b> if the object is displayed from left to right.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRuler">
      <MemberSignature Language="C#" Value="public bool DisplayRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRuler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRuler" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRuler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRuler { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-175">如果在指定窗口中显示标尺，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-175"><b>True</b> if a ruler is displayed for the specified window.</span></span> <span data-ttu-id="b8e8f-176">读/写。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-176">Read/write.</span></span></summary>
        <value><span data-ttu-id="b8e8f-177"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-177"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayVerticalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayVerticalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayVerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayVerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayVerticalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayVerticalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-178">如果显示垂直滚动条，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-178"><b>True</b> if the vertical scroll bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWhitespace">
      <MemberSignature Language="C#" Value="public bool DisplayWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWhitespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-179">如果显示空白，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-179"><b>True</b> if whitespace is displayed.</span></span> <span data-ttu-id="b8e8f-180">读/写。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-180">Read/write.</span></span></summary>
        <value><span data-ttu-id="b8e8f-181"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-181"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWorkbookTabs">
      <MemberSignature Language="C#" Value="public bool DisplayWorkbookTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWorkbookTabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWorkbookTabs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWorkbookTabs { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-182">如果显示工作簿标签，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-182"><b>True</b> if the workbook tabs are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayZeros">
      <MemberSignature Language="C#" Value="public bool DisplayZeros { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayZeros" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayZeros" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayZeros As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayZeros { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-183">如果显示零值，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-183"><b>True</b> if zero values are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-184">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-184">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-185">如果能够调整窗口大小，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-185"><b>True</b> if the window can be resized.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezePanes">
      <MemberSignature Language="C#" Value="public bool FreezePanes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FreezePanes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" />
      <MemberSignature Language="VB.NET" Value="Public Property FreezePanes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FreezePanes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-186">如果拆分窗格被冻结，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-186"><b>True</b> if split panes are frozen.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-187"><b>FreezePanes</b>可能为 True 和<b></b> <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> <b>False，</b>反之亦然。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-187">It’s possible for <b>FreezePanes </b>to be <b>True</b> and <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> to be <b>False</b>, or vice versa.</span></span></para>
          <para><span data-ttu-id="b8e8f-188">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-188">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColor">
      <MemberSignature Language="C#" Value="public int GridlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GridlineColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GridlineColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-189">以 RGB 值返回或设置网格线颜色。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-189">Returns or sets the gridline color as an RGB value.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex GridlineColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-190">返回或设置网格线颜色作为当前调色板中的索引或作为 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> 常量。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-190">Returns or sets the gridline color as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-191">将该属性设置为 <b>xlColorIndexAutomatic</b> 可指定颜色为自动。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-191">Set this property to <b>xlColorIndexAutomatic</b> to specify the automatic color.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-192">窗口的高度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-192">The height of the window in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-193">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> 该属性可确定窗口的最大大小。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-193">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> property to determine the maximum size for the window.</span></span> <span data-ttu-id="b8e8f-194">如果在窗口处于最大化或最小化时，不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-194">You cannot set this property if the window is maximized or minimized.</span></span> <span data-ttu-id="b8e8f-195">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> 该属性可确定窗口状态。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-196">返回指定窗口的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-196">Returns the window handle of the specified window.</span></span></summary>
        <value><span data-ttu-id="b8e8f-197">整数 (以 C# 表示) </span><span class="sxs-lookup"><span data-stu-id="b8e8f-197">Integer (int in C#)</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-198">返回对象在其同类对象所组成的集合内的编号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-198">Returns the index number of the object within the collection of similar objects.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeScroll">
      <MemberSignature Language="C#" Value="public object LargeScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LargeScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LargeScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down"><span data-ttu-id="b8e8f-199">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-199">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-200">向下滚动内容的页数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-200">The number of pages to scroll the contents down.</span></span></param>
        <param name="Up"><span data-ttu-id="b8e8f-201">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-201">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-202">向上滚动内容的页数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-202">The number of pages to scroll the contents up.</span></span></param>
        <param name="ToRight"><span data-ttu-id="b8e8f-203">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-204">向右滚动内容的页数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-204">The number of pages to scroll the contents to the right.</span></span></param>
        <param name="ToLeft"><span data-ttu-id="b8e8f-205">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-205">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-206">向左滚动内容的页数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-206">The number of pages to scroll the contents to the left.</span></span></param>
        <summary><span data-ttu-id="b8e8f-207">按页滚动窗口内容。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-207">Scrolls the contents of the window by pages.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-208">如果同时指定了这两个参数，窗口的内容将滚动两个参数 <paramref name="Down" /> <paramref name="Up" /> 的差。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-208">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="b8e8f-209">例如，如果 <paramref name="Down" /> 为 3 且 <paramref name="Up" /> 为 6，则内容向上滚动三页。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-209">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three pages.</span></span></para>
          <para><span data-ttu-id="b8e8f-210">如果同时指定了这两个参数，窗口的内容将滚动两个参数 <paramref name="ToLeft" /> <paramref name="ToRight" /> 的差。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-210">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="b8e8f-211">例如，如果 <paramref name="ToLeft" /> 为 3 且 <paramref name="ToRight" /> 为 6，内容将滚动到右侧三页。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-211">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three pages.</span></span></para>
          <para><span data-ttu-id="b8e8f-212">以上任何参数均可为负数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-212">Any of the arguments can be a negative number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-213">从客户区的左边缘到窗口左边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-213">The distance in points from the left edge of the client area to the left edge of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e8f-214">新建一个窗口或者创建指定窗口的副本。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-214">Creates a new window or a copy of the specified window.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-215">返回或设置每当激活一个窗口时要运行的过程的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-215">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-216">当其他过程切换到窗口或通过 DDE 通道接收切换到窗口的命令时，不运行此属性指定的过程。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-216">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="b8e8f-217">相反，此过程会响应用户的操作，例如，使用鼠标单击窗口，单击"编辑"菜单上的"转到"，等等。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-217">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="b8e8f-218">如果一个工作表或宏表具有为它定义的 Auto_Activate 或 Auto_Deactivate 宏，这些宏将会在 <b>OnWindow</b> 属性指定的过程之后运行。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-218">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Panes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Panes Panes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Panes Panes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Panes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Panes As Panes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Panes ^ Panes { Microsoft::Office::Interop::Excel::Panes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Panes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-219">返回 <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> 一个集合，该集合代表指定窗口中的所有窗格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-219">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> collection that represents all the panes in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-220">只有当窗口的属性可以设置为 True 时，此属性才可用于 <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> <b>窗口</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-220">This property is available for a window only if the window’s <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> property can be set to <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-221">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-221">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsX">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsX (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsX([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsX (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsX(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points"><span data-ttu-id="b8e8f-222">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-222">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-223">从文档窗口的左侧开始沿其顶部水平排列的点数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-223">The number of points horizontally along the top of the document window, starting from the left.</span></span></param>
        <summary><span data-ttu-id="b8e8f-224">将横向度量值由以点（文档坐标）为单位转换为以屏幕像素（屏幕坐标）为单位。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-224">Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsY">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsY (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsY([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsY (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsY(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points"><span data-ttu-id="b8e8f-225">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-225">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-226">从文档窗口的顶部开始沿其左边缘垂直排列的点数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-226">The number of points vertically along the left edge of the document window, starting from the top.</span></span></param>
        <summary><span data-ttu-id="b8e8f-227">将纵向度量值由以点（文档坐标）为单位转换为以屏幕像素（屏幕坐标）为单位。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-227">Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="b8e8f-228">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-228">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-229">打印的开始页号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-229">The number of the page at which to start printing.</span></span> <span data-ttu-id="b8e8f-230">如果省略此参数，则从起始位置开始打印。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-230">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="b8e8f-231">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-231">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-232">打印的终止页号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-232">The number of the last page to print.</span></span> <span data-ttu-id="b8e8f-233">如果省略此参数，则打印至最后一页。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-233">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="b8e8f-234">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-234">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-235">打印份数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-235">The number of copies to print.</span></span> <span data-ttu-id="b8e8f-236">如果省略此参数，则只打印一份。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-236">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="b8e8f-237">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-237">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-238">如果为 <b>True</b>，Microsoft Excel 将在打印对象之前调用打印预览。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-238"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="b8e8f-239">如果为 <b>False</b>（或省略该参数），则立即打印对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-239"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="b8e8f-240">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-240">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-241">设置活动打印机的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-241">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="b8e8f-242">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-242">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-243">如果为 <b>True</b>，则打印到文件。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-243"><b>True</b> to print to a file.</span></span> <span data-ttu-id="b8e8f-244">如果 <paramref name="PrToFileName" /> 未指定，Microsoft Excel 将提示用户输入输出文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-244">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="b8e8f-245">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-245">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-246">如果为 <b>True</b>，则逐份打印多个副本。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-246"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="b8e8f-247">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-247">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-248">如果 <paramref name="PrintToFile" /> 设置为 <b>True，</b>则此参数指定要打印到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-248">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="b8e8f-249">打印对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-249">Prints the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-250">"页面"在工作表或工作簿的说明中引用打印页，而不是 <paramref name="From" /> <paramref name="To" /> 整个页面。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-250">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="b8e8f-251">在预览期间启用更改。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-251">Enables changes during preview.</span></span></param>
        <summary><span data-ttu-id="b8e8f-252">按对象打印后的外观效果显示对象的预览。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-252">Shows a preview of the object as it would look when printed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public object RangeFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RangeFromPoint([in]int32 x, [in]int32 y) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (x As Integer, y As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RangeFromPoint(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b8e8f-253">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-253">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-254">表示从顶部开始到屏幕左边缘的水平距离的值（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-254">The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</span></span></param>
        <param name="y"><span data-ttu-id="b8e8f-255">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-255">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-256">表示从左侧开始到屏幕顶部的垂直距离的值（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-256">The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</span></span></param>
        <summary><span data-ttu-id="b8e8f-257">返回 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 位于 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 指定的屏幕坐标对的 or 对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-257">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is positioned at the specified pair of screen coordinates.</span></span> <span data-ttu-id="b8e8f-258">如果指定坐标位置上没有任何形状，此方法将返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-258">If there isn’t a shape located at the specified coordinates, this method returns <b>Nothing</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RangeSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RangeSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.RangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RangeSelection As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RangeSelection { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-259">返回一个对象，该对象代表指定窗口中工作表上的选定单元格，即使图形对象在工作表上处于活动状态或 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 已选中。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the selected cells on the worksheet in the specified window even if a graphic object is active or selected on the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-260">在工作表上选择图形对象时，该属性返回图形对象而不是 <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> <b>Range</b> 对象 <b>;RangeSelection</b> 属性返回在选择图形对象之前选定的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-260">When a graphic object is selected on a worksheet, the <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> property returns the graphic object instead of a <b>Range</b> object; the <b>RangeSelection</b> property returns the range of cells that was selected before the graphic object was selected.</span></span></para>
          <para><span data-ttu-id="b8e8f-261">当工作表中选定的是一个单元格区域时（不是一个图形对象），该属性和 <b>Selection</b> 属性将返回相同的值。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-261">This property and the <b>Selection</b> property return identical values when a range (not a graphic object) is selected on the worksheet.</span></span></para>
          <para><span data-ttu-id="b8e8f-262">如果指定窗口中的活动表不是一个工作表，则该属性无效。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-262">If the active sheet in the specified window isn’t a worksheet, this property fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollColumn">
      <MemberSignature Language="C#" Value="public int ScrollColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-263">返回或设置指定窗格或窗口最左边的列号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-263">Returns or sets the number of the leftmost column in the pane or window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-264">如果窗口被拆分，对象的 <b>ScrollColumn</b> 属性将引用 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> 左上角的窗格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-264">If the window is split, the <b>ScrollColumn</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span></span> <span data-ttu-id="b8e8f-265">如果某些窗格处于冻结状态，则 <b>Window</b> 对象的 <b>ScrollColumn</b> 属性将不包括冻结的区域。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-265">If the panes are frozen, the <b>ScrollColumn</b> property of the <b>Window</b> object excludes the frozen areas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (int Left, int Top, int Width, int Height, object Start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView([in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height, [in]object Start) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (Left As Integer, Top As Integer, Width As Integer, Height As Integer, Optional Start As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
        <Parameter Name="Start" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="b8e8f-266">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-266">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-267">矩形距离文档窗口或窗格左边的水平位置（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-267">The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</span></span></param>
        <param name="Top"><span data-ttu-id="b8e8f-268">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-268">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-269">矩形距离文档窗口或窗格上边的垂直位置（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-269">The vertical position of the rectangle (in points) from the top of the document window or pane.</span></span></param>
        <param name="Width"><span data-ttu-id="b8e8f-270">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-270">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-271">矩形的宽度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-271">The width of the rectangle, in points.</span></span></param>
        <param name="Height"><span data-ttu-id="b8e8f-272">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-272">Required <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-273">矩形的高度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-273">The height of the rectangle, in points.</span></span></param>
        <param name="Start"><span data-ttu-id="b8e8f-274">可选属性，类型为 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-274">Optional <b>Integer</b>.</span></span> <span data-ttu-id="b8e8f-275">如果为 <b>True</b>，则使矩形的左上角位于文档窗口或窗格的左上角。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-275"><b>True</b> to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane.</span></span> <span data-ttu-id="b8e8f-276">如果为 <b>False</b>，则使矩形的右下角位于文档窗口或窗格的右下角。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-276"><b>False</b> to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane.</span></span> <span data-ttu-id="b8e8f-277">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-277">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="b8e8f-278">滚动文档窗口，以便指定矩形区域的内容显示在文档窗口或窗格的左上角或右下角。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-278">Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</span></span></summary>
        <remarks><para><span data-ttu-id="b8e8f-279">当矩形大于文档窗口或窗格时，该参数对于确定屏幕显示 <paramref name="Start" /> 方向非常有用。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-279">The <paramref name="Start" /> argument is useful for orienting the screen display when the rectangle is larger than the document window or pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRow">
      <MemberSignature Language="C#" Value="public int ScrollRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-280">返回或设置指定窗格或窗口最上面显示的行号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-280">Returns or sets the number of the row that appears at the top of the pane or window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-281">如果窗口被拆分，对象的 <b>ScrollRow</b> 属性 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> 将引用左上角的窗格。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-281">If the window is split, the <b>ScrollRow</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span></span> <span data-ttu-id="b8e8f-282">如果某些窗格处于冻结状态，则 <b>Window</b> 对象的 <b>ScrollRow</b> 属性将不包括冻结的区域。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-282">If the panes are frozen, the <b>ScrollRow</b> property of the <b>Window</b> object excludes the frozen areas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWorkbookTabs">
      <MemberSignature Language="C#" Value="public object ScrollWorkbookTabs (object Sheets, object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollWorkbookTabs([in]object Sheets, [in]object Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollWorkbookTabs (Optional Sheets As Object, Optional Position As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sheets" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sheets"><span data-ttu-id="b8e8f-283">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-283">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-284">要滚动的工作表的数目。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-284">The number of sheets to scroll by.</span></span> <span data-ttu-id="b8e8f-285">使用正数向前滚动，使用负数向后滚动， (0) 则完全不滚动。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-285">Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all.</span></span> <span data-ttu-id="b8e8f-286">必须指定 <paramref name="Sheets" /> 是否未指定 <paramref name="Position" /> 。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-286">You must specify <paramref name="Sheets" /> if you don't specify <paramref name="Position" />.</span></span></param>
        <param name="Position"><span data-ttu-id="b8e8f-287">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-287">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-288">使用 <b>xlFirst</b> 可滚动到第一张工作表，使用 <b>xlLast</b> 可滚动到最后一张工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-288">Use <b>xlFirst</b> to scroll to the first sheet, or use <b>xlLast</b> to scroll to the last sheet.</span></span> <span data-ttu-id="b8e8f-289">必须指定 <paramref name="Position" /> 是否未指定 <paramref name="Sheets" /> 。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-289">You must specify <paramref name="Position" /> if you don't specify <paramref name="Sheets" />.</span></span></param>
        <summary><span data-ttu-id="b8e8f-290">滚动工作簿窗口下方的工作表标签。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-290">Scrolls through the workbook tabs at the bottom of the window.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-291"><b>ScrollWorkbookTabs</b>方法不影响工作簿中的活动工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-291">The <b>ScrollWorkbookTabs</b> method doesn't affect the active sheet in the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets SelectedSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets SelectedSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SelectedSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ SelectedSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-292">返回 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 一个集合，该集合代表指定窗口中的所有选定工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-292">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the selected sheets in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-293">返回指定窗口中的选定对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-293">Returns the selected object in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-294">返回对象类型取决于当前所选内容 (例如，如果选择了单元格，则此属性返回一 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 个对象) 。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-294">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="b8e8f-295">如果未选择任何内容，<b>Selection</b> 属性将返回 <b>Nothing</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-295">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para><span data-ttu-id="b8e8f-296">在无对象限定符下使用此属性等效于 <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> 使用对象 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-296">Using this property with no object qualifier is equivalent to using the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SheetViews SheetViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SheetViews SheetViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SheetViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SheetViews As SheetViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SheetViews ^ SheetViews { Microsoft::Office::Interop::Excel::SheetViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SheetViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-297">返回 <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> 指定窗口的对象。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-297">Returns the <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> object for the specified window.</span></span> <span data-ttu-id="b8e8f-298">只读。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-298">Read-only.</span></span></summary>
        <value><span data-ttu-id="b8e8f-299"><b>SheetViews</b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-299"><b>SheetViews</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallScroll">
      <MemberSignature Language="C#" Value="public object SmallScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SmallScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SmallScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down"><span data-ttu-id="b8e8f-300">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-300">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-301">将内容向下滚动的行数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-301">The number of rows to scroll the contents down.</span></span></param>
        <param name="Up"><span data-ttu-id="b8e8f-302">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-302">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-303">将内容向上滚动的行数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-303">The number of rows to scroll the contents up.</span></span></param>
        <param name="ToRight"><span data-ttu-id="b8e8f-304">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-304">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-305">将内容向右滚动的列数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-305">The number of columns to scroll the contents to the right.</span></span></param>
        <param name="ToLeft"><span data-ttu-id="b8e8f-306">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-306">Optional <b>Object</b>.</span></span> <span data-ttu-id="b8e8f-307">将内容向左滚动的列数。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-307">The number of columns to scroll the contents to the left.</span></span></param>
        <summary><span data-ttu-id="b8e8f-308">按行或按列滚动窗口内容。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-308">Scrolls the contents of the window by rows or columns.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b8e8f-309">如果同时指定了这两个参数，窗口的内容将滚动两个参数 <paramref name="Down" /> <paramref name="Up" /> 的差。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-309">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="b8e8f-310">例如，如果 <paramref name="Down" /> 为 3 且 <paramref name="Up" /> 为 6，则内容向上滚动三行。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-310">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three rows.</span></span></para>
          <para><span data-ttu-id="b8e8f-311">如果同时指定了这两个参数，窗口的内容将滚动两个参数 <paramref name="ToLeft" /> <paramref name="ToRight" /> 的差。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-311">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="b8e8f-312">例如，如果 <paramref name="ToLeft" /> 为 3 且为 6，则内容滚动到右侧 <paramref name="ToRight" /> 三列。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-312">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three columns.</span></span></para>
          <para><span data-ttu-id="b8e8f-313">这四个参数都可以取负值。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-313">Any of these arguments can be a negative number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public bool Split { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Split" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Split" />
      <MemberSignature Language="VB.NET" Value="Public Property Split As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Split { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-314">如果指定窗口被拆分，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-314"><b>True</b> if the window is split.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-315">True 和 Split 可能为 <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> <b>False，</b>反之亦然<b></b>。 <b></b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-315">It’s possible for <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> to be <b>True</b> and <b>Split</b> to be <b>False</b>, or vice versa.</span></span></para>
          <para><span data-ttu-id="b8e8f-316">该属性仅应用于工作表和宏工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-316">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitColumn">
      <MemberSignature Language="C#" Value="public int SplitColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-317">返回或设置将指定窗口拆分成窗格处的列号（拆分线左侧的列数）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-317">Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitHorizontal">
      <MemberSignature Language="C#" Value="public double SplitHorizontal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitHorizontal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitHorizontal" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitHorizontal As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitHorizontal { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-318">返回或设置水平窗口拆分的位置（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-318">Returns or sets the location of the horizontal window split in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitRow">
      <MemberSignature Language="C#" Value="public int SplitRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitRow" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-319">返回或设置将指定窗口拆分成窗格处的行号（拆分线以上的行数）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-319">Returns or sets the row number where the window is split into panes (the number of rows above the split).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitVertical">
      <MemberSignature Language="C#" Value="public double SplitVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitVertical As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitVertical { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-320">返回或设置垂直窗口拆分的位置（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-320">Returns or sets the location of the vertical window split in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabRatio">
      <MemberSignature Language="C#" Value="public double TabRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TabRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.TabRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property TabRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TabRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-321">返回或设置工作簿中工作表标签区域的宽度与窗口水平滚动条的宽度比例（可为 0 到 1 之间的数字；默认值为 0.6）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-321">Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-322">此属性在设置为 False 时不起作用 (保留其值，但它对显示视图 <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> 没有) 。 <b></b></span><span class="sxs-lookup"><span data-stu-id="b8e8f-322">This property has no effect when <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> is set to <b>False</b> (its value is retained, but it has no effect on the display).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-323">从窗口的上边缘到可用区域上边缘的距离（以 (菜单下方、任何固定在顶部且编辑栏为) ）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-323">The distance in points from the top edge of the window to the top edge of the usable area (below the menus, any toolbars docked at the top, and the formula bar).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-324">无法对最大化窗口设置此属性。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-324">You cannot set this property for a maximized window.</span></span> <span data-ttu-id="b8e8f-325">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> 该属性可返回或设置窗口的状态。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-325">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to return or set the state of the window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlWindowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowType Type { Microsoft::Office::Interop::Excel::XlWindowType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-326">返回或设置窗口类型。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-326">Returns or sets the window type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-327">返回应用程序窗口区域中窗口可以占用的最大高度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-327">Returns the maximum height in points of the space that a window can occupy in the application window area.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-328">返回应用程序窗口区域中窗口可以占用的最大宽度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-328">Returns the maximum width in points of the space that a window can occupy in the application window area.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowView View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As XlWindowView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowView View { Microsoft::Office::Interop::Excel::XlWindowView get(); void set(Microsoft::Office::Interop::Excel::XlWindowView value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-329">返回或设置在窗口中显示的视图。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-329">Returns or sets the view showing in the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-330">决定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-330">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range VisibleRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range VisibleRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.VisibleRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ VisibleRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-331">返回 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 一个对象，该对象代表窗口或窗格中可见的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the window or pane.</span></span> <span data-ttu-id="b8e8f-332">如果列或行只显示了一部分，则说明它是包括在区域之内的。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-332">If a column or row is partially visible, it's included in the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-333">窗口的宽度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-333">The width in points of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-334">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> 该属性可确定窗口的最大大小。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-334">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> property to determine the maximum size for the window.</span></span> <span data-ttu-id="b8e8f-335">如果在窗口处于最大化或最小化时，不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-335">You cannot set this property if the window is maximized or minimized.</span></span> <span data-ttu-id="b8e8f-336">使用 <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> 该属性可确定窗口状态。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-336">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNumber">
      <MemberSignature Language="C#" Value="public int WindowNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-337">返回窗口号。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-337">Returns the window number.</span></span> <span data-ttu-id="b8e8f-338">例如，名称为“Book1.xls:2”的窗口，其窗口号为 2。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-338">For example, a window named "Book1.xls:2" has 2 as its window number.</span></span> <span data-ttu-id="b8e8f-339">大多数窗口的窗口号为 1。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-339">Most windows have the window number 1.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-340">窗口编号与窗口索引不同， (属性的返回值) 集合中窗口 <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-340">The window number isn't the same as the window index (the return value of the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property), which is the position of the window within the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-341">返回或设置窗口的状态。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-341">Returns or sets the state of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public object Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Zoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Zoom { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e8f-342">返回或设置窗口的显示大小，以百分比表示 (100 表示正常大小，200 等于双倍大小，以此类) 。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-342">Returns or sets the display size of the window as a percentage (100 equals normal size, 200 equals double size, and so on).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b8e8f-343">将此属性设为 <b>True</b>，可将窗口大小设置成与当前选定区域相适应的大小。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-343">You can also set this property to <b>True</b> to make the window size fit the current selection.</span></span></para>
          <para><span data-ttu-id="b8e8f-p163">本功能仅对窗口中当前的活动工作表起作用。若要对其他工作表使用此属性，必须先激活工作表。</span><span class="sxs-lookup"><span data-stu-id="b8e8f-p163">This function affects only the sheet that's currently active in the window. To use this property on other sheets, you must first activate them.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>