<Type Name="OLEDBConnection" FullName="Microsoft.Office.Interop.Excel.OLEDBConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="907e0e2b7ef356c71a4d22a04803c5aeb256084d" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50011359" /></Metadata><TypeSignature Language="C#" Value="public interface OLEDBConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEDBConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.OLEDBConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEDBConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEDBConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002448D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eed6a-101">代表 OLE DB 连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-101">Represents the OLE DB connection.</span></span></summary>
    <remarks><para><span data-ttu-id="eed6a-102">OLE DB 连接可存储在 Excel 工作簿中。</span><span class="sxs-lookup"><span data-stu-id="eed6a-102">An OLE DB connection can be stored in an Excel workbook.</span></span>  <span data-ttu-id="eed6a-103">当 Micrososft Excel 打开工作簿时，Excel 将创建 OLE DB 连接的内存副本，称为  <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="eed6a-103">When Micrososft Excel opens the workbook, Excel creates an in-memory copy of the OLE DB connection known as the  <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> object.</span></span></para>
      <para><span data-ttu-id="eed6a-104">对象包含与连接有关的信息，例如要连接到的服务器的名称以及要打开在服务器上 <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> 的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="eed6a-104">An <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> object contains information related to the connection, such as the name of the server to connect to and the name of the objects to be opened on that server.</span></span>  <span data-ttu-id="eed6a-105">或者，该对象还可以包括身份验证凭据信息，或要传递给服务器并执行的命令 (例如，由 SQL Server) 执行的 <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="eed6a-105">Optionally, the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> object may also include authentication credential information, or a command that is to be passed to the server and executed (for example, a SELECT statement to be executed by SQL Server).</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="ADOConnection">
      <MemberSignature Language="C#" Value="public object ADOConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ADOConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ADOConnection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ADOConnection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2074)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2074)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-106">如果将数据透视表缓存连接到 OLE DB 数据源，则返回一个 ADO Connection 对象。</span><span class="sxs-lookup"><span data-stu-id="eed6a-106">Returns an ADO connection object if the PivotTable cache is connected to an OLE DB data source.</span></span> <span data-ttu-id="eed6a-107">只读。</span><span class="sxs-lookup"><span data-stu-id="eed6a-107">Read-only.</span></span></summary>
        <value><span data-ttu-id="eed6a-108"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-108"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-109">该属性公开了与数据提供程序的 Microsoft Excel 连接，允许用户在 Excel 使用的同一会话的上下文中 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> 编写代码。</span><span class="sxs-lookup"><span data-stu-id="eed6a-109">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> property exposes the Microsoft Excel connection to the data provider, allowing the user to write code within the context of the same session that Excel is using.</span></span> </para>
          <para><span data-ttu-id="eed6a-110">该属性 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> 仅适用于数据源为 OLE DB 数据源的会话。</span><span class="sxs-lookup"><span data-stu-id="eed6a-110">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> property is available only for sessions where the data source is an OLE DB data source.</span></span> <span data-ttu-id="eed6a-111">如果没有 ADO 会话，查询将导致运行时错误。</span><span class="sxs-lookup"><span data-stu-id="eed6a-111">When there is no ADO session, the query will result in a run-time error.</span></span>

<span data-ttu-id="eed6a-112">该属性 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> 可用于任何具有 ADO 的基于 OLE DB 的缓存。</span><span class="sxs-lookup"><span data-stu-id="eed6a-112">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ADOConnection" /> property can be used for any OLE DB–based cache with ADO.</span></span> <span data-ttu-id="eed6a-113">ADO Connection 对象可与 ADO MD 一起使用，以查找有关缓存所基于的 OLAP 多维数据集的信息。</span><span class="sxs-lookup"><span data-stu-id="eed6a-113">The ADO connection object can be used with ADO MD for finding information about OLAP cubes on which the cache is based.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseConnectionFile">
      <MemberSignature Language="C#" Value="public bool AlwaysUseConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.AlwaysUseConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseConnectionFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseConnectionFile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-114"><b>如此</b>如果连接文件始终用于建立与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-114"><b>True</b>if the connection file is always used to establish connection to the data source.</span></span> <span data-ttu-id="eed6a-115">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-115">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-116"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-116"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-117">当此属性为 <b>True</b> 时，连接文件将始终用于建立与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-117">When this property is <b>True</b> the connection file will always be used to establish the connection to the data source.</span></span>  <span data-ttu-id="eed6a-118">如果在工作簿中嵌入的连接不同于外部连接文件，则忽略嵌入的连接，且外部连接文件将是唯一考虑的版本。</span><span class="sxs-lookup"><span data-stu-id="eed6a-118">If the connection embedded within the workbook is different from the external connection file, the embedded connection will be ignored and the external connection file will be the only version considered.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-119">如果不与对象限定符一起使用，则此属性返回一个对象，该对象Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="eed6a-119">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="eed6a-120">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="eed6a-120">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="eed6a-121">只读。</span><span class="sxs-lookup"><span data-stu-id="eed6a-121">Read-only.</span></span></summary>
        <value><span data-ttu-id="eed6a-122"><b>应用程序</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-122"><b>Application</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-123">您可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="eed6a-123">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundQuery">
      <MemberSignature Language="C#" Value="public bool BackgroundQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.BackgroundQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundQuery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundQuery { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-124">如果 OLE DB 连接的查询是异步执行（在后台执行）的，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-124"><b>True</b> if queries for the OLE DB connection are performed asynchronously (in the background).</span></span> <span data-ttu-id="eed6a-125">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-125">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-126"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-126"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-127">对于 OLAP 数据源，此属性是只读的，并且始终返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-127">For OLAP data sources, this property is read-only and always returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculatedMembers As CalculatedMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMembers ^ CalculatedMembers { Microsoft::Office::Interop::Excel::CalculatedMembers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-128">获取 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> 指定连接的集合。</span><span class="sxs-lookup"><span data-stu-id="eed6a-128">Gets the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection for the specified connection.</span></span></summary>
        <value><span data-ttu-id="eed6a-129"><see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" />指定连接的集合。</span><span class="sxs-lookup"><span data-stu-id="eed6a-129">The <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection for the specified connection.</span></span></value>
        <remarks><para><span data-ttu-id="eed6a-130">只读。</span><span class="sxs-lookup"><span data-stu-id="eed6a-130">Read-only.</span></span></para>
          <para><span data-ttu-id="eed6a-131">使用集合的属性在多个数据透视表和使用同一连接的多维数据集函数之间共享 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CalculatedMembers" /> <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> 计算成员。</span><span class="sxs-lookup"><span data-stu-id="eed6a-131">Use the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CalculatedMembers" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> collection to share calculated members between multiple PivotTables and cube functions that use the same connection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRefresh">
      <MemberSignature Language="C#" Value="public void CancelRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelRefresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEDBConnection.CancelRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRefresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed6a-132">对指定的 OLE DB 连接取消正在进行的所有刷新操作。</span><span class="sxs-lookup"><span data-stu-id="eed6a-132">Cancels all refresh operations in progress for the specified OLE DB connection.</span></span></summary>
        <remarks><para><span data-ttu-id="eed6a-133">使用 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Refreshing" /> 该属性可确定刷新操作当前是否正在进行。</span><span class="sxs-lookup"><span data-stu-id="eed6a-133">Use the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Refreshing" /> property to determine whether a refresh operation is currently in progress.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public object CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-134">返回或设置指定数据源的命令字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-134">Returns or sets the command string for the specified data source.</span></span> <span data-ttu-id="eed6a-135">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-135">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-136"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-136"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-137">您应该使用属性而不是 SQL 属性，现在主要是为了与 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> 早期版本的 Microsoft Excel 兼容而存在。 <b></b></span><span class="sxs-lookup"><span data-stu-id="eed6a-137">You should use the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> property instead of the <b>SQL</b>property, which now exists primarily for compatibility with earlier versions of Microsoft Excel.</span></span> <span data-ttu-id="eed6a-138">如果同时使用这两个属性 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> ，则属性值优先。</span><span class="sxs-lookup"><span data-stu-id="eed6a-138">If you use both properties, the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> property's value takes precedence.</span></span></para>
          <para><span data-ttu-id="eed6a-139">该属性 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandType" /> 描述属性的值 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-139">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandType" /> property describes the value of the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCmdType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCmdType CommandType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As XlCmdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCmdType CommandType { Microsoft::Office::Interop::Excel::XlCmdType get(); void set(Microsoft::Office::Interop::Excel::XlCmdType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCmdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-140">返回或设置 <b>XlCmdType</b> 常量之一。</span><span class="sxs-lookup"><span data-stu-id="eed6a-140">Returns or sets one of the <b>XlCmdType</b> constants.</span></span> <span data-ttu-id="eed6a-141">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-141">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /></value>
        <remarks><para><span data-ttu-id="eed6a-142">返回或设置的常量描述属性的值 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-142">The constant that is returned or set describes the value of the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.CommandText" /> property.</span></span> <span data-ttu-id="eed6a-143">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql" />。</span><span class="sxs-lookup"><span data-stu-id="eed6a-143">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql" />.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-144">返回或设置一个包含 OLE DB 设置的字符串，这些设置使 Microsoft Excel 可以连接 OLE DB 数据源。</span><span class="sxs-lookup"><span data-stu-id="eed6a-144">Returns or sets a string that contains OLE DB settings that enable Microsoft Excel to connect to an OLE DB data source.</span></span> <span data-ttu-id="eed6a-145">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-145">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-146"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-146"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-147">设置 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 该属性不会立即启动与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-147">Setting the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property does not immediately initiate the connection to the data source.</span></span> <span data-ttu-id="eed6a-148">必须使用该方法 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 建立连接并检索数据。</span><span class="sxs-lookup"><span data-stu-id="eed6a-148">You must use the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method to make the connection and retrieve the data.</span></span>

<span data-ttu-id="eed6a-149">使用脱机多维数据集文件时，将 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> 该属性设置为 <b>True，</b> 并使用 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> 属性而不是 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="eed6a-149">When using an offline cube file, set the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> property to <b>True</b> and use the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property instead of the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-150">返回枚举中的 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 一个常量，该常量指示创建此对象时的应用程序。</span><span class="sxs-lookup"><span data-stu-id="eed6a-150">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="eed6a-151">只读。</span><span class="sxs-lookup"><span data-stu-id="eed6a-151">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="eed6a-152">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="eed6a-152">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="eed6a-153">该属性设计为在 Microsoft Excel for the Macintosh 中使用，其中每个应用程序都有 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Creator" /> 一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="eed6a-153">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="eed6a-154">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="eed6a-154">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRefresh">
      <MemberSignature Language="C#" Value="public bool EnableRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.EnableRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-155">如果用户可刷新连接，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-155"><b>True</b> if the connection can be refreshed by the user.</span></span> <span data-ttu-id="eed6a-156">默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-156">The default value is <b>True</b>.</span></span> <span data-ttu-id="eed6a-157">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-157">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-158"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-158"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-159">如果 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshOnFileOpen" /> 该属性设置为 False， <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.EnableRefresh" /> 则忽略 <b>该属性</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-159">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshOnFileOpen" /> property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.EnableRefresh" /> property is set to <b>False</b>.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2075)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-160">如果 <b>该属性</b> 为 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" /> <b>True，</b>则返回 True 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-160">Returns <b>True</b> if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" /> property is<b>True</b>.</span></span> <span data-ttu-id="eed6a-161">如果数据透视表缓存当前未与其源相连，则返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-161">Returns <b>False</b> if it is not currently connected to its source.</span></span> <span data-ttu-id="eed6a-162">只读 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-162">Read-only <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-163"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-163"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-164"><see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.IsConnected" />该属性不检查连接是否连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-164">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.IsConnected" /> property does not check to see if the connection is connected.</span></span> <span data-ttu-id="eed6a-165">即使此属性返回<b>True，</b>如果连接不再有效，向提供程序发送命令也可能会导致错误。</span><span class="sxs-lookup"><span data-stu-id="eed6a-165">Even if this property returns<b>True</b>, sending commands to the provider could result in an error if the connection is no longer valid.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalConnection">
      <MemberSignature Language="C#" Value="public object LocalConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LocalConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalConnection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ LocalConnection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1835)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1835)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1835)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-166">返回或设置脱机多维数据集文件的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-166">Returns or sets the connection string to an offline cube file.</span></span> <span data-ttu-id="eed6a-167">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-167">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-168"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-168"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-169">对于非 OLAP 数据源，该属性的值为空字符串，并且 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> 该属性设置为<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-169">For a non-OLAP data source, the value of the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property is an empty string, and the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> property is set to <b>False</b>.</span></span></para>
          <para><span data-ttu-id="eed6a-170">设置 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> 该属性不会立即启动与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-170">Setting the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property does not immediately initiate the connection to the data source.</span></span> <span data-ttu-id="eed6a-171">必须先使用 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 该方法建立连接并检索数据。</span><span class="sxs-lookup"><span data-stu-id="eed6a-171">You must first use the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method to make the connection and retrieve the data.</span></span></para>
          <para><span data-ttu-id="eed6a-172">如果该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> <b>True，</b>则使用属性的值。</span><span class="sxs-lookup"><span data-stu-id="eed6a-172">The value of the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property is used if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> property is set to <b>True</b>.</span></span> <span data-ttu-id="eed6a-173">如果该属性设置为 False，则该属性指定基于除文件外的其他源的查询表 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 本地多维数据集字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-173">If the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" /> property is set to <b>False</b>, the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property specifies the connection string for query tables based on sources other than local cube files.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleID">
      <MemberSignature Language="C#" Value="public int LocaleID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocaleID" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-174">获取或设置指定连接区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="eed6a-174">Gets or sets the locale identifier for the specified connection.</span></span></summary>
        <value><span data-ttu-id="eed6a-175">指定连接区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="eed6a-175">The locale identifier for the specified connection.</span></span></value>
        <remarks><para><span data-ttu-id="eed6a-176">读/写。</span><span class="sxs-lookup"><span data-stu-id="eed6a-176">Read/write.</span></span></para>
          <para><span data-ttu-id="eed6a-177">在将 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocaleID" /> 该属性设置为新的区域设置之前，必须将对象 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RetrieveInOfficeUILang" /> <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> 的属性设置为<b>false。</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-177">Before you set the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocaleID" /> property to a new locale, you must set the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RetrieveInOfficeUILang" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> object to <b>false</b>.</span></span> <span data-ttu-id="eed6a-178">有关有效的区域设置 ID (LCID) 值，请搜索 MSDN 网站中的"Microsoft 分配区域设置 ID"。</span><span class="sxs-lookup"><span data-stu-id="eed6a-178">For information about valid Locale ID (LCID) values, search the MSDN website for "Locale IDs Assigned by Microsoft".</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaintainConnection">
      <MemberSignature Language="C#" Value="public bool MaintainConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainConnection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-179">如果从刷新操作开始直至关闭工作簿，都一直保留与指定数据源的连接，则返回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-179">Returns <b>True</b> if the connection to the specified data source is maintained after the refresh operation and until the workbook is closed.</span></span> <span data-ttu-id="eed6a-180">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-180">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-181"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-181"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-182">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-182">The default value is <b>True</b>.</span></span> <span data-ttu-id="eed6a-183">如果预计会频繁对服务器进行查询，则可将此属性设置为 <b>True</b>，这样能减少重新连接的时间因而可提高性能。</span><span class="sxs-lookup"><span data-stu-id="eed6a-183">If you anticipate frequent queries to a server, setting this property to <b>True</b> might improve performance by reducing reconnection time.</span></span> <span data-ttu-id="eed6a-184">如果将此属性设置为 <b>False</b>，则会使打开的连接关闭。</span><span class="sxs-lookup"><span data-stu-id="eed6a-184">Setting this property to <b>False</b> causes an open connection to be closed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeConnection">
      <MemberSignature Language="C#" Value="public void MakeConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MakeConnection() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEDBConnection.MakeConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2076)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed6a-185">为指定的 OLE DB 连接建立连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-185">Establishes a connection for the specified OLE DB connection.</span></span></summary>
        <remarks><para><span data-ttu-id="eed6a-186">当连接删除且用户希望重新建立连接时 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.MakeConnection" /> ，可以使用该方法。</span><span class="sxs-lookup"><span data-stu-id="eed6a-186">The <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.MakeConnection" /> method can be used when a connection drops and the user wants to reestablish the connection.</span></span> </para>
          <para><span data-ttu-id="eed6a-p129">如果断开连接，则各种对象和方法可能都会返回运行时错误。使用该方法可确保在执行其他对象或方法之前已建立一个连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-p129">Various objects and methods might return a run-time error if the connection is dropped. Use of this method assures a connection before executing other objects or methods.</span></span></para>
          <para><span data-ttu-id="eed6a-189">如果指定的 OLE DB 连接的属性已设置为 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" /> <b>False，</b>则该方法将导致运行时错误。</span><span class="sxs-lookup"><span data-stu-id="eed6a-189">This method will result in a run-time error if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaintainConnection" /> property of the specified OLE DB connection has been set to <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDrillthroughRecords">
      <MemberSignature Language="C#" Value="public int MaxDrillthroughRecords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDrillthroughRecords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.MaxDrillthroughRecords" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDrillthroughRecords As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDrillthroughRecords { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-190">返回或设置要检索的记录的最大数目。</span><span class="sxs-lookup"><span data-stu-id="eed6a-190">Returns or sets the maximum number of records to retrieve.</span></span> <span data-ttu-id="eed6a-191"><b>Integer</b> 型，可读/写。</span><span class="sxs-lookup"><span data-stu-id="eed6a-191">Read/write <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-192"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-192"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLAP">
      <MemberSignature Language="C#" Value="public bool OLAP { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OLAP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.OLAP" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLAP As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OLAP { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2077)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2077)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-193">如果 <b>OLE</b> DB 连接连接到 OLAP 服务器中的联机分析处理， (True) 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-193">Returns <b>True</b> if the OLE DB connection is connected to an Online Analytical Processing (OLAP) server.</span></span> <span data-ttu-id="eed6a-194">只读 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-194">Read-only <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-195"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-195"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-196">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="eed6a-196">Returns the parent object for the specified object.</span></span> <span data-ttu-id="eed6a-197">只读。</span><span class="sxs-lookup"><span data-stu-id="eed6a-197">Read-only.</span></span></summary>
        <value><span data-ttu-id="eed6a-198"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-198"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reconnect">
      <MemberSignature Language="C#" Value="public void Reconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Reconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed6a-199">先放弃再重新连接指定的连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-199">Drops and then reconnects the specified connection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed6a-200">刷新 OLE DB 连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-200">Refreshes an OLE DB connection.</span></span></summary>
        <remarks><para><span data-ttu-id="eed6a-201">与 OLE DB 数据源建立连接时，Microsoft Excel 使用属性指定的连接 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-201">When making the connection to the OLE DB data source, Microsoft Excel uses the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property.</span></span> <span data-ttu-id="eed6a-202">如果指定的连接字符串缺少必需的值，将显示对话框，提示用户提供必需的信息。</span><span class="sxs-lookup"><span data-stu-id="eed6a-202">If the specified connection string is missing required values, dialog boxes will be displayed to prompt the user for the required information.</span></span> <span data-ttu-id="eed6a-203">如果该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 为 <b>False，</b>则不显示对话框，并且该方法失败，但 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 连接信息不足异常。</span><span class="sxs-lookup"><span data-stu-id="eed6a-203">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is <b>False</b>, dialog boxes are not displayed and the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method fails with the Insufficient Connection Information exception.</span></span></para>
          <para><span data-ttu-id="eed6a-204">Microsoft Excel 成功连接后，它将存储已完成的连接字符串，以便不会在同一编辑会话期间显示对该方法的后续调用 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 的提示。</span><span class="sxs-lookup"><span data-stu-id="eed6a-204">After Microsoft Excel makes a successful connection, it stores the completed connection string so that prompts will not be displayed for subsequent calls to the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method during the same editing session.</span></span> <span data-ttu-id="eed6a-205">您可以通过检查属性的值来获取已完成的连接  <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-205">You can obtain the completed connection string by examining the value of the  <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property.</span></span></para>
          <para><span data-ttu-id="eed6a-206">完成数据库连接后，将检查 SQL 查询的有效性。</span><span class="sxs-lookup"><span data-stu-id="eed6a-206">After the database connection is made, the SQL query is validated.</span></span> <span data-ttu-id="eed6a-207">如果查询被无效，该方法将失败 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> ，SQL语法错误异常。</span><span class="sxs-lookup"><span data-stu-id="eed6a-207">If the query is not valid, the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method fails with the SQL Syntax Error exception.</span></span></para>
          <para><span data-ttu-id="eed6a-208">如果查询成功完成或启动，该方法将返回 True;如果用户取消连接，则返回 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> <b>False。</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="eed6a-208">The <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method returns <b>True</b> if the query is successfully completed or started; it returns <b>False</b> if the user cancels a connection.</span></span></para>
          <para><span data-ttu-id="eed6a-209">若要了解提取的行数是否超过了工作表上的可用行数，请检查 <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" /> 该属性。</span><span class="sxs-lookup"><span data-stu-id="eed6a-209">To see whether the number of fetched rows exceeded the number of available rows on the worksheet, examine the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" /> property.</span></span> <span data-ttu-id="eed6a-210">每次调用该方法时，都会 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 初始化此属性。</span><span class="sxs-lookup"><span data-stu-id="eed6a-210">This property is initialized every time the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDate">
      <MemberSignature Language="C#" Value="public DateTime RefreshDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime RefreshDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime RefreshDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-211">返回上次刷新 OLE DB 连接的日期。</span><span class="sxs-lookup"><span data-stu-id="eed6a-211">Returns the date on which the OLE DB connection was last refreshed.</span></span> <span data-ttu-id="eed6a-212">只读的 <b>DateTime</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-212">Read-only <b>DateTime</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-213"><b>DateTime</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-213"><b>DateTime</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-214">对于 OLAP 数据源，在每次查询后都会更新此属性。</span><span class="sxs-lookup"><span data-stu-id="eed6a-214">For OLAP data sources, this property is updated after each query.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Refreshing">
      <MemberSignature Language="C#" Value="public bool Refreshing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Refreshing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Refreshing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Refreshing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Refreshing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-215">如果正在进行指定 OLE DB 连接的后台 OLE DB 查询，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-215"><b>True</b> if a background OLE DB query is in progress for the specified OLE DB connection.</span></span> <span data-ttu-id="eed6a-216">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-216">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-217"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-217"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-218">使用此方法 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.CancelRefresh" /> 取消后台查询。</span><span class="sxs-lookup"><span data-stu-id="eed6a-218">Use the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.CancelRefresh" /> method to cancel background queries.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshOnFileOpen">
      <MemberSignature Language="C#" Value="public bool RefreshOnFileOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshOnFileOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshOnFileOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshOnFileOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshOnFileOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-219">如果每次打开工作簿都自动更新连接，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-219"><b>True</b> if the connection is automatically updated each time the workbook is opened.</span></span> <span data-ttu-id="eed6a-220">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-220">The default value is <b>False</b>.</span></span> <span data-ttu-id="eed6a-221">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-221">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-222"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-222"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-223">使用工作簿中的方法打开工作簿时，不会自动 <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 刷新Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="eed6a-223">The connections are not automatically refreshed when you open the workbook by using the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method in Visual Basic.</span></span> <span data-ttu-id="eed6a-224">使用 <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> 该方法在工作簿打开后刷新数据。</span><span class="sxs-lookup"><span data-stu-id="eed6a-224">Use the <see cref="M:Microsoft.Office.Interop.Excel.OLEDBConnection.Refresh" /> method to refresh the data after the workbook is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshPeriod">
      <MemberSignature Language="C#" Value="public int RefreshPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RefreshPeriod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RefreshPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshPeriod As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RefreshPeriod { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-225">返回或设置两次刷新之间的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="eed6a-225">Returns or sets the number of minutes between refreshes.</span></span> <span data-ttu-id="eed6a-226"><b>Integer</b> 型，可读/写。</span><span class="sxs-lookup"><span data-stu-id="eed6a-226">Read/write <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-227"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-227"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-228">将时间段设置为 0（零）会禁用定时自动刷新，等同于将此属性设置为 <b>Null</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-228">Setting the period to 0 (zero) disables automatic timed refreshes and is equivalent to setting this property to <b>Null</b>.</span></span> <span data-ttu-id="eed6a-229"><b>RefreshPeriod</b> 属性的值可以是从 0 到 32767 的整数。</span><span class="sxs-lookup"><span data-stu-id="eed6a-229">The value of the <b>RefreshPeriod</b> property can be an integer from 0 through 32767.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveInOfficeUILang">
      <MemberSignature Language="C#" Value="public bool RetrieveInOfficeUILang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetrieveInOfficeUILang" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RetrieveInOfficeUILang" />
      <MemberSignature Language="VB.NET" Value="Public Property RetrieveInOfficeUILang As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetrieveInOfficeUILang { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-230">如果要以 Office 用户界面显示语言（如果可用）检索数据和错误，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-230"><b>True</b> if the data and errors are to be retrieved in the Office user interface display language when available.</span></span>  <span data-ttu-id="eed6a-231">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-231">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-232"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-232"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-233">如果此属性设置为 <b>False</b>，则改用连接字符串中的 LCID 值。</span><span class="sxs-lookup"><span data-stu-id="eed6a-233">If this property is set to <b>False</b>, the LCID value in the connection string is used instead.</span></span> <span data-ttu-id="eed6a-234">如果未指定 LCID，则使用服务器中的默认 LCID。</span><span class="sxs-lookup"><span data-stu-id="eed6a-234">If an LCID is not specified, the default LCID from the server is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RobustConnect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.RobustConnect" />
      <MemberSignature Language="VB.NET" Value="Public Property RobustConnect As XlRobustConnect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRobustConnect RobustConnect { Microsoft::Office::Interop::Excel::XlRobustConnect get(); void set(Microsoft::Office::Interop::Excel::XlRobustConnect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRobustConnect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-235">返回或设置 OLE DB 连接与其数据源连接的方式。</span><span class="sxs-lookup"><span data-stu-id="eed6a-235">Returns or sets how OLE DB connection connects to its data source.</span></span> <span data-ttu-id="eed6a-236">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-236">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" /></value>
        <remarks><para><span data-ttu-id="eed6a-237">如果使用可靠的连接，当 Microsoft Excel 无法使用工作簿连接信息建立连接时，Excel 将检查工作簿连接是否具有外部连接文件的路径。</span><span class="sxs-lookup"><span data-stu-id="eed6a-237">If you use robust connectivity, when Microsoft Excel is unable to establish a connection using the workbook connection information,   Excel will check if the workbook connection has a path to an external connection file.</span></span>  <span data-ttu-id="eed6a-238">如果有，Excel 将打开外部连接文件并尝试使用外部连接文件中包含的信息进行连接。</span><span class="sxs-lookup"><span data-stu-id="eed6a-238">If it does, Excel will open the external connection file and try to connect using the information contained in the external connection file.</span></span>  <span data-ttu-id="eed6a-239">如果在使用外部连接文件之后能够建立连接，则 Excel 将更新工作簿的连接对象。</span><span class="sxs-lookup"><span data-stu-id="eed6a-239">If a connection can be established after using the external connection file, Excel will then update the workbook's connection object.</span></span>  </para>
          <para><span data-ttu-id="eed6a-240">在信息技术部门在一个中央位置维护和更新连接的情况下，这可以提供可靠的连接，每当上一版本的连接（缓存在工作簿中）失败时，允许用户的工作簿自动获取那些更新。</span><span class="sxs-lookup"><span data-stu-id="eed6a-240">This provides robust connectivity in scenarios where an Information Technology Department maintains and updates connections in a central place, permitting a user's workbook to automatically fetch those updates whenever the previous version of the connection (cached within the workbook) fails.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsODC">
      <MemberSignature Language="C#" Value="public void SaveAsODC (string ODCFileName, object Description, object Keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsODC([in]string ODCFileName, [in]object Description, [in]object Keywords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEDBConnection.SaveAsODC(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsODC (ODCFileName As String, Optional Description As Object, Optional Keywords As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2082)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ODCFileName" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="Keywords" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ODCFileName"><span data-ttu-id="eed6a-241">保存文件的位置。</span><span class="sxs-lookup"><span data-stu-id="eed6a-241">Location to save the file.</span></span></param>
        <param name="Description"><span data-ttu-id="eed6a-242">将保存在文件中的说明。</span><span class="sxs-lookup"><span data-stu-id="eed6a-242">Description that will be saved in the file.</span></span></param>
        <param name="Keywords"><span data-ttu-id="eed6a-243">可用于搜索该文件的以空格分隔的关键字。</span><span class="sxs-lookup"><span data-stu-id="eed6a-243">Space-separated keywords that can be used to search for this file.</span></span></param>
        <summary><span data-ttu-id="eed6a-244">将 OLE DB 连接保存为 Microsoft Office 数据连接文件。</span><span class="sxs-lookup"><span data-stu-id="eed6a-244">Saves the OLE DB connection as an Microsoft Office Data Connection file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public bool SavePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SavePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SavePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property SavePassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SavePassword { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-245">如果将 OLE DB 连接字符串中的密码信息保存在连接字符串中，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-245"><b>True</b> if password information in an OLE DB connection string is saved in the connection string.</span></span> <span data-ttu-id="eed6a-246">如果删除密码，则为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-246"><b>False</b> if the password is removed.</span></span> <span data-ttu-id="eed6a-247">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-247">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-248"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-248"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-249">此属性由数据透视表和查询表在 ODBC 和 OLEDB 查询中使用。</span><span class="sxs-lookup"><span data-stu-id="eed6a-249">This property is used in both ODBC and OLEDB queries, and by both PivotTables and QueryTables.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCredentialsMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerCredentialsMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCredentialsMethod As XlCredentialsMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCredentialsMethod ServerCredentialsMethod { Microsoft::Office::Interop::Excel::XlCredentialsMethod get(); void set(Microsoft::Office::Interop::Excel::XlCredentialsMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCredentialsMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-250">返回或设置应该用于服务器验证的凭据的类型。</span><span class="sxs-lookup"><span data-stu-id="eed6a-250">Returns or sets the type of credentials that should be used for server authentication.</span></span> <span data-ttu-id="eed6a-251">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed6a-251">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerFillColor">
      <MemberSignature Language="C#" Value="public bool ServerFillColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerFillColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerFillColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerFillColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerFillColor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-252">如果在使用指定连接时从服务器中检索 OLAP 服务器的填充色格式，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-252"><b>True</b> if the fill color format for the OLAP server is retrieved from the server when using the specified connection.</span></span>  <span data-ttu-id="eed6a-253">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-253">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-254"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-254"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerFontStyle">
      <MemberSignature Language="C#" Value="public bool ServerFontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerFontStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerFontStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerFontStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerFontStyle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-255">如果在使用指定连接时从服务器中检索 OLAP 服务器的字体样式格式，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-255"><b>True</b> if the font style format for the OLAP server is retrieved from the server when using the specified connection.</span></span>  <span data-ttu-id="eed6a-256">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-256">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-257"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-257"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerNumberFormat">
      <MemberSignature Language="C#" Value="public bool ServerNumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerNumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerNumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerNumberFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerNumberFormat { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2709)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2709)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-258">如果在使用指定连接时从服务器中检索 OLAP 服务器的数字格式，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-258"><b>True</b> if the number format for the OLAP server is retrieved from the server when using the specified connection.</span></span>  <span data-ttu-id="eed6a-259">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-259">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-260"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-260"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerSSOApplicationID">
      <MemberSignature Language="C#" Value="public string ServerSSOApplicationID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerSSOApplicationID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerSSOApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerSSOApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerSSOApplicationID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-261">返回或设置单一登录 (SSO) 应用程序标识符，该标识符用于在 SSO 数据库中查找凭据。</span><span class="sxs-lookup"><span data-stu-id="eed6a-261">Returns or sets a single sign-on application (SSO) identifier that is used to perform a lookup in the SSO database for credentials.</span></span> <span data-ttu-id="eed6a-262">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-262">Read/write <b>String</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-263"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-263"><b>String</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerTextColor">
      <MemberSignature Language="C#" Value="public bool ServerTextColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerTextColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.ServerTextColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTextColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerTextColor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-264">如果在使用指定连接时从服务器中检索 OLAP 服务器的文本颜色格式，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-264"><b>True</b> if the text color format for the OLAP server is retrieved from the server when using the specified connection.</span></span>  <span data-ttu-id="eed6a-265">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-265">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-266"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-266"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceConnectionFile">
      <MemberSignature Language="C#" Value="public string SourceConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceConnectionFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceConnectionFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-267">返回或设置一个 <b>String</b> 类型的值，该值指示用于创建连接的 Microsoft Office 数据连接文件或类似文件。</span><span class="sxs-lookup"><span data-stu-id="eed6a-267">Returns or sets a <b>String</b> indicating the Microsoft Office Data Connection file or similar file that was used to create the connection.</span></span> <span data-ttu-id="eed6a-268">读/写。</span><span class="sxs-lookup"><span data-stu-id="eed6a-268">Read/write.</span></span></summary>
        <value><span data-ttu-id="eed6a-269"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-269"><b>String</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceDataFile">
      <MemberSignature Language="C#" Value="public string SourceDataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceDataFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceDataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceDataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-270">返回或设置一个 <b>String</b> 类型的值，该值指示 OLE DB 连接的源数据文件。</span><span class="sxs-lookup"><span data-stu-id="eed6a-270">Returns or sets a <b>String</b> indicating the source data file for an OLE DB connection.</span></span> <span data-ttu-id="eed6a-271">读/写。</span><span class="sxs-lookup"><span data-stu-id="eed6a-271">Read/write.</span></span></summary>
        <value><span data-ttu-id="eed6a-272"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-272"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-273">例如，对于基于文件的数据源 (，Access) <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile" /> 属性包含源数据文件的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="eed6a-273">For file-based data sources (for example, Access) the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile" /> property contains a fully qualified path to the source data file.</span></span> <span data-ttu-id="eed6a-274">对于基于服务器的数据源（如 SQL Server），该属性为 null。</span><span class="sxs-lookup"><span data-stu-id="eed6a-274">It is null for server-based data sources (for example, SQL Server).</span></span> <span data-ttu-id="eed6a-275">如果 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile" /> 以编程方式更改属性， <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 该属性将设置为 null。</span><span class="sxs-lookup"><span data-stu-id="eed6a-275">The <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.SourceDataFile" /> property is set to null if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property is changed programmatically.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocalConnection">
      <MemberSignature Language="C#" Value="public bool UseLocalConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocalConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEDBConnection.UseLocalConnection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocalConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocalConnection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1837)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1837)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1837)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed6a-276"><b>如此</b> 如果 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> 该属性用于指定使 Microsoft Excel 连接到数据源的字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-276"><b>True</b> if the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.LocalConnection" /> property is used to specify the string that enables Microsoft Excel to connect to a data source.</span></span> <span data-ttu-id="eed6a-277"><b>假</b> 如果使用属性指定的 <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> 连接字符串。</span><span class="sxs-lookup"><span data-stu-id="eed6a-277"><b>False</b> if the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel.OLEDBConnection.Connection" /> property is used.</span></span> <span data-ttu-id="eed6a-278">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="eed6a-278">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="eed6a-279"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="eed6a-279"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="eed6a-280">本示例将第一个数据透视表缓存的连接字符串设置为引用脱机多维数据集文件。</span><span class="sxs-lookup"><span data-stu-id="eed6a-280">This example sets the connection string of the first PivotTable cache to reference an offline cube file.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>