<Type Name="ODBCConnection" FullName="Microsoft.Office.Interop.Excel.ODBCConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="492ad873be2d6a4f1713ad14d80112f787219f44" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50011415" /></Metadata><TypeSignature Language="C#" Value="public interface ODBCConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ODBCConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ODBCConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface ODBCConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class ODBCConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002448E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="deac6-101">代表 ODBC 连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-101">Represents the ODBC connection.</span></span></summary>
    <remarks><para><span data-ttu-id="deac6-102">ODBC 连接可存储在 Excel 工作簿中。</span><span class="sxs-lookup"><span data-stu-id="deac6-102">An ODBC connection can be stored in an Excel workbook.</span></span>  <span data-ttu-id="deac6-103">当 Micrososft Excel 打开工作簿时，Excel 会创建一个称为对象的 ODBC 连接的内存 <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> 副本。</span><span class="sxs-lookup"><span data-stu-id="deac6-103">When Micrososft Excel opens the workbook, Excel creates an in-memory copy of the ODBC connection known as the <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> object.</span></span></para>
      <para><span data-ttu-id="deac6-104">对象包含与连接有关的信息，例如要连接到的服务器的名称以及要打开在服务器上 <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> 的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="deac6-104">An <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> object contains information related to the connection, such as the  name of the server to connect to and the name of the objects to be opened on that server.</span></span>  <span data-ttu-id="deac6-105">或者，该对象还可以包括身份验证凭据信息，或要传递给服务器并执行的命令 (例如，由 SQL Server) 执行的 <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="deac6-105">Optionally, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> object may also include authentication credential information, or a command that is to be passed to the server and executed (for example, a SELECT statement to be executed by SQL Server).</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AlwaysUseConnectionFile">
      <MemberSignature Language="C#" Value="public bool AlwaysUseConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.AlwaysUseConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseConnectionFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseConnectionFile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-106">如果连接文件始终用于建立与数据源的连接，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-106"><b>True</b> if the connection file is always used to establish connection to the data source.</span></span> <span data-ttu-id="deac6-107">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-107">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-108"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-108"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-109">当此属性为 <b>True</b> 时，连接文件将用于建立与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-109">When this property is <b>True</b>, the connection file will be used to establish the connection to the data source.</span></span>  <span data-ttu-id="deac6-110">如果在工作簿中嵌入的连接不同于外部连接文件，则忽略嵌入的连接，且外部连接文件将是唯一考虑的版本。</span><span class="sxs-lookup"><span data-stu-id="deac6-110">If the connection embedded within the workbook is different from the external connection file, the embedded connection will be ignored and the external connection file will be the only version considered.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-111">如果不与对象限定符一起使用，则此属性返回一个对象，该对象Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="deac6-111">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="deac6-112">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="deac6-112">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="deac6-113">只读。</span><span class="sxs-lookup"><span data-stu-id="deac6-113">Read-only.</span></span></summary>
        <value><span data-ttu-id="deac6-114"><b>应用程序</b> (请参阅上面的) </span><span class="sxs-lookup"><span data-stu-id="deac6-114"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="deac6-115">您可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="deac6-115">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundQuery">
      <MemberSignature Language="C#" Value="public bool BackgroundQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.BackgroundQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundQuery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundQuery { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-116">如果 ODBC 连接的查询是异步执行（在后台执行）的，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-116"><b>True</b> if queries for the ODBC connection are performed asynchronously (in the background).</span></span> <span data-ttu-id="deac6-117">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-117">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-118"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-118"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRefresh">
      <MemberSignature Language="C#" Value="public void CancelRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelRefresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ODBCConnection.CancelRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRefresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deac6-119">对指定的 ODBC 连接取消正在进行的所有刷新操作。</span><span class="sxs-lookup"><span data-stu-id="deac6-119">Cancels all refresh operations in progress for the specified ODBC connection.</span></span></summary>
        <remarks><para><span data-ttu-id="deac6-120">使用 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Refreshing" /> 该属性可确定刷新操作当前是否正在进行。</span><span class="sxs-lookup"><span data-stu-id="deac6-120">Use the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Refreshing" /> property to determine whether a refresh operation is currently in progress.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public object CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-121">返回或设置指定数据源的命令字符串。</span><span class="sxs-lookup"><span data-stu-id="deac6-121">Returns or sets the command string for the specified data source.</span></span> <span data-ttu-id="deac6-122">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-122">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-123"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="deac6-123"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-124">您应该使用属性而不是 SQL 属性，现在主要是为了与 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> 早期版本的 Microsoft Excel 兼容而存在。 <b></b></span><span class="sxs-lookup"><span data-stu-id="deac6-124">You should use the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> property instead of the <b>SQL</b> property, which now exists primarily for compatibility with earlier versions of Microsoft Excel.</span></span> <span data-ttu-id="deac6-125">如果同时使用这两个属性 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> ，则属性值优先。</span><span class="sxs-lookup"><span data-stu-id="deac6-125">If you use both properties, the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> property's value takes precedence.</span></span></para>
          <para><span data-ttu-id="deac6-126">该属性 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandType" /> 描述属性的值 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-126">The <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandType" /> property describes the value of the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCmdType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCmdType CommandType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As XlCmdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCmdType CommandType { Microsoft::Office::Interop::Excel::XlCmdType get(); void set(Microsoft::Office::Interop::Excel::XlCmdType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCmdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-127">返回或设置常量 <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> 之一。</span><span class="sxs-lookup"><span data-stu-id="deac6-127">Returns or sets one of the <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> constants.</span></span> <span data-ttu-id="deac6-128">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-128">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /></value>
        <remarks><para><span data-ttu-id="deac6-129">返回或设置的常量描述属性的值 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-129">The constant that is returned or set describes the value of the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.CommandText" /> property.</span></span> <span data-ttu-id="deac6-130">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql" />。</span><span class="sxs-lookup"><span data-stu-id="deac6-130">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql" />.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-131">返回或设置一个包含 ODBC 设置的字符串，这些设置使 Microsoft Excel 可以连接 ODBC 数据源。</span><span class="sxs-lookup"><span data-stu-id="deac6-131">Returns or sets a string that contains ODBC settings that enable Microsoft Excel to connect to an ODBC data source.</span></span> <span data-ttu-id="deac6-132">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-132">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-133"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="deac6-133"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-134">设置 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> 该属性不会立即启动与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-134">Setting the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> property does not immediately initiate the connection to the data source.</span></span> <span data-ttu-id="deac6-135">必须使用该方法 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 建立连接并检索数据。</span><span class="sxs-lookup"><span data-stu-id="deac6-135">You must use the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method to make the connection and retrieve the data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-136">返回枚举中的 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 一个常量，该常量指示创建此对象时的应用程序。</span><span class="sxs-lookup"><span data-stu-id="deac6-136">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="deac6-137">只读。</span><span class="sxs-lookup"><span data-stu-id="deac6-137">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="deac6-138">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="deac6-138">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="deac6-139">该属性设计为在 Microsoft Excel for the Macintosh 中使用，其中每个应用程序都有 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Creator" /> 一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="deac6-139">The <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="deac6-140">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="deac6-140">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRefresh">
      <MemberSignature Language="C#" Value="public bool EnableRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.EnableRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-141">如果用户可刷新连接，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-141"><b>True</b> if the connection can be refreshed by the user.</span></span> <span data-ttu-id="deac6-142">默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-142">The default value is <b>True</b>.</span></span> <span data-ttu-id="deac6-143">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-143">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-144"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-144"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-145">如果 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshOnFileOpen" /> 该属性设置为 False， <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.EnableRefresh" /> 则忽略 <b>该属性</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-145">The <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshOnFileOpen" /> property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.EnableRefresh" /> property is set to <b>False</b>.</span></span> <span data-ttu-id="deac6-146">对于 OLAP 数据源，如果将此属性设置为 <b>False</b>，则会禁用更新。</span><span class="sxs-lookup"><span data-stu-id="deac6-146">For OLAP data sources, setting this property to <b>False</b> disables updates.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-147">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="deac6-147">Returns the parent object for the specified object.</span></span> <span data-ttu-id="deac6-148">只读。</span><span class="sxs-lookup"><span data-stu-id="deac6-148">Read-only.</span></span></summary>
        <value><span data-ttu-id="deac6-149"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="deac6-149"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deac6-150">刷新 ODBC 连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-150">Refreshes an ODBC connection.</span></span></summary>
        <remarks><para><span data-ttu-id="deac6-151">与 ODBC 数据源建立连接时，Microsoft Excel 使用属性指定的连接 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="deac6-151">When making the connection to the ODBC data source, Microsoft Excel uses the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> property.</span></span> <span data-ttu-id="deac6-152">如果指定的连接字符串缺少必需的值，将显示对话框，提示用户提供必需的信息。</span><span class="sxs-lookup"><span data-stu-id="deac6-152">If the specified connection string is missing required values, dialog boxes will be displayed to prompt the user for the required information.</span></span> <span data-ttu-id="deac6-153">如果该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 为 <b>False，</b>则不显示对话框，并且该方法失败，但 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 连接信息不足异常。</span><span class="sxs-lookup"><span data-stu-id="deac6-153">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is <b>False</b>, dialog boxes are not displayed and the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method fails with the Insufficient Connection Information exception.</span></span></para>
          <para><span data-ttu-id="deac6-154">Microsoft Excel 成功连接后，它将存储已完成的连接字符串，以便在同一编辑会话期间，不会显示对该方法的后续调用 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 的提示。</span><span class="sxs-lookup"><span data-stu-id="deac6-154">After Microsoft Excel makes a successful connection, it stores the completed connection string so that prompts will not be displayed for subsequent calls to the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method during the same editing session.</span></span> <span data-ttu-id="deac6-155">您可以通过检查属性的值来获取已完成的连接 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="deac6-155">You can obtain the completed connection string by examining the value of the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> property.</span></span></para>
          <para><span data-ttu-id="deac6-156">完成数据库连接后，将检查 SQL 查询的有效性。</span><span class="sxs-lookup"><span data-stu-id="deac6-156">After the database connection is made, the SQL query is validated.</span></span> <span data-ttu-id="deac6-157">如果查询被无效，该方法将失败 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> ，SQL语法错误异常。</span><span class="sxs-lookup"><span data-stu-id="deac6-157">If the query is not valid, the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method fails with the SQL Syntax Error exception.</span></span></para>
          <para><span data-ttu-id="deac6-158">如果查询需要参数，则必须在调用该方法之前使用参数 <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> 绑定信息初始化 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="deac6-158">If the query requires parameters, the <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection must be initialized with parameter binding information before the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method is called.</span></span> <span data-ttu-id="deac6-159">如果绑定的参数不足，该方法将失败 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> ，出现"参数错误"异常。</span><span class="sxs-lookup"><span data-stu-id="deac6-159">If not enough parameters have been bound, the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method fails with the Parameter Error exception.</span></span> <span data-ttu-id="deac6-160">如果将参数设置为提示输入其值，则无论该属性的设置如何，都会向用户显示 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 对话框。</span><span class="sxs-lookup"><span data-stu-id="deac6-160">If parameters are set to prompt for their values, dialog boxes are displayed to the user regardless of the setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property.</span></span> <span data-ttu-id="deac6-161">如果用户取消参数对话框，该方法 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 将停止并返回 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-161">If the user cancels a parameter dialog box, the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method halts and returns <b>False</b>.</span></span> <span data-ttu-id="deac6-162">如果额外参数与集合绑定，则 <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> 忽略这些额外的参数。</span><span class="sxs-lookup"><span data-stu-id="deac6-162">If extra parameters  are bound with the <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection, these extra parameters are ignored.</span></span></para>
          <para><span data-ttu-id="deac6-163">如果查询成功完成或启动，该方法将返回 True;如果用户取消连接或参数对话框，则返回 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> <b>False。</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="deac6-163">The <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method returns <b>True</b> if the query is successfully completed or started; it returns <b>False</b> if the user cancels a connection or parameter dialog box.</span></span></para>
          <para><span data-ttu-id="deac6-164">若要了解提取的行数是否超过了工作表上的可用行数，请检查 <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" /> 该属性。</span><span class="sxs-lookup"><span data-stu-id="deac6-164">To see whether the number of fetched rows exceeded the number of available rows on the worksheet, examine the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" /> property.</span></span> <span data-ttu-id="deac6-165">每次调用该方法时，都会 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 初始化此属性。</span><span class="sxs-lookup"><span data-stu-id="deac6-165">This property is initialized every time the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDate">
      <MemberSignature Language="C#" Value="public DateTime RefreshDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime RefreshDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime RefreshDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-166">返回上次刷新 ODBC 连接的日期。</span><span class="sxs-lookup"><span data-stu-id="deac6-166">Returns the date on which the ODBC connection was last refreshed.</span></span> <span data-ttu-id="deac6-167">只读的 <b>DateTime</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-167">Read-only <b>DateTime</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-168"><b>DateTime</b></span><span class="sxs-lookup"><span data-stu-id="deac6-168"><b>DateTime</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-169">对于 OLAP 数据源，在每次查询后都会更新此属性。</span><span class="sxs-lookup"><span data-stu-id="deac6-169">For OLAP data sources, this property is updated after each query.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Refreshing">
      <MemberSignature Language="C#" Value="public bool Refreshing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Refreshing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.Refreshing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Refreshing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Refreshing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-170">如果正在进行指定 ODBC 连接的后台 ODBC 查询，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-170"><b>True</b> if a background ODBC query is in progress for the specified ODBC connection.</span></span> <span data-ttu-id="deac6-171">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-171">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-172"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-172"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-173">使用此方法 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.CancelRefresh" /> 取消后台查询。</span><span class="sxs-lookup"><span data-stu-id="deac6-173">Use the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.CancelRefresh" /> method to cancel background queries.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshOnFileOpen">
      <MemberSignature Language="C#" Value="public bool RefreshOnFileOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshOnFileOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshOnFileOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshOnFileOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshOnFileOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-174">如果每次打开工作簿都自动更新连接，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-174"><b>True</b> if the connection is automatically updated each time the workbook is opened.</span></span> <span data-ttu-id="deac6-175">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-175">The default value is <b>False</b>.</span></span> <span data-ttu-id="deac6-176">读/写 <b>boolean 类型的值</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-176">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-177"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-177"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-178">使用该方法打开工作簿时，不会自动刷新 <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-178">The connections are not automatically refreshed when you open the workbook by using the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span> <span data-ttu-id="deac6-179">使用 <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> 该方法在工作簿打开后刷新数据。</span><span class="sxs-lookup"><span data-stu-id="deac6-179">Use the <see cref="M:Microsoft.Office.Interop.Excel.ODBCConnection.Refresh" /> method to refresh the data after the workbook is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshPeriod">
      <MemberSignature Language="C#" Value="public int RefreshPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RefreshPeriod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshPeriod As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RefreshPeriod { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-180">返回或设置两次刷新之间的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="deac6-180">Returns or sets the number of minutes between refreshes.</span></span> <span data-ttu-id="deac6-181"><b>Integer</b> 型，可读/写。</span><span class="sxs-lookup"><span data-stu-id="deac6-181">Read/write <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-182"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="deac6-182"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-183">将时间段设置为 0（零）会禁用定时自动刷新，等同于将此属性设置为 <b>Null</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-183">Setting the period to 0 (zero) disables automatic timed refreshes and is equivalent to setting this property to <b>Null</b>.</span></span>

<span data-ttu-id="deac6-184">该属性的值可以是从 0 到 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshPeriod" /> 32767 的整数。</span><span class="sxs-lookup"><span data-stu-id="deac6-184">The value of the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.RefreshPeriod" /> property can be an integer from 0 through 32767.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RobustConnect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.RobustConnect" />
      <MemberSignature Language="VB.NET" Value="Public Property RobustConnect As XlRobustConnect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRobustConnect RobustConnect { Microsoft::Office::Interop::Excel::XlRobustConnect get(); void set(Microsoft::Office::Interop::Excel::XlRobustConnect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRobustConnect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-185">返回或设置 ODBC 连接与其数据源连接的方式。</span><span class="sxs-lookup"><span data-stu-id="deac6-185">Returns or sets how ODBC connection connects to its data source.</span></span> <span data-ttu-id="deac6-186">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" /> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-186">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" /></value>
        <remarks><para><span data-ttu-id="deac6-187">如果使用可靠的连接，当 Microsoft Excel 无法使用工作簿连接信息建立连接时，Excel 将检查工作簿连接是否具有外部连接文件的路径。</span><span class="sxs-lookup"><span data-stu-id="deac6-187">If you use robust connectivity, when Microsoft Excel is unable to establish a connection using the workbook connection information,   Excel will check if the workbook connection has a path to an external connection file.</span></span>  <span data-ttu-id="deac6-188">如果有，Excel 将打开外部连接文件并尝试使用外部连接文件中包含的信息进行连接。</span><span class="sxs-lookup"><span data-stu-id="deac6-188">If it does, Excel will open the external connection file and try to connect using the information contained in the external connection file.</span></span>  <span data-ttu-id="deac6-189">如果在使用外部连接文件之后能够建立连接，则 Excel 将更新工作簿的连接对象。</span><span class="sxs-lookup"><span data-stu-id="deac6-189">If a connection can be established after using the external connection file, Excel will then update the workbook's connection object.</span></span>  </para>
          <para><span data-ttu-id="deac6-190">在信息技术部门在一个中央位置维护和更新连接的情况下，这可以提供可靠的连接，每当上一版本的连接（缓存在工作簿中）失败时，允许用户的工作簿自动获取那些更新。</span><span class="sxs-lookup"><span data-stu-id="deac6-190">This provides robust connectivity in scenarios where an Information Technology Department maintains and updates connections in a central place, permitting a user's workbook to automatically fetch those updates whenever the previous version of the connection (cached within the workbook) fails.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsODC">
      <MemberSignature Language="C#" Value="public void SaveAsODC (string ODCFileName, object Description, object Keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsODC([in]string ODCFileName, [in]object Description, [in]object Keywords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ODBCConnection.SaveAsODC(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsODC (ODCFileName As String, Optional Description As Object, Optional Keywords As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2082)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ODCFileName" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="Keywords" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ODCFileName"><span data-ttu-id="deac6-191">保存文件的位置。</span><span class="sxs-lookup"><span data-stu-id="deac6-191">Location to save the file.</span></span></param>
        <param name="Description"><span data-ttu-id="deac6-192">将保存在文件中的说明。</span><span class="sxs-lookup"><span data-stu-id="deac6-192">Description that will be saved in the file.</span></span></param>
        <param name="Keywords"><span data-ttu-id="deac6-193">可用于搜索该文件的以空格分隔的关键字。</span><span class="sxs-lookup"><span data-stu-id="deac6-193">Space-separated keywords that can be used to search for this file.</span></span></param>
        <summary><span data-ttu-id="deac6-194">将 ODBC 连接保存为一个 Microsoft Office 数据连接文件。</span><span class="sxs-lookup"><span data-stu-id="deac6-194">Saves the ODBC connection as a Microsoft Office Data Connection file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public bool SavePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SavePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.SavePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property SavePassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SavePassword { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-195">如果将 ODBC 连接字符串中的密码信息保存在连接字符串中，则为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-195"><b>True</b> if password information in an ODBC connection string is saved in the connection string.</span></span> <span data-ttu-id="deac6-196">如果删除密码，则为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-196"><b>False</b> if the password is removed.</span></span> <span data-ttu-id="deac6-197">读/写 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-197">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-198"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="deac6-198"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-199">此属性由数据透视表和查询表在 ODBC 和 OLE DB 查询中使用。</span><span class="sxs-lookup"><span data-stu-id="deac6-199">This property is used in both ODBC and OLE DB queries, and by both PivotTables and QueryTables.</span></span>
</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCredentialsMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.ServerCredentialsMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCredentialsMethod As XlCredentialsMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCredentialsMethod ServerCredentialsMethod { Microsoft::Office::Interop::Excel::XlCredentialsMethod get(); void set(Microsoft::Office::Interop::Excel::XlCredentialsMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCredentialsMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-200">返回或设置应该用于服务器验证的凭据的类型。</span><span class="sxs-lookup"><span data-stu-id="deac6-200">Returns or sets the type of credentials that should be used for server authentication.</span></span> <span data-ttu-id="deac6-201">读/写 <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-201">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" />.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerSSOApplicationID">
      <MemberSignature Language="C#" Value="public string ServerSSOApplicationID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerSSOApplicationID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.ServerSSOApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerSSOApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerSSOApplicationID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-202">返回或设置单一登录 (SSO) 应用程序标识符，该标识符用于在 SSO 数据库中查找凭据。</span><span class="sxs-lookup"><span data-stu-id="deac6-202">Returns or sets a single sign-on application (SSO) identifier that is used to do a lookup in the SSO database for credentials.</span></span> <span data-ttu-id="deac6-203">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="deac6-203">Read/write <b>String</b>.</span></span></summary>
        <value><span data-ttu-id="deac6-204"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="deac6-204"><b>String</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceConnectionFile">
      <MemberSignature Language="C#" Value="public string SourceConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceConnectionFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceConnectionFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-205">返回或设置一个 <b>String</b> 类型的值，该值指示用于创建连接的 Microsoft Office 数据连接文件或类似文件。</span><span class="sxs-lookup"><span data-stu-id="deac6-205">Returns or sets a <b>String</b> indicating the Microsoft Office Data Connection file or similar file that was used to create the connection.</span></span> <span data-ttu-id="deac6-206">读/写。</span><span class="sxs-lookup"><span data-stu-id="deac6-206">Read/write.</span></span></summary>
        <value><span data-ttu-id="deac6-207"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="deac6-207"><b>String</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceData">
      <MemberSignature Language="C#" Value="public object SourceData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SourceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceData" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SourceData { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-208">返回 ODBC 连接的数据源，如表中所示。</span><span class="sxs-lookup"><span data-stu-id="deac6-208">Returns the data source for the ODBC connection, as shown in the table.</span></span> <span data-ttu-id="deac6-209">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="deac6-209">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="deac6-210">Microsoft Excel 列表或数据库</span><span class="sxs-lookup"><span data-stu-id="deac6-210">Microsoft Excel list or database</span></span></term>
              <description><span data-ttu-id="deac6-211">文本形式的单元格引用。</span><span class="sxs-lookup"><span data-stu-id="deac6-211">The cell reference, as text.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="deac6-212">外部数据源</span><span class="sxs-lookup"><span data-stu-id="deac6-212">External data source</span></span></term>
              <description><span data-ttu-id="deac6-p136">数组。每行包含一个 SQL 连接字符串，该行的剩余元素作为查询字符串，以 255 个字符为单位分段。</span><span class="sxs-lookup"><span data-stu-id="deac6-p136">An array. Each row consists of an SQL connection string with the remaining elements as the query string, broken down into 255-character segments.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="deac6-215">多个合并区域</span><span class="sxs-lookup"><span data-stu-id="deac6-215">Multiple consolidation ranges</span></span></term>
              <description><span data-ttu-id="deac6-p137">二维数组。每行由一个引用及与其相关联的页字段项组成。</span><span class="sxs-lookup"><span data-stu-id="deac6-p137">A two-dimensional array. Each row consists of a reference and its associated page field items.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="deac6-218">其他数据透视表</span><span class="sxs-lookup"><span data-stu-id="deac6-218">Another PivotTable report</span></span></term>
              <description><span data-ttu-id="deac6-219">以上三种信息之一。</span><span class="sxs-lookup"><span data-stu-id="deac6-219">One of the above three kinds of information.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="deac6-220">该属性不可用于 OLE DB 数据源。</span><span class="sxs-lookup"><span data-stu-id="deac6-220">This property is not available for OLE DB data sources.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceDataFile">
      <MemberSignature Language="C#" Value="public string SourceDataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceDataFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceDataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceDataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deac6-221">返回或设置一个 <b>String</b> 类型的值，该值指示 ODBC 连接的源数据文件。</span><span class="sxs-lookup"><span data-stu-id="deac6-221">Returns or sets a <b>String</b> indicating the source data file for an ODBC connection.</span></span>  <span data-ttu-id="deac6-222">读/写。</span><span class="sxs-lookup"><span data-stu-id="deac6-222">Read/write.</span></span></summary>
        <value><span data-ttu-id="deac6-223"><b>字符串</b></span><span class="sxs-lookup"><span data-stu-id="deac6-223"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="deac6-224">例如，对于基于文件的数据源 (，Access) <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile" /> 属性包含源数据文件的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="deac6-224">For file-based data sources (for example, Access) the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile" /> property contains a fully qualified path to the source data file.</span></span> <span data-ttu-id="deac6-225">对于基于服务器的数据源（如 SQL Server），该属性为 null。</span><span class="sxs-lookup"><span data-stu-id="deac6-225">It is null for server-based data sources (for example, SQL Server).</span></span> <span data-ttu-id="deac6-226">如果 <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile" /> 以编程方式更改属性， <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> 该属性将设置为 null。</span><span class="sxs-lookup"><span data-stu-id="deac6-226">The <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.SourceDataFile" /> property is set to null if the <see cref="P:Microsoft.Office.Interop.Excel.ODBCConnection.Connection" /> property is changed programmatically.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>