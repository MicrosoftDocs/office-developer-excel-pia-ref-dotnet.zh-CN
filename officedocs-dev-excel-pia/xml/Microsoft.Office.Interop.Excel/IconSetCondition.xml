<Type Name="IconSetCondition" FullName="Microsoft.Office.Interop.Excel.IconSetCondition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60529c90129fadd3409df7f77d68bfab6f56e963" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20580722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IconSetCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconSetCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconSetCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconSetCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconSetCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024497-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5888e-101">代表图标集条件格式规则。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5888e-101">Represents an icon set conditional formatting rule.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="5888e-102">所有条件格式对象包含在<see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" />集合对象，该元素是子对象的<see cref="T:Microsoft.Office.Interop.Excel.Range" />集合。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-102">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span>
        </span>
        <span data-ttu-id="5888e-103">您可以创建使用任何一个格式规则的图标集<see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法或<see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /><b>FormatConditions</b>集合的方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-103">You can create an icon set formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> method of the <b>FormatConditions</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="5888e-104">每个图标集包含三、 四个或五个图标。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-104">Each icon set contains three, four, or five icons.</span>
        </span>
        <span data-ttu-id="5888e-105">您使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />属性<see cref="T:Microsoft.Office.Interop.Excel._Workbook" />对象返回<see cref="T:Microsoft.Office.Interop.Excel.IconSets" />对象指定一个内置图标集。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-105">You use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> object to specify one of the built-in icon sets.</span>
        </span>
        <span data-ttu-id="5888e-106">每个图标集中的单个图标然后由的成员分配给范围的值的子集<see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />对象。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-106">Each individual icon in the icon set is then assigned to a subset of the values of the range by the members of the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> obect.</span>
        </span>
        <span data-ttu-id="5888e-107">此对象还指定阈值的类型。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5888e-107">The type of threshold is also specified by this object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-108">当使用对象识别符，此属性返回<see cref="T:Microsoft.Office.Interop.Excel._Application" />对象代表 Microsoft Office Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-108">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span>
          </span>
          <span data-ttu-id="5888e-109">如果使用对象识别符，此属性返回值，该值代表指定对象的创建者<b>Application</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-109">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span>
          </span>
          <span data-ttu-id="5888e-110">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-110">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-111">
            <b>应用程序</b>（请参见上文）</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-111">
              <b>Application</b> (see above)</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-112">您可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-112">You can use this property with an OLE Automation object to return the application of that object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-113">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />指定格式规则所应用于的单元格区域的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Range" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-114">返回一个 32 位整数等效于<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />值，该值指示在其中创建此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-114">Returns a 32-bit integer equivalent to an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> value that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="5888e-115">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-115">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-p105">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。<b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。例如，Microsoft Excel 的创建者代码为 XCEL。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-p105">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.  The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5888e-119">删除指定的条件格式规则对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-119">Deletes the specified conditional formatting rule object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-120">返回或设置一个代表公式（该公式确定将对图标集应用的值）的 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-120">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-121">
            <b>字符串</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-121">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-p106">此属性用于限制将显示条件格式的值的范围。一种典型的情形是您具有一个包含正值和负值的数字范围。您可能需要为此数字范围创建多个条件格式，一个用于正值，另一个用于负值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-p106">This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconCriteria">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconCriteria IconCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconCriteria IconCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconCriteria As IconCriteria" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconCriteria ^ IconCriteria { Microsoft::Office::Interop::Excel::IconCriteria ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconCriteria</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-125">返回<see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />集合，代表一组条件的图标集条件格式规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-125">Returns an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, which represents the set of criteria for an icon set conditional formatting rule.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-126">后<see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />集合，您可以使用<see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" />属性返回的集合的<see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" />对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-126">After you have the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />collection, you can use the <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> property of the collection to return an <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object.</span>
            </span>
            <span data-ttu-id="5888e-127">
              <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" />对象代表一个条件的图标集。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-127">The <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object represents a single criterion of an icon set.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="public object IconSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IconSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" />
      <MemberSignature Language="VB.NET" Value="Public Property IconSet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IconSet { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-128">返回或设置<see cref="T:Microsoft.Office.Interop.Excel.IconSets" />指定的图标集条件格式中使用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-128">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, which specifies the icon set used in the conditional format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-129">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-129">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-130">您可以分配的图标集使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />属性<see cref="T:Microsoft.Office.Interop.Excel._Workbook" />对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-130">You can assign the icon set by using the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="5888e-131">此格式规则将应用于的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-131">The range to which this formatting rule will be applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5888e-132">设置此格式规则所应用于的单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-132">Sets the cell range to which this formatting rule applies.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="5888e-133">范围必须以 A1 引用样式和完全包含在工作表的父级的<see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" />集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-133">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span>
            </span>
            <span data-ttu-id="5888e-134">它可以包括区域运算符 （冒号）、 交点运算符 （空格） 或 union 运算符 （逗号分隔）。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-134">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
            </span>
            <span data-ttu-id="5888e-135">也可以使用美元符号，但会被忽略。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-135">Dollar signs can also be used but they are ignored.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="5888e-136">您也可以在区域的任意部分中使用局部定义名称，但该名称必须使用宏语言。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-136">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-p110">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-p110">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-139">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-139">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentileValues">
      <MemberSignature Language="C#" Value="public bool PercentileValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PercentileValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PercentileValues" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentileValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PercentileValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-140">返回或设置一个 <b>Boolean</b> 值，该值指明是否使用百分点确定图标集条件格式的阈值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-140">Returns or sets a <b>Boolean</b> value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-141">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-141">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-p111">如果未将每个阈值设置为百分点，则此属性将返回 <b>False</b>。如果将此属性设置为 <b>True</b>，则会将每个阈值类型设置为百分点。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-p111">This property will return <b>False</b> if not every threshold is set to percentile. Setting this property to <b>True</b> will set every threshold type to percentile.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-p112">返回或设置条件格式规则的优先级值。当工作表中存在多个条件格式规则时，优先级确定求值的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-p112">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-146">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-146">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-p113">设置优先级时，值必须为介于 1 和工作表上条件格式规则总数之间的正整数。对于工作表上的所有规则，优先级必须为唯一值，因此，如果更改指定条件格式规则的优先级，将可能会导致工作表上其他规则的优先级值移位。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-p113">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-p114">返回一个 <b>Boolean</b> 值，指明是否将条件格式应用于数据透视表图表。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-p114">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-151">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-151">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseOrder">
      <MemberSignature Language="C#" Value="public bool ReverseOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ReverseOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseOrder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-152">返回或设置一个 <b>Boolean</b> 值，该值指示是否保留图标集的图标次序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-152">Returns or sets a <b>Boolean</b> value indicating if the order of icons is reversed for an icon set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-153">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-153">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-p115">默认情况下，可以使用的大多数图标集都将使用较多的图像与较大值关联。例如，“三色交通灯”图标集将绿色圆应用于区域上限值，而将红色圆应用于区域的最低值。如果数据的较低值更有意义，如马拉松时间结果，则可能希望反转这些图标应用于区域的次序，使绿色圆与最低值关联。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-p115">By default, most of the icon sets you can use associate positive images with higher values. For example, the "3 Traffic Lights" icon set applies a green circle to the upper value threshold and a red circle to the lowest values in the range. If your data is such that lower values are more desirable, such as marathon time results, you may want to reverse the order that icons are applied to the range to associate the green circle to the lowest values.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-157">返回或设置的常量之一，<see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />是必需的条件格式应用于数据透视表图表时的枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-157">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-158">默认值是<see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />，其设置范围使用<see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" />属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-158">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5888e-159">将此条件格式规则的优先级值设置为“1”，以便在工作表上的所有其他规则之前计算此规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-159">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="5888e-160">如果您有多个工作表中的条件格式规则如果规则以前没有设置为"1"的优先级，此方法将导致加一工作表上的所有其他现有规则的优先级。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-160">When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5888e-161">为此条件格式规则设置求值顺序，以便在工作表上的所有其他规则之后计算此规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-161">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="5888e-162">优先级的实际值将等于的工作表上的条件格式规则的总数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-162">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span>
            </span>
            <span data-ttu-id="5888e-163">如果您在工作表中有多个条件格式规则，此方法将导致的优先级值大于加一该规则的规则的优先级。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-163">When you have multiple conditional formatting rules in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowIconOnly">
      <MemberSignature Language="C#" Value="public bool ShowIconOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIconOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ShowIconOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIconOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIconOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-164">返回或设置一个 <b>Boolean</b> 值，该值指示是否仅显示图标集条件格式的图标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-164">Returns or sets a <b>Boolean</b> value indicating if only the icon is displayed for an icon set conditional format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-165">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-165">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-166">此属性的默认值为 <b>False</b> 。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-166">The default value for this property is <b>False</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-167">返回或设置一个 <b>Boolean</b> 值，该值确定在当前规则的计算结果为 <b>True</b> 时是否应计算单元格上的其他格式规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-167">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-168">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-168">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-169">为了支持向后兼容性，此属性的默认值为 <b>True</b>，而这与在用户界面中创建的格式规则的行为相反。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-169">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5888e-170">返回的常量之一<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />枚举，指定条件格式的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-170">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span>
          </span>
          <span data-ttu-id="5888e-171">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-171">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5888e-172">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5888e-172">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="5888e-173">此属性将始终返回值 6，它等效于<see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5888e-173">This property will always return a value of 6, which is equivalent to <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>