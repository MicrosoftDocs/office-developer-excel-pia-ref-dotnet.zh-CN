<Type Name="WorkbookConnection" FullName="Microsoft.Office.Interop.Excel.WorkbookConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d36e4e18681b0c11f20840120b3306f1349f22ec" /><Meta Name="ms.sourcegitcommit" Value="b9fb06b594d56da0590a163c774e236b6362c059" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53147291" /></Metadata><TypeSignature Language="C#" Value="public interface WorkbookConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract WorkbookConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface WorkbookConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class WorkbookConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024485-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="24dae-101">连接是从外部数据源（而不是工作簿外部数据源）获取1st_Excel12的信息。</span><span class="sxs-lookup"><span data-stu-id="24dae-101">A connection is a set of information needed to obtain data from an external data source other than an 1st_Excel12 workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="24dae-102">连接可存储在 Excel 工作簿中。</span><span class="sxs-lookup"><span data-stu-id="24dae-102">Connections can be stored within an Excel workbook.</span></span>  <span data-ttu-id="24dae-103">打开工作簿时，Excel创建一个称为 connection 对象的连接的内存副本。</span><span class="sxs-lookup"><span data-stu-id="24dae-103">When the workbook is opened, Excel creates an in-memory copy of the connection which is referred to as the connection object.</span></span>  <span data-ttu-id="24dae-104">连接对象包含服务器名称和服务器上打开的对象的名称等信息。</span><span class="sxs-lookup"><span data-stu-id="24dae-104">A connection object contains information such as the name of the server and the name of the object to be opened on that server.</span></span>  <span data-ttu-id="24dae-105">连接对象也可以选择包含身份验证凭据和/或一个命令，该命令可传递给服务器执行（例如：由 SQL Server 执行的 SELECT 语句）。</span><span class="sxs-lookup"><span data-stu-id="24dae-105">Optionally, the connection object may also include authentication credentials and/or a command that is to be passed to the server and executed (example: a SELECT statement to be executed by SQL Server.)</span></span>  </para>
      <para><span data-ttu-id="24dae-106">
        <b>注意</b>：连接的确切形式取决于用于检索数据的机制 - ODBC 连接、OLEDB 连接和 Web 查询将包含不同的信息。</span><span class="sxs-lookup"><span data-stu-id="24dae-106">
        <b>Note</b>: The exact form of the connection depends on the mechanism that is being used to retrieve data – ODBC connections, OLEDB connections, and Web Queries will contain different information.</span></span></para>
      <para><span data-ttu-id="24dae-p102">连接还可以存储在单独的连接文件中。Excel 工作簿中的大多数连接都包含一个指向外部连接文件的指针。连接文件的扩展名清楚地表明这类文件为连接文件（*.ODC、*.IQY 等），可在用户的本地计算机、其他熟知或受信任的位置（如 WSS，即数据连接库）或其他公司服务器上找到连接文件。通过连接文件，同一组织中的多个用户可重复使用连接。通过更改单个连接文件，网络管理员可以更改整个组织连接到后端数据源的方式。连接外部数据源时，连接文件不是必需使用的。</span><span class="sxs-lookup"><span data-stu-id="24dae-p102">A connection may also be stored in a separate connection file.  Most  connections in an Excel workbook include a pointer to an external connection file.  Connection files have extensions that clearly label them as connection files (\*.ODC, \*.IQY, etc.) and may be located on the user's local machine or in other well known or trusted locations such as WSS (Data Connection Library), or other corporate servers.  Connection files enable multiple users within the same organization to re-use connections.  Network administrators are able to change the way the entire organization connects to a back-end data source by changing a single connection file.  A connection file is not always required when connecting to an external data source.</span></span></para>
      <para><span data-ttu-id="24dae-p103">连接名称是字符串，唯一标识使用这些连接的工作簿中的连接。连接还有一些属性不具有唯一性。只要 Excel 中携带参数的公式是一个连接，则以直接方式（字符串形式）或间接方式（引用包含字符串形式的连接名称的单元格）引用连接的名称即可。</span><span class="sxs-lookup"><span data-stu-id="24dae-p103">Connection names are strings that uniquely identify connections within the workbook in which they are used.     There are other properties of a connection that are not unique.  Whenever a formula in Excel takes an argument that is a connection, it will be sufficient to refer to the name of that connection, either directly (as a string) or indirectly (by referring to a cell that contains the connection name as a string.)</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-116">如果不与对象限定符一起使用，则此属性返回 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 一个代表应用程序Microsoft Office Excel对象。</span><span class="sxs-lookup"><span data-stu-id="24dae-116">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="24dae-117">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="24dae-117">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="24dae-118">只读。</span><span class="sxs-lookup"><span data-stu-id="24dae-118">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="24dae-119">您可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="24dae-119">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-120">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="24dae-120">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="24dae-121">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="24dae-121">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="24dae-p106">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。<b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="24dae-p106">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.  The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFeedConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataFeedConnection DataFeedConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataFeedConnection DataFeedConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.DataFeedConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFeedConnection As DataFeedConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataFeedConnection ^ DataFeedConnection { Microsoft::Office::Interop::Excel::DataFeedConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataFeedConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-125">返回一 <b>个 DataFeedConnection</b> 对象，该对象包含连接到数据源所需的数据和功能。</span><span class="sxs-lookup"><span data-stu-id="24dae-125">Returns a <b>DataFeedConnection</b> object that contains the data and functionality needed to connect to data feeds.</span></span> <span data-ttu-id="24dae-126">只读</span><span class="sxs-lookup"><span data-stu-id="24dae-126">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24dae-127">删除工作簿连接。</span><span class="sxs-lookup"><span data-stu-id="24dae-127">Deletes a workbook connection.</span></span></summary>
        <remarks><para><span data-ttu-id="24dae-p108">使用此方法可以删除一个外部数据连接。此方法不适用于与其他工作簿之间的链接。</span><span class="sxs-lookup"><span data-stu-id="24dae-p108">Use this method to delete an external data connection. This method does not apply to links to other workbooks.</span></span> </para>
          <para><span data-ttu-id="24dae-130">删除连接将不会删除正在使用该连接的任何对象。</span><span class="sxs-lookup"><span data-stu-id="24dae-130">Deleting a connection will not delete or remove any objects that were using that connection.</span></span>

<span data-ttu-id="24dae-131">删除连接将不会导致从文件系统中删除任何连接文件。</span><span class="sxs-lookup"><span data-stu-id="24dae-131">Deleting a connection will not cause any of the connection files to be deleted from the file system.</span></span>  <span data-ttu-id="24dae-132">如果编辑任何这些对象以使用另一个连接，则一切都将重新开始工作。</span><span class="sxs-lookup"><span data-stu-id="24dae-132">If you edit any of those objects to use another connection, everything will start working again.</span></span></para>
          <para><span data-ttu-id="24dae-133">那些使用已删除链接的对象所表现出的行为就好像无法建立连接一样。</span><span class="sxs-lookup"><span data-stu-id="24dae-133">Objects that use a deleted connection behave as if the connection could not be established.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-134">返回或设置对象的简要 <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> 说明。</span><span class="sxs-lookup"><span data-stu-id="24dae-134">Returns or sets a brief description for a <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="24dae-135">读/写 <b>String</b>。</span><span class="sxs-lookup"><span data-stu-id="24dae-135">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="24dae-p111">在“连接属性”对话框中，用户可以编辑连接的名称和/或说明。在该对话框中更改名称和说明只会更改 Excel 连接对象中的相应字段。</span><span class="sxs-lookup"><span data-stu-id="24dae-p111">In the Connection Properties dialog box, the user may edit the name of the connection and/or the description.  Changing the name and description in this dialog box changes those fields only within the Excel connection object.</span></span></para>
          <para><span data-ttu-id="24dae-p112">说明的最大长度为 255 个字符。如果用户指定的连接文件的说明长于 255 个字符，则说明会被截断，以满足 255 个字符的限制。</span><span class="sxs-lookup"><span data-stu-id="24dae-p112">The maximum size of a description is 255 characters.  If the user specifies a description within a connection file that is longer than 255 characters, the description is truncate to fit the 255 character limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InModel">
      <MemberSignature Language="C#" Value="public bool InModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.InModel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InModel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InModel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-140">指定是否已将 <b>WorkbookConnection</b> 对象添加到模型中。</span><span class="sxs-lookup"><span data-stu-id="24dae-140">Specifies whether or not the <b>WorkbookConnection</b> object has been added to the model.</span></span> <span data-ttu-id="24dae-141"><b>Boolean</b> (<b>bool</b> C#) 只读。</span><span class="sxs-lookup"><span data-stu-id="24dae-141"><b>Boolean</b> (<b>bool</b> in C#) Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="24dae-142">对于旧连接，必须为 false。</span><span class="sxs-lookup"><span data-stu-id="24dae-142">Must be false for legacy connections.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ModelConnection ModelConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ModelConnection ModelConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ModelConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelConnection As ModelConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ModelConnection ^ ModelConnection { Microsoft::Office::Interop::Excel::ModelConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ModelConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-143">返回一个对象，该对象包含有关 Excel 2013 中引入的新模型连接类型的信息，以便与集成的数据模型进行交互。</span><span class="sxs-lookup"><span data-stu-id="24dae-143">Returns an object that contains information for the new Model Connection Type introduced in Excel 2013 to interact with the integrated Data Model.</span></span> <span data-ttu-id="24dae-144">只读</span><span class="sxs-lookup"><span data-stu-id="24dae-144">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ModelTables ModelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ModelTables ModelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ModelTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelTables As ModelTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ModelTables ^ ModelTables { Microsoft::Office::Interop::Excel::ModelTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ModelTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-145">返回 <see cref="T:Microsoft.Office.Interop.Excel.ModelTables" /> 与特定连接关联的对象。</span><span class="sxs-lookup"><span data-stu-id="24dae-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ModelTables" /> object associated with the particular connection.</span></span> <span data-ttu-id="24dae-146">只读</span><span class="sxs-lookup"><span data-stu-id="24dae-146">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-p116">返回或设置工作簿连接对象的名称。可读/写 <b>String</b> 类型。</span><span class="sxs-lookup"><span data-stu-id="24dae-p116">Returns or sets the name of the workbook connection object. Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCConnection ODBCConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCConnection ODBCConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ODBCConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCConnection As ODBCConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCConnection ^ ODBCConnection { Microsoft::Office::Interop::Excel::ODBCConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-149">Retuns the ODBC Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span><span class="sxs-lookup"><span data-stu-id="24dae-149">Retuns the ODBC Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="24dae-150">只读 <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /> 。</span><span class="sxs-lookup"><span data-stu-id="24dae-150">Read-only <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBConnection OLEDBConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBConnection OLEDBConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.OLEDBConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBConnection As OLEDBConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBConnection ^ OLEDBConnection { Microsoft::Office::Interop::Excel::OLEDBConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-151">Retuns the OLEDB Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span><span class="sxs-lookup"><span data-stu-id="24dae-151">Retuns the OLEDB Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="24dae-152">只读 <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /> 。</span><span class="sxs-lookup"><span data-stu-id="24dae-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-p119">返回指定对象的父对象。只读。</span><span class="sxs-lookup"><span data-stu-id="24dae-p119">Returns the parent object for the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ranges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Ranges Ranges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Ranges Ranges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Ranges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ranges As Ranges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Ranges ^ Ranges { Microsoft::Office::Interop::Excel::Ranges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Ranges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-155">返回指定对象的对象 <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="24dae-155">Returns the range of object for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="24dae-156">只读 <see cref="T:Microsoft.Office.Interop.Excel.Ranges" /> 。</span><span class="sxs-lookup"><span data-stu-id="24dae-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.Ranges" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24dae-157">刷新工作簿连接。</span><span class="sxs-lookup"><span data-stu-id="24dae-157">Refreshes a workbook connection.</span></span></summary>
        <remarks><para><span data-ttu-id="24dae-158">如果该属性 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 为 <b>False</b>，则不显示对话框 <b>，Refresh</b> 方法将失败，并出现"连接信息不足"异常。</span><span class="sxs-lookup"><span data-stu-id="24dae-158">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is <b>False</b>, dialog boxes are not displayed and the <b>Refresh</b> method fails with the Insufficient Connection Information exception.</span></span></para>
          <para><span data-ttu-id="24dae-p121">刷新连接失败对刷新其他操作没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="24dae-p121">A refresh failure for one connection will not have any impact on refresh operations  for the other connections. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshWithRefreshAll">
      <MemberSignature Language="C#" Value="public bool RefreshWithRefreshAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshWithRefreshAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.RefreshWithRefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshWithRefreshAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshWithRefreshAll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-160">确定是否应在执行全部刷新时刷新连接。</span><span class="sxs-lookup"><span data-stu-id="24dae-160">Determines if the connection should be refreshed when refresh all is executed.</span></span> <span data-ttu-id="24dae-161"><b>Boolean</b> (<b>bool</b> in C#) 。</span><span class="sxs-lookup"><span data-stu-id="24dae-161"><b>Boolean</b> (<b>bool</b> in C#).</span></span> <span data-ttu-id="24dae-162">读/写。</span><span class="sxs-lookup"><span data-stu-id="24dae-162">Read/Write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextConnection TextConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextConnection TextConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.TextConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextConnection As TextConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextConnection ^ TextConnection { Microsoft::Office::Interop::Excel::TextConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-163">返回 <see cref="T:Microsoft.Office.Interop.Excel.TextConnection" /> 一个对象，该对象包含有关对文本文件的查询的信息。</span><span class="sxs-lookup"><span data-stu-id="24dae-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextConnection" /> object that contains the information on a query to a text file.</span></span> <span data-ttu-id="24dae-164">只读。</span><span class="sxs-lookup"><span data-stu-id="24dae-164">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConnectionType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConnectionType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlConnectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConnectionType Type { Microsoft::Office::Interop::Excel::XlConnectionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConnectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-165">返回工作簿连接类型。</span><span class="sxs-lookup"><span data-stu-id="24dae-165">Returns the workbook connection type.</span></span> <span data-ttu-id="24dae-166">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlConnectionType" /> 。</span><span class="sxs-lookup"><span data-stu-id="24dae-166">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlConnectionType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetDataConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetDataConnection WorksheetDataConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetDataConnection WorksheetDataConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.WorksheetDataConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetDataConnection As WorksheetDataConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetDataConnection ^ WorksheetDataConnection { Microsoft::Office::Interop::Excel::WorksheetDataConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetDataConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24dae-167">返回一个对象，该对象包含从 PowerPivot Model 到工作簿数据（如区域、命名区域或表）的连接的信息。</span><span class="sxs-lookup"><span data-stu-id="24dae-167">Returns an object that contains information for a connection from the PowerPivot Model to data within the workbook such as a range, named range, or table.</span></span> <span data-ttu-id="24dae-168">只读。</span><span class="sxs-lookup"><span data-stu-id="24dae-168">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
