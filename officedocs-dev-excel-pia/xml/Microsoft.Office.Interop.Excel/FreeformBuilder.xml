<Type Name="FreeformBuilder" FullName="Microsoft.Office.Interop.Excel.FreeformBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49bbc8d21ea36b32da44ca3a92e3697a77f26497" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20582647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FreeformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FreeformBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface FreeformBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class FreeformBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表任意多边形创建时的几何属性。</summary>
    <remarks>
      <para>使用<see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" />方法，以返回<b>FreeformBuilder</b>对象。 使用<see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />方法将节点添加到 freefrom。 使用<see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />方法可创建<b>FreeformBuilder</b>对象中定义的形状，并将其添加到<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />集合。</para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, object X2, object Y2, object X3, object Y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodes([in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]object X2, [in]object Y2, [in]object X3, [in]object Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNodes (SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Object, Optional Y2 As Object, Optional X3 As Object, Optional Y3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1762)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Object" />
        <Parameter Name="Y2" Type="System.Object" />
        <Parameter Name="X3" Type="System.Object" />
        <Parameter Name="Y3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SegmentType">所需<see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" />。 要添加的线段的类型。<b>MsoSegmentType</b>可以是下列常量之一：<b>msoSegmentLine</b><b>msoSegmentCurve</b></param>
        <param name="EditingType">所需<see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" />。 顶点的编辑属性。<b>MsoEditingType</b>可以是下列常量之一：<b>msoEditingAuto</b><b>msoEditingCorner</b>不能是<b>msoEditingSmooth</b>或<b>msoEditingSymmetric</b>。如果<paramref name="SegmentType" />是<b>msoSegmentLine</b>，<paramref name="EditingType" />必须是<b>msoEditingAuto</b>。</param>
        <param name="X1">
          <b>必选。</b>如果<paramref name="EditingType" />新线段是<b>msoEditingAuto</b>时，此参数可指定文档的左上角到新线段结束点的水平距离 （以磅为单位）。如果<paramref name="EditingType" />的新节点是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新的段的第一个控件点的水平距离 （以磅为单位）。</param>
        <param name="Y1">
          <b>必选。</b>如果<paramref name="EditingType" />新线段是<b>msoEditingAuto</b>时，此参数可指定文档的左上角到新线段结束点的水平距离 （以磅为单位）。如果<paramref name="EditingType" />的新节点是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新的段的第一个控件点的水平距离 （以磅为单位）。</param>
        <param name="X2">可选的<b>对象</b>。如果<paramref name="EditingType" />新线段是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新段的第二个控制点的水平距离 （以磅为单位）。如果<paramref name="EditingType" />的新线段是<b>msoEditingAuto</b>，不指定此参数的值。</param>
        <param name="Y2">可选的<b>对象</b>。如果<paramref name="EditingType" />新线段是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新段的第二个控制点的水平距离 （以磅为单位）。如果<paramref name="EditingType" />的新线段是<b>msoEditingAuto</b>，不指定此参数的值。</param>
        <param name="X3">可选的<b>对象</b>。如果<paramref name="EditingType" />新线段是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新线段结束点的水平距离 （以磅为单位）。如果<paramref name="EditingType" />的新线段是<b>msoEditingAuto</b>，不指定此参数的值。</param>
        <param name="Y3">可选的<b>对象</b>。如果<paramref name="EditingType" />新线段是<b>msoEditingCorner</b>时，此参数可指定文档的左上角到新线段结束点的垂直距离 （以磅为单位）。如果<paramref name="EditingType" />的新线段是<b>msoEditingAuto</b>，不指定此参数的值。</param>
        <summary>将节点添加到任意多边形。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ConvertToShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape ConvertToShape() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToShape () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ ConvertToShape();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1766)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建具有指定的几何特征的形状<see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />对象。 返回<see cref="T:Microsoft.Office.Interop.Excel.Shape" />对象，表示新形状。</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>注释</b>  您必须应用<see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />方法<b>FreeformBuilder</b>对象至少应用一次才能使用<b>ConvertToShape</b>方法。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</para>
          <para>
            <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。 例如，Microsoft Excel 具有 XCEL 的创建者代码。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>