<Type Name="VPageBreak" FullName="Microsoft.Office.Interop.Excel.VPageBreak">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65c80ebf5b3756b2bfa8393565d0d99bd3d8cc23" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009378" /></Metadata><TypeSignature Language="C#" Value="public interface VPageBreak" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract VPageBreak" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.VPageBreak" />
  <TypeSignature Language="VB.NET" Value="Public Interface VPageBreak" />
  <TypeSignature Language="C++ CLI" Value="public interface class VPageBreak" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024402-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1fe1-101">代表一个垂直分页符。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-101">Represents a vertical page break.</span></span></summary>
    <remarks><para><span data-ttu-id="d1fe1-102"><b>VPageBreak</b>对象是集合的一 <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> 个成员。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-102">The <b>VPageBreak</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection.</span></span></para>
      <para><span data-ttu-id="d1fe1-103">使用 <b>VPageBreaks</b> () 返回一个 VPageBreak 对象，其中是分页符的分页 <paramref name="index" /> <paramref name="index" /> <b>符索引</b> 号。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-103">Use <b>VPageBreaks</b>(<paramref name="index" />), where <paramref name="index" /> is the page break index number of the page break, to return a <b>VPageBreak</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-104">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-105">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-105">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d1fe1-106">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-106">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="d1fe1-107"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-107">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="d1fe1-108">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-108">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.VPageBreak.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1fe1-109">删除对象。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-109">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOff">
      <MemberSignature Language="C#" Value="public void DragOff (Microsoft.Office.Interop.Excel.XlDirection Direction, int RegionIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DragOff([in]valuetype Microsoft.Office.Interop.Excel.XlDirection Direction, [in]int32 RegionIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.VPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragOff (Direction As XlDirection, RegionIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragOff(Microsoft::Office::Interop::Excel::XlDirection Direction, int RegionIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
        <Parameter Name="RegionIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction"><span data-ttu-id="d1fe1-110">必需 <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-110">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span> <span data-ttu-id="d1fe1-111">分页符拖动方向。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-111">The direction in which the page break is dragged.</span></span></param>
        <param name="RegionIndex"><span data-ttu-id="d1fe1-112">必需 <b>整数</b>。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-112">Required <b>Integer</b>.</span></span> <span data-ttu-id="d1fe1-113">分页符的打印区域索引（当用户按下鼠标按钮拖动分页符时鼠标指针所在的位置）。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-113">The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break).</span></span> <span data-ttu-id="d1fe1-114">如果打印区域是连续的，则只有一个打印区域。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-114">If the print area is contiguous, there’s only one print region.</span></span> <span data-ttu-id="d1fe1-115">如果打印区域不连续，则存在多个打印区域。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-115">If the print area is noncontiguous, there’s more than one print region.</span></span></param>
        <summary><span data-ttu-id="d1fe1-116">将一个分页符拖出打印区域。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-116">Drags a page break out of the print area.</span></span></summary>
        <remarks><para><span data-ttu-id="d1fe1-117">该方法主要用于宏记录器。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-117">This method exists primarily for the macro recorder.</span></span> <span data-ttu-id="d1fe1-118">可以使用该方法 <see cref="M:Microsoft.Office.Interop.Excel.VPageBreak.Delete" /> 删除分页符。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-118">You can use the <see cref="M:Microsoft.Office.Interop.Excel.VPageBreak.Delete" /> method to delete a page break.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPageBreakExtent Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPageBreakExtent Extent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As XlPageBreakExtent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPageBreakExtent Extent { Microsoft::Office::Interop::Excel::XlPageBreakExtent get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1422)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPageBreakExtent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-119">返回指定分页符的类型：全屏或仅在打印区域内。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-119">Returns the type of the specified page break: full-screen or only within a print area.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d1fe1-120"><b>Extent</b>属性可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent" /> <b>：xlPageBreakFull</b>或<b>xlPageBreakPartial</b>。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-120">The <b>Extent</b> property can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent" /> constants: <b>xlPageBreakFull</b> or <b>xlPageBreakPartial</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Location { Microsoft::Office::Interop::Excel::Range ^ get(); void set(Microsoft::Office::Interop::Excel::Range ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-121">返回或设置 (分页) 位置的对象 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 单元格。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-121">Returns or sets the cell (a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object) that defines the page-break location.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d1fe1-122">水平分页符与定位单元格的上边缘对齐；垂直分页符与定位单元格的左边缘对齐。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-122">Horizontal page breaks are aligned with the top edge of the location cell; vertical page breaks are aligned with the left edge of the location cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Parent { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-123">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-123">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPageBreak Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPageBreak Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.VPageBreak.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlPageBreak" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPageBreak Type { Microsoft::Office::Interop::Excel::XlPageBreak get(); void set(Microsoft::Office::Interop::Excel::XlPageBreak value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPageBreak</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fe1-124">返回或设置分页符类型。</span><span class="sxs-lookup"><span data-stu-id="d1fe1-124">Returns or sets the page break type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>