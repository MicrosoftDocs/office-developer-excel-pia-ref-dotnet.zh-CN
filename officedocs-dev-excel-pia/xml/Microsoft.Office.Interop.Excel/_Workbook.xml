<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20575045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f2b3f-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2b3f-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="f2b3f-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2b3f-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="f2b3f-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2b3f-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="f2b3f-104">有关 COM 对象的详细信息，请参阅<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2b3f-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-105">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-106">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-107">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-108">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-109">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="f2b3f-110">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-111">指定何时接受所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-111">Specifies when all the changes are accepted.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="f2b3f-112">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-113">指定由何人接受所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-113">Specifies by whom all the changes are accepted.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="f2b3f-114">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-115">指定在何处接受所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-115">Specifies where all the changes are accepted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-116">接受指定共享工作簿中的所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-116">Accepts all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-117">如果为<b>true</b>可在工作表公式中使用标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-117">
              <b>True</b> if labels can be used in worksheet formulas.</span>
          </span>
          <span data-ttu-id="f2b3f-118">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-118">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-119">读/写 <b>boolean 类型的值</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-119">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-120">获取或设置是否特定工作表函数使用最新的准确性算法来计算其结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-121">指定哪个版本的算法用于特定工作表函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-121">Specifies which version of algorithms to use for certain worksheet functions.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-122">
            <para>读/写</para>
            <para>默认情况下，从 Microsoft Office Excel 2007 工作表函数的一些和早期版本的 Microsoft Excel 使用新提高其准确性的算法。但是，在某些情况下，新的算法会降低性能的相对于其 Microsoft Office Excel 2007 中的性能这些函数和早期版本的 Excel。若要指定这些工作表函数使用旧算法来提高其性能，设置<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />属性设为 1。下表介绍了可能的设置<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />属性。</para>
            <list type="table">
              <item>
                <term>0</term>
                <description>使用最新、 最精确的算法 （默认值）</description>
              </item>
              <item>
                <term>1</term>
                <description>使用 Microsoft Office Excel 2007 或早期版本的算法</description>
              </item>
              <item>
                <term>2</term>
                <description>使用 Microsoft Excel 2010 算法</description>
              </item>
            </list>
            <para>
              <b>警告</b>： 设置<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />属性设为非 0、 1 或 2 的值将导致未定义的行为。</para>
            <para>下表总结了哪些功能受到设置<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />属性设为 1。"函数不影响"列中列出的功能将始终使用最新的准确性算法或 Excel 2010 中未更改。对于在其名称中包含句点 （.） 的函数名称，以确定相应的函数的名称在 VBA 中作为方法实现的<see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />对象，该期间替换下划线字符 (_)。例如，对应于 BETA 的 VBA 方法。分发函数是<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />方法。</para>
            <list type="table">
              <item>
                <term>则 betadist 将</term>
                <description>聚合</description>
              </item>
              <item>
                <term>BETAINV</term>
                <description>BETA。分发</description>
              </item>
              <item>
                <term>BINOMDIST</term>
                <description>BETA。INV</description>
              </item>
              <item>
                <term>CHIDIST</term>
                <description>BINOM。分发</description>
              </item>
              <item>
                <term>CHIINV</term>
                <description>BINOM。INV</description>
              </item>
              <item>
                <term>CHITEST</term>
                <description>CEILING</description>
              </item>
              <item>
                <term>可信度</term>
                <description>CEILING。精确</description>
              </item>
              <item>
                <term>CRITBINOM</term>
                <description>CHISQ。分发</description>
              </item>
              <item>
                <term>则 CUMIPMT</term>
                <description>CHISQ。DIST.RT</description>
              </item>
              <item>
                <term>则 CUMPRINC</term>
                <description>CHISQ。INV</description>
              </item>
              <item>
                <term>ERF</term>
                <description>CHISQ。库存RT</description>
              </item>
              <item>
                <term>ERFC</term>
                <description>CHISQ。测试</description>
              </item>
              <item>
                <term>EXPONDIST</term>
                <description>可信度。NORM</description>
              </item>
              <item>
                <term>FDIST</term>
                <description>可信度。T</description>
              </item>
              <item>
                <term>FINV</term>
                <description>COVAR</description>
              </item>
              <item>
                <term>FTEST</term>
                <description>协方差。P</description>
              </item>
              <item>
                <term>GAMMADIST</term>
                <description>协方差。S</description>
              </item>
              <item>
                <term>GAMMALN</term>
                <description>ERF。精确</description>
              </item>
              <item>
                <term>GAMMINV</term>
                <description>ERFC。精确</description>
              </item>
              <item>
                <term>则 hypgeomdist 将</term>
                <description>EXPON。分发</description>
              </item>
              <item>
                <term>IPMT</term>
                <description>F.DIST</description>
              </item>
              <item>
                <term>IRR</term>
                <description>F.DIST。RT</description>
              </item>
              <item>
                <term>LOGINV</term>
                <description>F.INV</description>
              </item>
              <item>
                <term>LOGNORMDIST</term>
                <description>F.INV。RT</description>
              </item>
              <item>
                <term>则 NEGBINOMDIST</term>
                <description>F.TEST</description>
              </item>
              <item>
                <term>NORMDIST</term>
                <description>FLOOR</description>
              </item>
              <item>
                <term>NORMINV</term>
                <description>基底。精确</description>
              </item>
              <item>
                <term>NORMSDIST</term>
                <description>伽玛。分发</description>
              </item>
              <item>
                <term>NORMSINV</term>
                <description>伽玛。INV</description>
              </item>
              <item>
                <term>PMT</term>
                <description>GAMMALN。精确</description>
              </item>
              <item>
                <term>泊松</term>
                <description>HYPGEOM。分发</description>
              </item>
              <item>
                <term>PPMT</term>
                <description>ISO。天花板</description>
              </item>
              <item>
                <term>STDEV</term>
                <description>LOGNORM。分发</description>
              </item>
              <item>
                <term>STDEVP</term>
                <description>LOGNORM。INV</description>
              </item>
              <item>
                <term>则 tdist 将</term>
                <description>MOD</description>
              </item>
              <item>
                <term>TINV</term>
                <description>模式</description>
              </item>
              <item>
                <term>则 ttest 将</term>
                <description>模式。MULT</description>
              </item>
              <item>
                <term>VAR</term>
                <description>模式。SNGL</description>
              </item>
              <item>
                <term>VARA</term>
                <description>NEGBINOM。分发</description>
              </item>
              <item>
                <term>VARP</term>
                <description>NETWORKDAYS。INTL</description>
              </item>
              <item>
                <term>VARPA</term>
                <description>NORM。分发</description>
              </item>
              <item>
                <term>韦伯</term>
                <description>NORM。INV</description>
              </item>
              <item>
                <term>XIRR</term>
                <description>NORM。S.DIST</description>
              </item>
              <item>
                <term>ZTEST</term>
                <description>NORM。S.INV</description>
              </item>
              <item>
                <term />百分点值
            </item>
              <item>
                <term />百分点值。执行
            </item>
              <item>
                <term />百分点值。INC
            </item>
              <item>
                <term />函数 percentrank 将进行
            </item>
              <item>
                <term />函数 percentrank 将进行。执行
            </item>
              <item>
                <term />函数 percentrank 将进行。INC
            </item>
              <item>
                <term />泊松。分发
            </item>
              <item>
                <term />四分位数
            </item>
              <item>
                <term />四分位数。执行
            </item>
              <item>
                <term />四分位数。INC
            </item>
              <item>
                <term />排名
            </item>
              <item>
                <term />排名。平均
            </item>
              <item>
                <term />排名。EQ
            </item>
              <item>
                <term />STDEV。P
            </item>
              <item>
                <term />STDEV。S
            </item>
              <item>
                <term />T.DIST
            </item>
              <item>
                <term />T.DIST.2T
            </item>
              <item>
                <term />T.DIST。RT
            </item>
              <item>
                <term />T.DIST。RT
            </item>
              <item>
                <term />T.INV
            </item>
              <item>
                <term />T.INV.2T
            </item>
              <item>
                <term />T.INV。RT
            </item>
              <item>
                <term />T.TEST
            </item>
              <item>
                <term />差异P
            </item>
              <item>
                <term />差异S
            </item>
              <item>
                <term />WEEKDAY
            </item>
              <item>
                <term />WEEKNUM
            </item>
              <item>
                <term />韦伯。分发
            </item>
              <item>
                <term />工作日。INTL
            </item>
              <item>
                <term />Z.TEST
            </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-122">
              <para>Read/write</para>
              <para>By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy. However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel. To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</para>
              <list type="table">
                <item>
                  <term>0</term>
                  <description>Use the latest, most accurate algorithms (default)</description>
                </item>
                <item>
                  <term>1</term>
                  <description>Use Microsoft Office Excel 2007 or earlier version algorithms</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use Microsoft Excel 2010 algorithms</description>
                </item>
              </list>
              <para>
                <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</para>
              <para>The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010. For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period. For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</para>
              <list type="table">
                <item>
                  <term>BETADIST</term>
                  <description>AGGREGATE</description>
                </item>
                <item>
                  <term>BETAINV</term>
                  <description>BETA.DIST</description>
                </item>
                <item>
                  <term>BINOMDIST</term>
                  <description>BETA.INV</description>
                </item>
                <item>
                  <term>CHIDIST</term>
                  <description>BINOM.DIST</description>
                </item>
                <item>
                  <term>CHIINV</term>
                  <description>BINOM.INV</description>
                </item>
                <item>
                  <term>CHITEST</term>
                  <description>CEILING</description>
                </item>
                <item>
                  <term>CONFIDENCE</term>
                  <description>CEILING.PRECISE</description>
                </item>
                <item>
                  <term>CRITBINOM</term>
                  <description>CHISQ.DIST</description>
                </item>
                <item>
                  <term>CUMIPMT</term>
                  <description>CHISQ.DIST.RT</description>
                </item>
                <item>
                  <term>CUMPRINC</term>
                  <description>CHISQ.INV</description>
                </item>
                <item>
                  <term>ERF</term>
                  <description>CHISQ.INV.RT</description>
                </item>
                <item>
                  <term>ERFC</term>
                  <description>CHISQ.TEST</description>
                </item>
                <item>
                  <term>EXPONDIST</term>
                  <description>CONFIDENCE.NORM</description>
                </item>
                <item>
                  <term>FDIST</term>
                  <description>CONFIDENCE.T</description>
                </item>
                <item>
                  <term>FINV</term>
                  <description>COVAR</description>
                </item>
                <item>
                  <term>FTEST</term>
                  <description>COVARIANCE.P</description>
                </item>
                <item>
                  <term>GAMMADIST</term>
                  <description>COVARIANCE.S</description>
                </item>
                <item>
                  <term>GAMMALN</term>
                  <description>ERF.PRECISE</description>
                </item>
                <item>
                  <term>GAMMINV</term>
                  <description>ERFC.PRECISE</description>
                </item>
                <item>
                  <term>HYPGEOMDIST</term>
                  <description>EXPON.DIST</description>
                </item>
                <item>
                  <term>IPMT</term>
                  <description>F.DIST</description>
                </item>
                <item>
                  <term>IRR</term>
                  <description>F.DIST.RT</description>
                </item>
                <item>
                  <term>LOGINV</term>
                  <description>F.INV</description>
                </item>
                <item>
                  <term>LOGNORMDIST</term>
                  <description>F.INV.RT</description>
                </item>
                <item>
                  <term>NEGBINOMDIST</term>
                  <description>F.TEST</description>
                </item>
                <item>
                  <term>NORMDIST</term>
                  <description>FLOOR</description>
                </item>
                <item>
                  <term>NORMINV</term>
                  <description>FLOOR.PRECISE</description>
                </item>
                <item>
                  <term>NORMSDIST</term>
                  <description>GAMMA.DIST</description>
                </item>
                <item>
                  <term>NORMSINV</term>
                  <description>GAMMA.INV</description>
                </item>
                <item>
                  <term>PMT</term>
                  <description>GAMMALN.PRECISE</description>
                </item>
                <item>
                  <term>POISSON</term>
                  <description>HYPGEOM.DIST</description>
                </item>
                <item>
                  <term>PPMT</term>
                  <description>ISO.CEILING</description>
                </item>
                <item>
                  <term>STDEV</term>
                  <description>LOGNORM.DIST</description>
                </item>
                <item>
                  <term>STDEVP</term>
                  <description>LOGNORM.INV</description>
                </item>
                <item>
                  <term>TDIST</term>
                  <description>MOD</description>
                </item>
                <item>
                  <term>TINV</term>
                  <description>MODE</description>
                </item>
                <item>
                  <term>TTEST</term>
                  <description>MODE.MULT</description>
                </item>
                <item>
                  <term>VAR</term>
                  <description>MODE.SNGL</description>
                </item>
                <item>
                  <term>VARA</term>
                  <description>NEGBINOM.DIST</description>
                </item>
                <item>
                  <term>VARP</term>
                  <description>NETWORKDAYS.INTL</description>
                </item>
                <item>
                  <term>VARPA</term>
                  <description>NORM.DIST</description>
                </item>
                <item>
                  <term>WEIBULL</term>
                  <description>NORM.INV</description>
                </item>
                <item>
                  <term>XIRR</term>
                  <description>NORM.S.DIST</description>
                </item>
                <item>
                  <term>ZTEST</term>
                  <description>NORM.S.INV</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.INC</description>
                </item>
                <item>
                  <term />
                  <description>POISSON.DIST</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>RANK</description>
                </item>
                <item>
                  <term />
                  <description>RANK.AVG</description>
                </item>
                <item>
                  <term />
                  <description>RANK.EQ</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.P</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.S</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.INV</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.TEST</description>
                </item>
                <item>
                  <term />
                  <description>VAR.P</description>
                </item>
                <item>
                  <term />
                  <description>VAR.S</description>
                </item>
                <item>
                  <term />
                  <description>WEEKDAY</description>
                </item>
                <item>
                  <term />
                  <description>WEEKNUM</description>
                </item>
                <item>
                  <term />
                  <description>WEIBULL.DIST</description>
                </item>
                <item>
                  <term />
                  <description>WORKDAY.INTL</description>
                </item>
                <item>
                  <term />
                  <description>Z.TEST</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-123">激活与工作簿相关的第一个窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-123">Activates the first window associated with the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-124">这样不会运行可能附加在工作簿的任何 Auto_Activate 或 Auto_Deactivate 宏 (使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />方法可运行这些宏)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-124">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-125">返回<see cref="T:Microsoft.Office.Interop.Excel.Chart" />对象，表示活动图表 （嵌入的图表或图表工作表）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-125">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="f2b3f-126">选择或激活时，嵌入的图表被视为活动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-126">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="f2b3f-127">当没有图表处于活动状态时，则此属性返回<b>Nothing</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-127">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-128">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-129">
            <para>如果不指定对象识别符，此属性返回活动工作簿中的活动图表。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-129">
              <para>If you don't specify an object qualifier, this property returns the active chart in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-130">在活动工作簿或工作簿的指定的窗口中，则返回一个对象，表示活动工作表 （顶部的工作表）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-131">如果没有工作表处于活动状态，则返回<b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
          <span data-ttu-id="f2b3f-132">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-132">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-133">
            <para>如果不指定对象识别符，此属性返回活动工作簿中的活动工作表。</para>
            <para>如果工作簿出现在多个窗口中，<see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />属性在不同窗口中可能会有所不同。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-133">
              <para>If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</para>
              <para>If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-134">获取一个 object 值，该值代表指定工作簿或活动工作簿中的活动切片器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-134">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-135">一个 object 值，该值代表指定工作簿或活动工作簿中的活动切片器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-135">An object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-136">
            <para>如果没有切片器处于活动状态，则返回空引用 (在 Visual Basic 中为 Nothing)。</para>
            <para>只读的。</para>
            <para>如果未指定<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象，该属性返回活动工作簿中的活动切片器。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-136">
              <para>Returns a null reference (Nothing in Visual Basic) if no slicer is active.</para>
              <para>Read-only.</para>
              <para>If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-137">向工作簿或超链接到收藏夹文件夹的快捷方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-137">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-138">当使用对象识别符，此属性返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-138">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="f2b3f-139">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象（可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-139">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="f2b3f-140">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-140">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-141">主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-141">Name of the theme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-142">将指定的主题应用于当前工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-142">Applies the specified theme to the current workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p110">返回或设置批注的作者。<b>String</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p110">Returns or sets the author of the comment. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-145">返回<see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-145">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="f2b3f-146">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-146">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="f2b3f-147">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-147">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="f2b3f-148">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-148">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-149">返回或设置的自动更新共享工作簿之间的分钟数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-149">Returns or sets the number of minutes between automatic updates to the shared workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-150">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-150">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-151">
            <para>
              <b>AutoUpdateFrequency</b>属性必须设置一个值为从 5 至 1440 此属性才会生效。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-151">
              <para>The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p112">如果共享工作簿自动更新时，对其所做的更改将传送到其他用户，则该值为 <b>True</b>。如果不传送所做的更改（该工作簿还须与其他用户所做的更改保持同步），则该值为 <b>False</b>。默认值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p112">
              <b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-156">
            <para>
              <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />属性必须设置一个值为从 5 至 1440 此属性才会生效。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-156">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-157">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-157">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-158">链接的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-158">The name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="f2b3f-159">所需<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-159">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="f2b3f-160">链接类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-160">The type of link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-161">将链接到其他 Microsoft Excel 源或 OLE 源的公式转换为值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-161">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-162">返回<see cref="T:Microsoft.Office.Core.DocumentProperties" />代表指定工作簿的所有内置文档属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-162">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-163">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-163">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-164">
            <para>此属性返回内置文档属性的整个集合。使用<see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" />方法，以返回集合中的单个成员 (<see cref="T:Microsoft.Office.Core.DocumentProperty" />对象) 通过指定的属性的名称或集合索引 （以数字）。</para>
            <para>您可以参考文档属性的索引值或名称。以下列表显示可用的内置文档属性名称：</para>
            <para>标题</para>
            <para>主题</para>
            <para>作者</para>
            <para>关键字</para>
            <para>注释</para>
            <para>模板</para>
            <para>上一个作者</para>
            <para>修订号</para>
            <para>应用程序名称</para>
            <para>上次打印日期</para>
            <para>创建日期</para>
            <para>上次保存时间</para>
            <para>编辑时间总计</para>
            <para>的页数</para>
            <para>的单词数</para>
            <para>的字符数</para>
            <para>安全</para>
            <para>类别</para>
            <para>格式</para>
            <para>管理器</para>
            <para>公司</para>
            <para>的字节数</para>
            <para>的行数</para>
            <para>的段落数</para>
            <para>的幻灯片的数目</para>
            <para>备注数</para>
            <para>的隐藏幻灯片的数目</para>
            <para>数多媒体剪辑</para>
            <para>超链接基础</para>
            <para>字符数 （带空格）</para>
            <para>容器应用程序不需要定义每个内置文档属性的值。如果 Microsoft Excel 没有定义某个内置文档属性的值，读取<see cref="P:Microsoft.Office.Core.DocumentProperty.Value" />文档属性的属性将导致出错。</para>
            <para>
              <b>Item</b>方法是<b>DocumentProperties</b>集合的默认方法。</para>
            <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />属性可以返回自定义文档属性的集合。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-164">
              <para>This property returns the entire collection of built-in document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>You can refer to document properties either by index value or by name. The following list shows the available built-in document property names:</para>
              <para>Title </para>
              <para>Subject</para>
              <para>Author</para>
              <para>Keywords</para>
              <para>Comments</para>
              <para>Template</para>
              <para>Last Author</para>
              <para>Revision Number</para>
              <para>Application Name</para>
              <para>Last Print Date</para>
              <para>Creation Date </para>
              <para>Last Save Time</para>
              <para>Total Editing Time</para>
              <para>Number of Pages</para>
              <para>Number of Words</para>
              <para>Number of Characters</para>
              <para>Security</para>
              <para>Category</para>
              <para>Format</para>
              <para>Manager</para>
              <para>Company</para>
              <para>Number of Bytes</para>
              <para>Number of Lines</para>
              <para>Number of Paragraphs</para>
              <para>Number of Slides</para>
              <para>Number of Notes</para>
              <para>Number of Hidden Slides</para>
              <para>Number of Multimedia Clips</para>
              <para>Hyperlink Base</para>
              <para>Number of Characters (with spaces)</para>
              <para>Container applications aren’t required to define values for every built-in document property. If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-165">返回一个数字，其最右边的四位是次要计算引擎的版本号和其其他数字 （左侧） 是 Microsoft Excel 的主要版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-165">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
          <span data-ttu-id="f2b3f-166">为<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象，该属性返回的信息的上次工作簿进行完全重新计算的 Excel 版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-166">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span>
          </span>
          <span data-ttu-id="f2b3f-167">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-167">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-168">
            <para>如果 Excel 的早期版本中保存工作簿和工作簿并未进行完全重新计算，如果此属性返回 0。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-168">
              <para>If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-169">
            <b>True</b>如果 Microsoft Excel 可以签入到服务器的指定工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-169">
              <b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-170">
            <b>True</b>如果工作簿区分大小写比较内容时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-170">
              <b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span>
          </span>
          <span data-ttu-id="f2b3f-171">只读的<b>boolean 类型的值</b>(C# 中<b>bool</b> )。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-171">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">
          <span data-ttu-id="f2b3f-172">所需<see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-172">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          </span>
          <span data-ttu-id="f2b3f-173">指定新的访问模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-173">Specifies the new access mode.</span>
          </span>
        </param>
        <param name="WritePassword">
          <span data-ttu-id="f2b3f-174">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-175">如果该文件是保留的写入指定的写保护密码和<paramref name="Mode" />是<b>xlReadWrite</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-175">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-176">如果没有文件密码或忽略<paramref name="Mode" />是<b>xlReadOnly</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-176">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="f2b3f-177">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-177">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-178">如果该值为 <b>True</b>（或省略该参数），则当无法立即访问文件时通知用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-178">
              <b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-p121">更改工作簿的访问权限。本方法需要从磁盘加载工作簿的更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p121">Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-181">如果您有以只读模式打开文件的<para>，无需对文件独占访问。如果从只读为读/写更改文件，Microsoft Excel 必须加载的文件，以确保您具有以只读方式打开该文件时，未进行任何更改的新副本。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-181">
              <para>If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-182">返回或设置的共享工作簿的更改历史记录中所示的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-182">Returns or sets the number of days shown in the shared workbook's change history.</span>
          </span>
          <span data-ttu-id="f2b3f-183">可读写 <b>Integer</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-183">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-184">
            <para>关闭工作簿时，将删除早于设置此属性的更改历史记录中的所有更改。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-184">
              <para>Any changes in the change history older than the setting for this property are removed when the workbook is closed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-185">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-185">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-186">要更改，从所返回的 Microsoft Excel 或 DDE/OLE 链接的名称<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-186">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="NewName">
          <span data-ttu-id="f2b3f-187">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-187">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-188">链接的新名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-188">The new name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="f2b3f-189">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-189">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="f2b3f-190">链接类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-190">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-191">将链接从某一文档更改到另一文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-191">Changes a link from one document to another.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-192">
            <b>True</b>将导致所有图表中的当前文档以跟踪的实际指向其附加数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-192">
              <b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span>
          </span>
          <span data-ttu-id="f2b3f-193">
            <b>False</b>将恢复为跟踪数据点的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-193">
              <b>False</b> will revert back to tracking the index of the data point.</span>
          </span>
          <span data-ttu-id="f2b3f-194">
            <b>Boolean</b>(C# 中<b>bool</b> )读/写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-194">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-195">返回<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />值，该值代表指定工作簿中的所有图表工作表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-195">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-196">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-196">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-197">
            <para>使用此属性不使用对象识别符的情况下将返回活动工作簿中的工作表的所有图表。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-197">
              <para>Using this property without an object qualifier returns all chart sheets in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-198">控制兼容性检查器运行自动保存工作簿时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-198">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span>
          </span>
          <span data-ttu-id="f2b3f-199">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-199">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-200">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-200">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="f2b3f-201">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-202">
            <b>为 true</b> ，则保存更改并签入该文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-202">
              <b>True</b> saves changes and checks in the document.</span>
          </span>
          <span data-ttu-id="f2b3f-203">
            <b>False</b> ，则不保存修订，并将文档恢复到签入状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-203">
              <b>False</b> returns the document to a checked-in status without saving revision.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="f2b3f-204">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-204">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-205">允许用户的签入工作簿的修订输入签入批注 (仅适用于<paramref name="SaveChanges" />等于<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-205">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="f2b3f-206">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-207">
            <b>True</b>允许用户签入后发布工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-207">
              <b>True</b> allows the user to publish the workbook after it has been checked in.</span>
          </span>
          <span data-ttu-id="f2b3f-208">这将提交工作簿中的审批过程中，最终会导致具有只读权限，对工作簿的用户发布的工作簿的版本 (仅适用于<paramref name="SaveChanges" />等于<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-208">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-209">从本地计算机的工作簿返回到服务器并将本地工作簿设为只读，使之无法在本地编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-209">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
          <span data-ttu-id="f2b3f-210">调用此方法也将关闭工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-210">Calling this method will also close the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="f2b3f-211">
            <b>true</b>将工作簿保存到的服务器位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-211">
              <b>true</b> to save the workbook to the server location.</span>
          </span>
          <span data-ttu-id="f2b3f-212">默认值为 <b>true</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-212">The default is <b>true</b>.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="f2b3f-213">修订的工作簿正在签入批注 (仅适用于<paramref name="SaveChanges" />设置为<b>true</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-213">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="f2b3f-214">
            <b>true</b>允许用户签入后发布工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-214">
              <b>true</b> to allow the user to publish the workbook after it is checked in.</span>
          </span>
        </param>
        <param name="VersionType">
          <span data-ttu-id="f2b3f-215">指定工作簿的版本信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-215">Specifies versioning information for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-216">将工作簿从本地计算机保存到服务器，并将本地工作簿设置为只读，以便无法在本地编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-216">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-217">
            <para>设置<paramref name="MakePublic" />参数为<b>true</b>提交工作簿中的审批过程中，最终会导致具有只读权限，对工作簿的用户发布的工作簿的版本 (仅适用于<paramref name="SaveChanges" />设置为<b>true</b>).</para>
            <para>若要利用 Microsoft Excel 中内置的协作功能，文档必须存储在 Microsoft SharePoint Server 上。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-217">
              <para>Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>). </para>
              <para>To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="f2b3f-218">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-218">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-219">如果没有对工作簿的更改，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-219">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="f2b3f-220">如果有工作簿的更改和工作簿显示在其他打开的窗口，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-220">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="f2b3f-221">如果工作簿的更改，但工作簿不会显示在其他任何打开的窗口，此参数指定是否应保存更改下, 表中所示。ValueAction<b>，则返回 True</b>，则将所做的更改保存到工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-221">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-222">如果还没有关联的工作簿，然后文件名<paramref name="FileName" />使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-222">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="f2b3f-223">如果<paramref name="FileName" />是省略，则询问用户是否提供的文件名称。<b>False</b>对此文件，不保存更改。OmittedDisplays 对话框，询问用户保存更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-223">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="f2b3f-224">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-225">以此文件名保存所做的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-225">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="f2b3f-226">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-227">如果工作簿不需要路由到下一个收件人 （如果它没有传送名单，或已路由），则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-227">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="f2b3f-228">否则，Microsoft Excel 传送工作簿下表中所示。ValueMeaning<b>，则返回 True</b>，则将工作簿发送到下一个收件人。<b>False</b>不发送工作簿。OmittedDisplays 对话框，询问用户是否应发送工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-228">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-229">关闭对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-229">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-230">
            <para>关闭工作簿使用<b>Close</b>方法不会运行 Auto_Close 宏工作簿中。使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />方法可运行 Auto_Close 宏。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-230">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-231">返回对象的代码名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-231">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="f2b3f-232">只读 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-232">Read-only <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-233">您看到属性窗口中的<b>（名称）</b>右侧的单元格中的值是所选对象的代码名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-233">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
          </span>
          <span data-ttu-id="f2b3f-234">在设计时，您可以通过更改此值更改对象的代码名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-234">At design time, you can change the code name of an object by changing this value.</span>
          </span>
          <span data-ttu-id="f2b3f-235">以编程方式不能在运行时更改此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-235">You cannot programmatically change this property at run time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-236">
            <para>代码名称对象可用于代替返回对象的表达式。</para>
            <para>是可能的工作表名称不同于代码名称。当创建表、 工作表名称和代码名称是相同，但更改工作表名称不会更改代码名称，或更改代码名称 （使用属性窗口在 Visual Basic 编辑器中） 不会更改工作表名称。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-236">
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="f2b3f-237">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-238">颜色数 （从 1 到 56)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-238">The color number (from 1 to 56).</span>
          </span>
          <span data-ttu-id="f2b3f-239">如果不指定此参数，此方法将返回包含所有 56 的调色板中颜色的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-239">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-240">返回或设置工作簿的调色板中颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-240">Returns or sets colors in the palette for the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-241">调色板具有速度为 56 条目，每个表示 RGB 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-241">The palette has 56 entries, each represented by an RGB value.</span>
          </span>
          <span data-ttu-id="f2b3f-242">读取/写入 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-242">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-243">返回<see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />对象，表示 Microsoft Excel 命令栏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-243">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span>
          </span>
          <span data-ttu-id="f2b3f-244">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-244">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-245">
            <para>当工作簿是嵌入到另一个应用程序，并通过双击工作簿的用户激活时，对<b>工作簿</b>对象使用此属性返回其他应用程序中可用的 Microsoft Excel 命令栏的集。在所有其他时候，通过<b>Workbook</b>对象使用此属性返回<b>Nothing</b>。</para>
            <para>没有没有以编程方式返回的附加到工作簿的命令栏集。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-245">
              <para>When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application. At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</para>
              <para>There is no programmatic way to return the set of command bars attached to a workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-246">返回<see cref="T:Microsoft.Office.Interop.Excel.Comments" />值，该值代表指定工作表中的所有批注的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-246">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="f2b3f-247">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-247">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-248">返回<see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-248">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="f2b3f-249">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-249">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="f2b3f-250">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-250">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="f2b3f-251">
            <para>本示例删除活动工作表上由 Jean Selva 添加的所有批注。</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-251">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-252">返回或设置冲突的方式的每当更新共享工作簿时进行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-252">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span>
          </span>
          <span data-ttu-id="f2b3f-253">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-253">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-254">
            <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />属性建立工作簿和 ODBC 或 OLEDB 数据源之间的连接和刷新数据，而不提示用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-254">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span>
          </span>
          <span data-ttu-id="f2b3f-255">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-255">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p144">显示工作簿中的外部连接或链接。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p144">Disables the external connections or links in the workbook. Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-258">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-258">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p145">返回包含指定 OLE 对象的容器应用程序的对象。<b>Object</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p145">Returns the object that represents the container application for the specified OLE object. Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-261">
            <para>此属性提供了一种方法，如果主机应用程序，如 Microsoft Internet Explorer 中打开 Excel 工作簿时访问容器应用程序的对象模型。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-261">
              <para>This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-262">返回<see cref="T:Microsoft.Office.Core.MetaProperties" />介绍工作簿中存储的元数据的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-262">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-263">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-263">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-264">
            <b>MetaProperties</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-264">
              <b>MetaProperties</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p147">如果保存文件时创建备份文件，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p147">
              <b>True</b> if a backup file is created when this file is saved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-267">返回中的一个常量<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />枚举，指示在其中创建此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-267">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="f2b3f-268">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-268">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="f2b3f-269">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-270">
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-270">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-271">返回或设置<see cref="T:Microsoft.Office.Core.DocumentProperties" />值，该值代表指定工作簿的所有自定义文档属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-271">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-272">
            <para>此属性返回自定义文档属性的整个的集合。使用<see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" />方法，以返回集合中的单个成员 (<see cref="T:Microsoft.Office.Core.DocumentProperty" />对象) 通过指定的属性的名称或集合索引 （以数字）。</para>
            <para>
              <b>Item</b>方法是<b>DocumentProperties</b>集合的默认方法。</para>
            <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />属性可返回内置文档属性的集合。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-272">
              <para>This property returns the entire collection of custom document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-273">返回<see cref="T:Microsoft.Office.Interop.Excel.CustomViews" />集合，它代表工作簿的所有自定义视图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-274">返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-274">Returns a.</span>
          </span>
          <span data-ttu-id="f2b3f-275">
            <see cref="T:Microsoft.Office.Core.CustomXMLParts" />表示 XML 数据存储中的自定义 XML 的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-275">
              <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span>
          </span>
          <span data-ttu-id="f2b3f-276">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-276">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-277">
            <b>CustomXMLParts</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-277">
              <b>CustomXMLParts</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p150">如果工作簿使用 1904 日期系统，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p150">
              <b>True</b> if the workbook uses the 1904 date system. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-280">指定从表样式<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />用作数据透视表的默认样式的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-280">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span>
          </span>
          <span data-ttu-id="f2b3f-281">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-281">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-282">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-282">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-283">获取或设置从样式<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />用作切片器的默认样式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-283">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-284">从样式<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />用作切片器的默认样式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-284">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-285">
            <para>读/写。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-285">
              <para>Read/write.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-286">指定从表样式<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />用作默认 TableStyle 的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-286">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span>
          </span>
          <span data-ttu-id="f2b3f-287">读/写</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-287">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-288">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-288">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-289">工作簿的默认切片器样式的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-289">The name of the default slicer style of the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-290">
            <b>对象</b>（<b>对象</b>中 C#）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-290">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="f2b3f-291">读/写</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-291">Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">
          <span data-ttu-id="f2b3f-292">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-292">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-293">命名要删除的数字格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-293">Names the number format to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-294">从工作簿中删除一个自定义数字格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-294">Deletes a custom number format from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-295">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-295">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-296">返回或设置形状的显示方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-296">Returns or sets how shapes are displayed.</span>
          </span>
          <span data-ttu-id="f2b3f-297">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-297">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-298">
            <para>可以是下列 XlDisplayDrawingObjects 常量之一。</para>
            <list type="table">
              <item>
                <term>
                  <paramref name="xlDisplayShapes" />
                </term>显示所有形状。
            </item>
              <item>
                <term>
                  <paramref name="xlPlaceholders" />
                </term>仅显示占位符。
            </item>
              <item>
                <term>
                  <paramref name="xlHide" />
                </term>隐藏所有形状。
            </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-298">
              <para>Can be one of the following XlDisplayDrawingObjects constants.</para>
              <list type="table">
                <item>
                  <term>
                    <paramref name="xlDisplayShapes" />
                  </term>
                  <description>Show all shapes.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlPlaceholders" />
                  </term>
                  <description>Show only placeholders.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlHide" />
                  </term>
                  <description>Hide all shapes.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p156">确定墨迹批注是否显示在工作簿中的 <b>Boolean</b> 值。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p156">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-301">返回<see cref="T:Microsoft.Office.Core.DocumentInspectors" />值，该值代表指定工作簿的文档检查器模块的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-301">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-302">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-302">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-303">
            <b>DocumentInspectors</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-303">
              <b>DocumentInspectors</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-304">返回<see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />集合，代表的启用了版本控制并存储在服务器上的文档库中的共享工作簿的版本集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-304">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-305">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-305">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-306">返回或设置是否应提示用户转换工作簿，如果工作簿包含不支持的 Excel 版本早于 short_Excel2007 的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-306">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span>
          </span>
          <span data-ttu-id="f2b3f-307">读/写</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-307">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-308">Boolean</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-308">Boolean</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-309">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-309">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-310">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-310">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p159">根据规定的时间间隔保存全部格式的已更改文件。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p159">Saves changed files, of all formats, on a timed interval. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-313">如果 Microsoft Excel<para>失败，则系统将失败，或如果系统不正确地关闭 （不允许 Excel 保存更改的文件），打开备份的文件，并且用户拥有的机会，以保存更改，否则将已丢失。当用户重新启动 Excel 时，将打开文档恢复窗口，为用户提供用于恢复已处理的文件的选项。此属性设置为<b>True</b> （默认值） 将启用该功能。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-313">
              <para>If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost. When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on. Setting this property to <b>True</b> (default) enables this feature.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-314">
            <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />方法，开发人员可以以编程方式启用用户工作簿中的数据连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-314">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-315">返回一个<b>字符串</b>指定的加密算法提供程序名称 1st_Excel12 使用加密文档时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-315">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span>
          </span>
          <span data-ttu-id="f2b3f-316">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-316">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-317">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-317">
              <b>s</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-318">终止审阅使用已发送的文件的审阅<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-318">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p161">如果显示电子邮件标题和信封工具栏，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p161">
              <b>True</b> if the e-mail composition header and the envelope toolbar are both visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-321">返回<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />值，该值代表指定工作簿中的所有 Microsoft Excel 4.0 国际宏表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-321">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-322">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-322">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-323">返回<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />值，该值代表指定工作簿中的所有 Microsoft Excel 4.0 宏表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-324">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-324">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-325">
            <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />属性提供了一种方法检查工作簿是否在兼容模式下的开发人员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-325">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span>
          </span>
          <span data-ttu-id="f2b3f-326">只读</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-326">Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-327">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-327">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-328">
            <para>在兼容模式下，某些功能被禁用，或不同功能。 例如，在 short_Excel2007 有更多行和列与早期版本的 Excel 可用。结构化引用也可在 short_Excel2007。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-328">
              <para>In compatibility mode, certain functionality is disabled or functions differently.  For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel. Also structured referencing is available in short_Excel2007.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-329">指定当前用户对共享清单中的工作簿进行独占访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-329">Assigns the current user exclusive access to the workbook that's open as a shared list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="f2b3f-330">
            <para>
              <b>ExclusiveAccess</b>方法保存任何更改已对工作簿并要求其他用户拥有工作簿打开作改变保存到另一个文件。</para>如果指定的工作簿不是作为共享列表打开
          <para>，此方法将失败。若要确定工作簿是否处于打开状态以共享清单，请使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />属性。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-330">
              <para>The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</para>
              <para>If the specified workbook isn't open as a shared list, this method fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="f2b3f-331">可以为<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" />或<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-331">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="f2b3f-332">一个<b>字符串</b>，指示要保存的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-332">A <b>String</b> that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="f2b3f-333">您可以包括完整路径或短。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-333">You can include a full path or short.</span>
          </span>
          <span data-ttu-id="f2b3f-334">Excel2007 将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-334">Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="f2b3f-335">可以设置为<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" />或<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-335">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="f2b3f-336">设置为<b>True</b>以指明应包含属性，或将其设置为<b>False</b>以指明应省略该文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-336">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="f2b3f-337">如果设置为<b>True</b>，将忽略发布时设置的任何打印区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-337">If set to <b>True</b>, ignores any print areas set when publishing.</span>
          </span>
          <span data-ttu-id="f2b3f-338">如果设置为<b>False</b>，则使用发布时设置的打印区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-338">If set to <b>False</b>, will use the print areas set when publishing.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="f2b3f-p167">发布的起始页码。如果省略此参数，则从起始位置开始发布。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p167">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="f2b3f-p168">发布的终止页码。如果省略此参数，则发布至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p168">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="f2b3f-343">如果设置为<b>True</b>在发布后在查看器中显示文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-343">If set to <b>True</b> displays file in viewer after it is published.</span>
          </span>
          <span data-ttu-id="f2b3f-344">如果设置为<b>False</b>将文件发布但不是显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-344">If set to <b>False</b> the file is published but not displayed.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="f2b3f-345">指向<b>FixedFormatExt</b>类的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-345">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-346">
            <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法用于将工作簿发布到 PDF 或 XPS 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-346">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="f2b3f-347">
            <para>下面的示例在当前文件的目录中按标准质量创建 PDF 和发布后在查看器中显示文件。</para>
            <para>
              <b>注意</b>： 如果 PDF 加载项当前未安装，则会发生错误。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-347">
              <para>The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</para>
              <para>
                <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-348">返回的文件格式和/或工作簿的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-348">Returns the file format and/or type of the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-349">只读<see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-350">
            <para>这些常量的一些可能不可用，具体取决于您已选择或安装的语言支持 （例如，美国英语）。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-350">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-351">返回或设置一个<b>boolean 类型的值</b>，该值指示是否工作簿是最终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-351">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span>
          </span>
          <span data-ttu-id="f2b3f-352">读/写</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-352">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-353">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-353">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-354">
            <para>值设置为<b>True</b>标记工作簿作为最终，通知收件人 （如果有） 工作簿是最终的并将工作簿设置为只读的。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-354">
              <para>Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="f2b3f-355">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-355">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-356">在目标文档的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-356">The address of the target document.</span>
          </span>
        </param>
        <param name="SubAddress">
          <span data-ttu-id="f2b3f-357">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-358">目标文档内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-358">The location within the target document.</span>
          </span>
          <span data-ttu-id="f2b3f-359">默认值为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-359">The default value is the empty string.</span>
          </span>
        </param>
        <param name="NewWindow">
          <span data-ttu-id="f2b3f-360">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-361">
            <b>True</b>在新窗口中显示目标应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-361">
              <b>True</b> to display the target application in a new window.</span>
          </span>
          <span data-ttu-id="f2b3f-362">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-362">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AddHistory">
          <span data-ttu-id="f2b3f-363">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-363">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-364">不使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-364">Not used.</span>
          </span>
          <span data-ttu-id="f2b3f-365">保留以备今后使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-365">Reserved for future use.</span>
          </span>
        </param>
        <param name="ExtraInfo">
          <span data-ttu-id="f2b3f-366">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-367">字符串或字节数组的指定 HTTP 用于解析超链接的其他信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-367">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span>
          </span>
          <span data-ttu-id="f2b3f-368">例如，您可以使用<paramref name="ExtraInfo" />指定图像映射的坐标、 窗体或 FAT 文件名称的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-368">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span>
          </span>
        </param>
        <param name="Method">
          <span data-ttu-id="f2b3f-369">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-369">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-370">指定的方式<paramref name="ExtraInfo" />附加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-370">Specifies the way <paramref name="ExtraInfo" /> is attached.</span>
          </span>
          <span data-ttu-id="f2b3f-371">可以是一个<see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" />常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-371">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span>
          </span>
        </param>
        <param name="HeaderInfo">
          <span data-ttu-id="f2b3f-372">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-372">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-373">指定 HTTP 请求的标头信息的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-373">A string that specifies header information for the HTTP request.</span>
          </span>
          <span data-ttu-id="f2b3f-374">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-374">The default value is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-375">如果已下载，显示缓存的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-375">Displays a cached document if it’s already been downloaded.</span>
          </span>
          <span data-ttu-id="f2b3f-376">否则为此方法解析超链接，下载目标文档，并在相应的应用程序中显示的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-376">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-377">强制完整计算工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-377">Forces a full calculation of a workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-378">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-378">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-379">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-379">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p181">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p181">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p182">返回对象的名称（以字符串表示），包括其磁盘路径。<b>String</b> 型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p182">Returns the name of the object, including its path on disk, as a string. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-384">
            <para>此属性等效于<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" />属性当前文件系统分隔符分隔后, 跟<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" />属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-384">
              <para>This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p183">返回一个 <b>String</b> 值，该值表示对象名称（包括其磁盘路径）。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p183">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-387">返回的集合<see cref="T:Microsoft.Office.Core.WorkflowTask" />指定工作簿的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-387">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-388">返回的集合<see cref="T:Microsoft.Office.Core.WorkflowTemplate" />指定工作簿的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-388">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-389">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-389">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p184">如果指定工作簿有密码保护，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p184">
              <b>True</b> if the workbook has a protection password. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-392">
            <para>可以使用工作簿分配一个保护密码<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-392">
              <para>You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p185">如果指定工作簿含有传送名单，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p185">
              <b>True</b> if the workbook has a routing slip. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-395">
            <para>将此属性设置为<b>True</b>采用默认值创建一个传送名单。属性设置为<b>False</b>删除传送名单。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-395">
              <para>Setting this property to <b>True</b> creates a routing slip with default values. Setting the property to <b>False</b> deletes the routing slip.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-396">返回一个<b>Boolean</b>值，该值代表是否工作簿有附加的 Microsoft Visual Basic for Applications 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-396">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span>
          </span>
          <span data-ttu-id="f2b3f-397">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-397">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-398">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-398">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-399">
            <para>此属性是在以编程方式确定是否需要为启用宏的文件格式保存工作簿中最有用。如果保存在另一种格式，宏和文档中包含的代码项目可能会丢失。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-399">
              <para>This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p187">如果将指定共享工作簿的更改在屏幕上突出显示，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p187">
              <b>True</b> if changes to the shared workbook are highlighted on-screen. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="f2b3f-402">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-403">所显示的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-403">The changes that are shown.</span>
          </span>
          <span data-ttu-id="f2b3f-404">可以是下列<b>XlHighlightChangesTime</b>常量之一： <b>xlSinceMyLastSave</b>、 <b>xlAllChanges</b>或<b>xlNotYetReviewed</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-404">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="f2b3f-405">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-406">显示其更改的用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-406">The user or users whose changes are shown.</span>
          </span>
          <span data-ttu-id="f2b3f-407">可以是"任何人"、"所有人，但 Me"，或一个共享工作簿的用户的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-407">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="f2b3f-408">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-409">一个 A1-样式区域引用，该引用指定要检查更改的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-409">An A1-style range reference that specifies the area to check for changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-410">控制共享工作簿更改的显示方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-410">Controls how changes are shown in a shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-411">返回<see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />指定工作簿，该对象代表与项目资源管理器在 Microsoft 脚本编辑器顶级项目分支中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-411">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span>
          </span>
          <span data-ttu-id="f2b3f-412">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-412">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-413">此属性用于筛选的单元格图标所基于的工作簿中的数据<see cref="T:Microsoft.Office.Interop.Excel.IconSets" />集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-413">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          </span>
          <span data-ttu-id="f2b3f-414">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-414">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-415">
            <b>IconSets</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-415">
              <b>IconSets</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p193">一个 <b>Boolean</b> 值，指定当列表不处于活动状态时，此列表的边框是否可见。如果边框可见，则返回 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p193">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Returns <b>True</b> if the border is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-419">
            <para>设置此属性将影响工作表上的所有列表。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-419">
              <para>Setting this property will affect all the lists that are on the worksheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p194">如果指定工作簿作为加载宏运行，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p194">
              <b>True</b> if the workbook is running as an add-in. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-422">
            <para>工作簿时将该属性设置为<b>True</b>时，具有以下特征：</para>
            <list type="bullet">
              <item>
                <description>不会提示您保存工作簿，如果工作簿打开时进行更改。</description>
              </item>
              <item>
                <description>工作簿窗口不可见。</description>
              </item>
              <item>
                <description>工作簿中的任何宏不可见在宏对话框 （显示指向工具菜单上，单击宏）。</description>
              </item>
              <item>
                <description>宏工作簿中的可以仍在运行从宏对话框即使不可见。此外，宏名称不必是用工作簿的名称限定。</description>
              </item>
              <item>
                <description>当您打开工作簿时按住 SHIFT 键不起作用。</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-422">
              <para>When you set this property to <b>True</b>, the workbook has the following characteristics:</para>
              <list type="bullet">
                <item>
                  <description>You won’t be prompted to save the workbook if changes are made while the workbook is open.</description>
                </item>
                <item>
                  <description>The workbook window won’t be visible.</description>
                </item>
                <item>
                  <description>Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</description>
                </item>
                <item>
                  <description>Macros in the workbook can still be run from the Macro dialog box even though they’re not visible. In addition, macro names don’t need to be qualified with the workbook name.</description>
                </item>
                <item>
                  <description>Holding down the SHIFT key when you open the workbook has no effect.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p195">如果指定工作簿正在适当位置上进行编辑，则该值为 <b>True</b>。如果该工作簿已在 Microsoft Excel 中打开，并准备进行编辑，则该值为 <b>False</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p195">
              <b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p196">如果对共享工作簿启用了修订记录功能，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p196">
              <b>True</b> if change tracking is enabled for the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-428">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-428">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-429">可选的<b>字符串</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-429">Optional <b>String</b>.</span>
          </span>
        </param>
        <param name="LinkInfo">
          <span data-ttu-id="f2b3f-430">所需<see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-430">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          </span>
          <span data-ttu-id="f2b3f-431">要返回的信息的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-431">The type of information to be returned.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="f2b3f-432">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-432">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          </span>
          <span data-ttu-id="f2b3f-433">要返回的链接类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-433">The type of link to return.</span>
          </span>
        </param>
        <param name="EditionRef">
          <span data-ttu-id="f2b3f-434">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-434">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-435">如果链接版，则该参数指定 edition 引用 R1C1 样式字符串形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-435">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span>
          </span>
          <span data-ttu-id="f2b3f-436">如果有多个 publisher 或具有相同名称的工作簿中的订阅者，此参数是必需的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-436">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-437">返回工作簿中某个链接的日期及其更新状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-437">Returns the link date and update status.</span>
          </span>
          <span data-ttu-id="f2b3f-438">
            <b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-438">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="f2b3f-439">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-439">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="f2b3f-440">要返回的链接类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-440">The type of link to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-441">返回一个数组，这些工作簿中的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-441">Returns an array of links in the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-442">该数组中的名称是链接的文档、 版本或 DDE 或 OLE 服务器的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-442">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span>
          </span>
          <span data-ttu-id="f2b3f-443">如果没有链接，则返回<b>空</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-443">Returns <b>Empty</b> if there are no links.</span>
          </span>
          <span data-ttu-id="f2b3f-444">
            <b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-444">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="f2b3f-445">
            <para>数组的格式为所有类型但 publisher 和订阅者一维数组。返回的字符串包含链接类型的相应表示法中的链接源的名称。例如，DDE 链接使用"服务器 |文档 ！项目"语法。</para>
            <para>Publisher 和订阅者的链接，则返回的数组是二维。第一列的数组包含的版本，名称和第二列包含以文本形式的版本的引用。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-445">
              <para>The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</para>
              <para>For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p203">如果在单个工作表中显示共享工作簿的更改，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p203">
              <b>True</b> if changes to the shared workbook are shown on a separate worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-448">在服务器上锁定工作簿以防止修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-448">Locks the workbook on the server to prevent modification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p204">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p204">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-451">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-451">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-452">工作簿名称，该工作簿包含将合并到打开的工作簿中的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-452">The file name of the workbook that contains the changes to be merged into the open workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-453">将某工作簿中的改动合并到已打开的工作簿中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-453">Merges changes from one workbook into an open workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-454">返回顶级<see cref="T:Microsoft.Office.Interop.Excel.Model" />对象，它是一个工作簿数据模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-454">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-455">只读</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-455">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-456">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-456">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p207">如果工作簿以共享列表方式打开，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p207">
              <b>True</b> if the workbook is open as a shared list. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-459">保存工作簿作为共享列表，使用的<para><see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法。若要切换到独占模式从共享模式工作簿，请使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />方法。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-459">
              <para>To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method. To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p208">返回的对象的名称。只读的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p208">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-462">返回<see cref="T:Microsoft.Office.Interop.Excel.Names" />值，该值代表指定工作簿 （包括所有特定于工作表的名称） 中的所有名称的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-462">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span>
          </span>
          <span data-ttu-id="f2b3f-463">只读<b>Names</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-463">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-464">新建一个窗口或者创建指定窗口的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-464">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-465">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-465">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-466">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-466">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-467">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-467">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-468">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-468">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-469">Microsoft Excel 或 DDE/OLE 链接，从返回的名称<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-469">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="f2b3f-470">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-471">
            <b>True</b>打开文档以只读模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-471">
              <b>True</b> to open documents as read-only.</span>
          </span>
          <span data-ttu-id="f2b3f-472">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-472">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="f2b3f-473">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-473">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="f2b3f-474">链接类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-474">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-475">打开链接的支持文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-475">Opens the supporting documents for a link or links.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p213">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p213">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p214">返回或设置在打开指定工作簿时必须提供的密码。<b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p214">Returns or sets the password that must be supplied to open the specified workbook. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-480">合并和小写字母、 数字和符号的<para>使用强密码。弱密码不混合使用这些元素。强密码： Y6dh ！ et5。弱密码： House27。使用强密码，以便您无需记下您能记得。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-480">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p215">返回一个 <b>String</b> 类型的数值，该数值表示 Microsoft Excel 对指定的工作簿编写密码时使用的算法。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p215">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-483">
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />方法，以指定 Excel 是否对受密码保护的工作簿的文件属性加密。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-483">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p216">如果 Microsoft Excel 对受密码保护的指定工作簿的文件属性进行加密，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p216">
              <b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-486">
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />方法，以指定 Excel 是否对指定的受密码保护的工作簿的文件属性加密。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-486">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-487">返回一个指示 Microsoft Excel 使用加密的指定工作簿密码时的算法的密钥长度的<b>整数</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-487">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-488">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-488">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-489">
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />方法，以指定 Excel 是否对指定的受密码保护的工作簿的文件属性加密。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-489">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p218">返回一个 <b>String</b> 类型的数值，该数值指定在对指定工作簿加密时 Microsoft Excel 使用的算法加密提供程序的名称。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p218">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-492">
            <b>字符串</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-492">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-493">返回应用程序，不包括末尾的分隔符和应用程序的名称的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-493">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
          <span data-ttu-id="f2b3f-494">只读 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-494">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-495">返回<see cref="T:Microsoft.Office.Core.Permission" />对象，表示指定工作簿中的权限设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-495">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p220">如果在共享工作簿的用户个人视图中包括列表的筛选和排序设置，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p220">
              <b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p221">如果在共享工作簿的用户个人视图中包括打印设置，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p221">
              <b>True</b> if print settings are included in the user's personal view of the shared workbook. Read-write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-500">返回<see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" />指定工作簿中的集合，代表所有数据透视表缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-500">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-501">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-501">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-502">返回一个对象，表示的所有数据透视表集合的工作表上的报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-502">Returns an object that represents a collection of all the PivotTable reports on a worksheet.</span>
          </span>
          <span data-ttu-id="f2b3f-503">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-503">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-504">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-504">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName">
          <span data-ttu-id="f2b3f-505">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-506">忽略该参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-506">This argument is ignored.</span>
          </span>
          <span data-ttu-id="f2b3f-507">
            <b>Post</b>方法提示用户指定工作簿的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-507">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-p225">将指定工作簿发送到一个公共文件夹。本方法仅应用于与 Microsoft Exchange 服务器连接的 Microsoft Exchange 客户端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p225">Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p226">如果工作簿中的计算将按照屏幕显示的数字精度完成，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p226">
              <b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="f2b3f-512">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-513">从中开始打印的页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-513">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="f2b3f-514">如果省略此参数，则打印从开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-514">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="f2b3f-515">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-516">要打印的末页数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-516">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="f2b3f-517">如果省略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-517">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="f2b3f-518">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-519">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-519">The number of copies to print.</span>
          </span>
          <span data-ttu-id="f2b3f-520">如果省略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-520">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="f2b3f-521">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-522">
            <b>True</b>由 Microsoft Excel 调用之前打印对象的打印预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-522">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="f2b3f-523">
            <b>False</b>（或省略） 若要立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-523">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="f2b3f-524">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-524">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-525">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-525">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="f2b3f-526">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-527">
            <b>True</b>打印到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-527">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="f2b3f-528">如果<paramref name="PrToFileName" />未指定，则 Microsoft Excel 将提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-528">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="f2b3f-529">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-529">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-530">如果为 <b>True</b>，则逐份打印多个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-530">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="f2b3f-531">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-532">如果<paramref name="PrintToFile" />设置为<b>True</b>，则该参数指定要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-532">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-533">打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-533">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-534">
            <para>"页面"的说明中的<paramref name="From" />和<paramref name="To" />指打印页、 工作表或工作簿中不整个页面。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-534">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-535">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-535">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="f2b3f-536">启用对对象的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-536">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-537">按对象打印后的外观效果显示对象的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-537">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="f2b3f-538">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-538">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-539">指定工作表或工作簿的密码区分大小写的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-539">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-540">如果省略此参数，则可以取消的工作表或工作簿保护不使用密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-540">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="f2b3f-541">否则，您必须指定要取消的工作表或工作簿的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-541">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-542">如果您忘记了密码，则无法取消的工作表或工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-542">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-543">最好在安全的地方保留您的密码和其对应的文档名称的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-543">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="Structure">
          <span data-ttu-id="f2b3f-544">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-544">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-545">
            <b>True</b>保护工作簿 （工作表的相对位置） 的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-545">
              <b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span>
          </span>
          <span data-ttu-id="f2b3f-546">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-546">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Windows">
          <span data-ttu-id="f2b3f-547">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-547">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-548">
            <b>True</b>保护工作簿窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-548">
              <b>True</b> to protect the workbook windows.</span>
          </span>
          <span data-ttu-id="f2b3f-549">如果省略此参数，则不保护该窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-549">If this argument is omitted, the windows aren’t protected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-550">保护工作簿使其不被修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-550">Protects a workbook so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-551">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-552">指示已保存的文件的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-552">A string indicating the name of the saved file.</span>
          </span>
          <span data-ttu-id="f2b3f-553">您可以包括完整路径。否则，Microsoft Excel 将保存在当前文件夹中的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-553">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="f2b3f-554">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-555">指示要赋予该文件的保护密码区分大小写的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-555">A case-sensitive string indicating the protection password to be given to the file.</span>
          </span>
          <span data-ttu-id="f2b3f-556">应不超过 15 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-556">Should be no longer than 15 characters.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="f2b3f-557">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-558">指示此文件的写保护密码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-558">A string indicating the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="f2b3f-559">如果使用密码保存文件并打开该文件时，不输入密码，则该文件以只读方式打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-559">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="f2b3f-560">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-560">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-561">
            <b>True</b>推荐文件以只读方式打开打开该文件时显示一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-561">
              <b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="f2b3f-562">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-562">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-563">如果为  <b>True</b> ，则创建备份文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-563">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="f2b3f-564">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-564">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-565">一个字符串，表示文件共享保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-565">A string indicating the password to be used to protect the file for sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-566">保存工作簿并设置共享保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-566">Saves the workbook and protects it for sharing.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-567">合并和小写字母、 数字和符号的<para>使用强密码。弱密码不混合使用这些元素。强密码： Y6dh ！ et5。弱密码： House27。使用强密码，以便您无需记下您能记得。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-567">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-568">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-568">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p244">如果工作簿中的工作表次序处于保护状态，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p244">
              <b>True</b> if the order of the sheets in the workbook is protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p245">如果工作簿窗口受保护，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p245">
              <b>True</b> if the windows of the workbook are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-573">返回<see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" />集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-573">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          </span>
          <span data-ttu-id="f2b3f-574">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-574">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">
          <span data-ttu-id="f2b3f-575">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-575">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-576">要在更改日志中保留更改的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-576">The number of days that changes in the change log are to be retained.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="f2b3f-577">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-577">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-578">工作簿的共享的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-578">The password that unprotects the workbook for sharing.</span>
          </span>
          <span data-ttu-id="f2b3f-579">如果省略此参数的共享使用密码保护工作簿，提示用户输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-579">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-580">从更改日志中删除指定工作簿的条目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-580">Removes entries from the change log for the specified workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p249">如果对象以只读方式打开，则返回 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p249">Returns <b>True</b> if the object has been opened as read-only. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-583">
            <para>此属性仅用于链接到 SharePoint 网站的列表。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-583">
              <para>This property is used only for lists that are linked to a SharePoint site.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p250">如果工作簿以建议只读方式保存，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p250">
              <b>True</b> if the workbook was saved as read-only recommended. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-586">
            <para>Microsoft Excel 以只读方式已保存建议的工作簿打开时，显示一条消息，建议您打开工作簿以只读模式。</para>
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法来更改此属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-586">
              <para>When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</para>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-587">导致发生，前景智能标记检查自动批注以前没有注释过的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-587">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-588">刷新指定工作簿中的所有外部数据区域和数据透视表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-588">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-589">
            <para>对象，具有<see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" />属性设置为<b>True</b>在后台进行刷新。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-589">
              <para>Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="f2b3f-590">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-590">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-591">指定何时拒绝所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-591">Specifies when all the changes are rejected.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="f2b3f-592">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-592">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-593">指定由何人拒绝所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-593">Specifies by whom all the changes are rejected.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="f2b3f-594">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-594">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-595">指定在何处拒绝所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-595">Specifies where all the changes are rejected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-596">取消指定共享工作簿中的所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-596">Rejects all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">
          <span data-ttu-id="f2b3f-597">所需<see cref="T:Microsoft.Office.Core.MsoEncoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-597">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          </span>
          <span data-ttu-id="f2b3f-598">要应用于工作簿的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-598">The encoding that is to be applied to the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-599">使用指定的文档编码方式，重新加载基于 HTML 文档的工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-599">Reloads a workbook based on an HTML document, using the specified document encoding.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-600">
            <para>仅适用于 HTML 的<b>msoEncoding</b>常量才能使用<b>ReloadAs</b>方法工作。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-600">
              <para>Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">
          <span data-ttu-id="f2b3f-601">之一<see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />，指示要删除的信息类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-601">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-602">从工作簿中删除指定类型的所有信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-602">Removes all information of the specified type from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p255">如果能从指定的工作簿中删除个人信息，则该值为 <b>True</b>。默认值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p255">
              <b>True</b> if personal information can be removed from the specified workbook. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="f2b3f-606">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-606">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-607">用户索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-607">The user index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-608">断开指定用户与共享工作簿的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-608">Disconnects the specified user from the shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p257">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p257">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p258">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p258">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage">
          <span data-ttu-id="f2b3f-613">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-614">
            <b>False</b>不显示消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-614">
              <b>False</b> does not display the message.</span>
          </span>
          <span data-ttu-id="f2b3f-615">如果显示消息，<b>则返回 true</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-615">
              <b>True</b> displays the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-616">向已发送候审的工作簿的作者发送电子邮件消息，通知审阅者已经完成工作簿的审阅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-616">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-617">使用<para><see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />方法以启动协作工作簿的审阅。如果不属于协作审阅阶段的工作簿执行<b>ReplyWithChanges</b>方法，则用户会收到错误。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-617">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook. If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-618">返回<see cref="T:Microsoft.Office.Interop.Excel.Research" />对象，表示工作簿的信息检索服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-619">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-619">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-620">
            <b>Research</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-620">
              <b>Research</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-621">将调色板重新设为默认颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-621">Resets the color palette to the default colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-622">返回已作为共享列表打开期间保存工作簿的次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-622">Returns the number of times the workbook has been saved while open as a shared list.</span>
          </span>
          <span data-ttu-id="f2b3f-623">以独占模式打开工作簿时，此属性返回 0 （零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-623">If the workbook is open in exclusive mode, this property returns 0 (zero).</span>
          </span>
          <span data-ttu-id="f2b3f-624">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-624">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-625">
            <para>
              <b>RevisionNumber</b>属性更新仅在保存远程副本时不保存工作簿的本地副本时。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-625">
              <para>The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-626">使用工作簿的当前传送名单传送工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-626">Routes the workbook, using the workbook's current routing slip.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-627">
            <para>路由工作簿设置<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />属性设置为<b>True</b>。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-627">
              <para>Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p262">如果指定工作簿已经传送给下一个收件人，则该值为 <b>True</b>；如果该工作簿需要进行传送，则该值为 <b>False</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p262">
              <b>True</b> if the workbook has been routed to the next recipient. <b>False</b> if the workbook needs to be routed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-631">
            <para>如果工作簿不传送给当前收件人，则该值总是<b>False</b> （例如，如果文档有没有传送名单，或传送名单刚创建）。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-631">
              <para>If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-632">返回<see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" />对象，表示工作簿的传送名单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-632">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-633">如果没有传送名单读取此属性将导致出错 (检查<see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />属性第一个)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-633">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span>
          </span>
          <span data-ttu-id="f2b3f-634">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-634">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">
          <span data-ttu-id="f2b3f-635">所需<see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-635">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-636">运行 Auto_Open、 Auto_Close、 Auto_Activate 或 Auto_Deactivate 宏附加到工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-636">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-637">向后兼容包含此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-637">This method is included for backward compatibility.</span>
          </span>
          <span data-ttu-id="f2b3f-638">您应使用打开，关闭 Activate 和 Deactivate 事件而不是这些宏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-638">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-639">保存对指定工作簿所做的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-639">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-640">
            <para>若要打开工作簿文件，请使用<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法。</para>
            <para>要将工作簿标记为已保存，但不将其写入磁盘，设置其<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />属性设置为<b>True</b>。</para>
            <para>首次保存工作簿，使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法，以指定文件的名称。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-640">
              <para>To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</para>
              <para>The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-641">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-642">一个指示要保存的文件的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-642">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="f2b3f-643">您可以包括完整路径。否则，Microsoft Excel 将保存在当前文件夹中的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-643">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="f2b3f-644">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-644">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-645">要保存文件时使用的文件格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-645">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="f2b3f-646">一个有效的选项列表，请参阅<see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-646">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="f2b3f-647">对于现有文件，默认格式是指定; 的最后一个文件格式新的文件，默认值为版本的 Excel 正在使用的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-647">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="f2b3f-648">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-648">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-649">它是一个区分大小写的字符串（最长不超过 15 个字符），用于指定文件的保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-649">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="f2b3f-650">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-651">String 值，该值指示此文件的写保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-651">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="f2b3f-652">如果使用密码保存文件，打开该文件时，不输入密码以只读方式打开文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-652">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="f2b3f-653">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-653">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-654">
            <b>True</b>建议以只读方式打开该文件打开该文件时显示一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-654">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="f2b3f-655">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-655">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-656">如果为  <b>True</b> ，则创建备份文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-656">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AccessMode">
          <span data-ttu-id="f2b3f-657">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-657">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          </span>
        </param>
        <param name="ConflictResolution">
          <span data-ttu-id="f2b3f-658">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="f2b3f-659">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-659">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-660">
            <b>True</b>将此工作簿添加到列表中最近使用的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-660">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="f2b3f-661">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-661">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="f2b3f-662">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-662">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-663">不在美国英语版的 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-663">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="f2b3f-664">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-665">不在美国英语版的 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-665">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="f2b3f-666">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-666">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-667">
            <b>True</b>将保存对 Microsoft Excel （包括控制面板设置） 的语言文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-667">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="f2b3f-668">
            <b>False</b>（默认值） 保存文件，针对语言的 Visual Basic for Applications (VBA) （即通常美国英语除非从运行 Workbooks.Open VBA 项目是旧国际化的 XL5/95 VBA 项目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-668">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-669">在另一不同文件中保存对工作簿所做的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-669">Saves changes to the workbook in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-670">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-670">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-671">一个指示要保存的文件的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-671">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="f2b3f-672">您可以包括完整路径。否则，Microsoft Excel 将保存在当前文件夹中的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-672">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="f2b3f-673">所需<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-673">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="f2b3f-674">应用于数据的架构映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-674">The schema map to apply to the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-675">将已映射到指定 XML 架构映射的数据导出到 XML 数据文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-675">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-676">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para>如果 Excel 无法导出与指定的架构映射的数据，此方法将导致运行时错误。若要检查 Excel 是否可以使用指定的架构映射导出数据，请使用<see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-676">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>This method will result in a run-time error if Excel cannot export data with the specified schema map. To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="f2b3f-677">必需。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-677">Required.</span>
          </span>
          <span data-ttu-id="f2b3f-678">指定副本的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-678">Specifies the file name for the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-679">将指定工作簿的副本保存到文件，但不修改内存中的打开工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-679">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p278">如果指定工作簿从上次保存至今未发生过更改，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p278">
              <b>True</b> if no changes have been made to the specified workbook since it was last saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-682">
            <para>如果工作簿从未保存过，其<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" />属性返回一个空字符串 ("")。</para>
            <para>您可以设置此属性设置为<b>True</b> ，如果您想要关闭已修改的工作簿，而不保存或提示保存它。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-682">
              <para>If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</para>
              <para>You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p279">如果 Microsoft Excel 保存指定工作簿的外部链接值，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p279">
              <b>True</b> if Microsoft Excel saves external link values with the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="f2b3f-685">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-685">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="f2b3f-686">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-686">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-687">一个字符串，表示的传真号码和将向其发送传真的人员的电子邮件地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-687">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span>
          </span>
          <span data-ttu-id="f2b3f-688">用分号分隔多个收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-688">Separate multiple recipients with a semicolon.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="f2b3f-689">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-690">String 值，该值表示传真文档的主题行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-690">A string that represents the subject line for the faxed document.</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="f2b3f-691">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-691">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-692">
            <b>为</b> 传真邮件发送传真之前显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-692">
              <b>True</b> displays the fax message before sending it.</span>
          </span>
          <span data-ttu-id="f2b3f-693">
            <b>False</b> ，则发送传真而不显示传真邮件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-693">
              <b>False</b> sends the fax without displaying the fax message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-694">将工作表作为传真发送给指定的收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-694">Sends a worksheet as a fax to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-695">
            <para>使用<b>SendFaxOverInternet</b>方法要求用户的计算机上启用传真服务。</para>用于指定中的传真号码的格式
          <para><paramref name="Recipients" />参数是<paramref name="recipientsfaxnumber@usersfaxprovider" />或<paramref name="recipientsname@recipientsfaxnumber" />。您可以访问用户的传真提供商信息使用以下注册表路径：</para><para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para><para>使用此注册表路径上 FaxAddress 项的值来确定若要对收件人使用的格式。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-695">
              <para>Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</para>
              <para>The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />. You can access the user's fax provider information using the following registry path:</para>
              <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
              <para>Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="f2b3f-696">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-697">一个字符串，列出向其发送邮件的人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-697">A string that lists the people to whom to send the message.</span>
          </span>
          <span data-ttu-id="f2b3f-698">这可能是未解析的名称和别名的电子邮件电话簿或完整电子邮件地址中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-698">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span>
          </span>
          <span data-ttu-id="f2b3f-699">用分号 (;) 分隔多个收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-699">Separate multiple recipients with a semicolon (;).</span>
          </span>
          <span data-ttu-id="f2b3f-700">如果为空和<paramref name="ShowMessage" />为<b>False</b>，，您将收到一条错误消息，并且不会发送邮件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-700">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="f2b3f-701">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-701">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-702">邮件主题字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-702">A string for the subject of the message.</span>
          </span>
          <span data-ttu-id="f2b3f-703">如果为空，则将为主题： 请查看"<paramref name="filename" />"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-703">If left blank, the subject will be: Please review "<paramref name="filename" />".</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="f2b3f-704">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-704">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-705">一个 <b>布尔</b> 值，该值指示是否应执行该方法时显示该消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-705">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span>
          </span>
          <span data-ttu-id="f2b3f-706">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-706">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-707">如果设置为 <b>False</b> ，邮件自动发送给收件人，而不先向发送者显示邮件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-707">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span>
          </span>
        </param>
        <param name="IncludeAttachment">
          <span data-ttu-id="f2b3f-708">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-708">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-709">一个 <b>布尔</b> 值，该值指示邮件是否应包含附件或到服务器位置的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-709">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span>
          </span>
          <span data-ttu-id="f2b3f-710">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-710">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-711">如果设置为 <b>False</b> 时，该文档必须存储在共享位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-711">If set to <b>False</b>, the document must be stored at a shared location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-712">在电子邮件中将供审阅的工作簿发送到指定的收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-712">Sends a workbook in an e-mail message for review to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-713">
            <para>
              <b>SendForReview</b>方法启动协作审阅阶段。使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />方法来结束审阅阶段。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-713">
              <para>The <b>SendForReview</b> method starts a collaborative review cycle. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="f2b3f-714">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-714">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-715">如果有多个收件人，为文本，或作为数组的文本字符串指定收件人的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-715">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span>
          </span>
          <span data-ttu-id="f2b3f-716">必须指定至少一个收件人，和所有收件人都添加到收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-716">At least one recipient must be specified, and all recipients are added as To recipients.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="f2b3f-717">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-718">指定邮件的主题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-718">Specifies the subject of the message.</span>
          </span>
          <span data-ttu-id="f2b3f-719">如果省略此参数，则使用该文档的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-719">If this argument is omitted, the document name is used.</span>
          </span>
        </param>
        <param name="ReturnReceipt">
          <span data-ttu-id="f2b3f-720">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-720">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-721">
            <b>True</b>请求回执。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-721">
              <b>True</b> to request a return receipt.</span>
          </span>
          <span data-ttu-id="f2b3f-722">
            <b>False</b>不以请求回执。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-722">
              <b>False</b> not to request a return receipt.</span>
          </span>
          <span data-ttu-id="f2b3f-723">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-723">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-724">使用已安装的邮件系统发送工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-724">Sends the workbook by using the installed mail system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">
          <span data-ttu-id="f2b3f-725">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-725">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Priority">
          <span data-ttu-id="f2b3f-726">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-726">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-p290">您查询的是 Macintosh 专用的 Visual Basic 关键词。有关该关键词的帮助信息，请查阅 Microsoft Office Macintosh 版的语言参考帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p290">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-729">返回<see cref="T:Microsoft.Office.Core.ServerPolicy" />对象，表示指定运行 2nd_OSS_NoVersion 的服务器上存储的工作簿的策略 2007年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-729">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span>
          </span>
          <span data-ttu-id="f2b3f-730">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-730">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-731">
            <b>ServerPolicy</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-731">
              <b>ServerPolicy</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p292">允许开发人员与服务器上显示的工作簿中已发布对象的列表进行交互。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p292">Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-734">
            <para>此属性返回无法发布到 Excel Services 的项目的集合。 它可以包含表、 数据透视表、 命名区域和图表。 它还可以包含工作表，只要不是混和的表和之前提到的列表。 </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-734">
              <para>This property returns a collection of the items that could be published to Excel Services.  It can include Tables, PivotTables, Named Ranges, and Charts.  It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.  </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-735">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-735">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-736">返回从 DDE/OLE 链接的名称<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-736">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="f2b3f-737">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-737">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-738">更新链接时所运行过程的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-738">The name of the procedure to be run when the link is updated.</span>
          </span>
          <span data-ttu-id="f2b3f-739">这可以是 Microsoft Excel 4.0 宏或 Visual Basic 过程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-739">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span>
          </span>
          <span data-ttu-id="f2b3f-740">将此参数设置为空字符串 ("") 以指示更新链接时，应运行任何过程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-740">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-741">设置每当更新 DDE 链接时所运行过程的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-741">Sets the name of a procedure that runs whenever a DDE link is updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider">
          <span data-ttu-id="f2b3f-742">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-742">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-743">区分大小写的加密服务提供商的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-743">A case sensitive string of the encryption provider.</span>
          </span>
        </param>
        <param name="PasswordEncryptionAlgorithm">
          <span data-ttu-id="f2b3f-744">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-744">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-745">区分大小写的算法简称的字符串（例如“RC4”）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-745">A case sensitive string of the algorithmic short name (i.e. "RC4").</span>
          </span>
        </param>
        <param name="PasswordEncryptionKeyLength">
          <span data-ttu-id="f2b3f-746">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-746">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-747">加密密钥的长度，为 8 的倍数（40 或更大）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-747">The encryption key length which is a multiple of 8 (40 or greater).</span>
          </span>
        </param>
        <param name="PasswordEncryptionFileProperties">
          <span data-ttu-id="f2b3f-748">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-748">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-749">如果为 <b>True</b>（默认值），则加密文件属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-749">
              <b>True</b> (default) to encrypt file properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-750">使用密码来设置对工作簿进行加密的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-750">Sets the options for encrypting workbooks using passwords.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-751">
            <para>
              <paramref name="PasswordEncryptionProvider" />， <paramref name="PasswordEncryptionAlgorithm" />，和<paramref name="PasswordEncryptionKeyLength" />参数不是彼此独立。选定的加密提供程序限制的算法和密钥长度，可以选择的设置。</para>
            <para>的<paramref name="PasswordEncryptionKeyLength" />有参数是无固有限制范围的密钥长度。区域由还决定加密算法加密服务提供程序。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-751">
              <para>The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other. A selected encryption provider limits the set of algorithms and key length that can be chosen.</para>
              <para>For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length. The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-752">返回<see cref="T:Microsoft.Office.Core.SharedWorkspace" />对象，表示指定的文档所在的文档工作区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-752">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span>
          </span>
          <span data-ttu-id="f2b3f-753">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-753">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-754">返回<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />值，该值代表指定工作簿中的所有工作表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-754">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-755">只读<b>Sheets</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-755">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p301">如果“冲突的历史记录”工作表在作为共享列表打开的工作簿中可见，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p301">
              <b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-758">如果指定的工作簿不是作为共享列表打开<para>，该属性无效。若要确定工作簿是否处于打开状态以共享清单，请使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />属性。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-758">
              <para>If the specified workbook isn't open as a shared list, this property fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-759">此属性控制数据透视图筛选窗格的可见性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-759">This property controls the visibility of the PivotChart Filter Pane.</span>
          </span>
          <span data-ttu-id="f2b3f-760">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-760">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-761">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-761">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-762">
            <para>此属性的控件 （切换 on/off） 数据透视图筛选窗格的可见性。 使其可见，必须选择<b>数据透视图</b>对象。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-762">
              <para>This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).  In order for it to be visible, a <b>PivotChart</b> object must be selected. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p303">如果该属性值为 <b>True</b>（默认），则能显示数据透视表字段列表。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p303">
              <b>True</b> (default) if the PivotTable field list can be shown. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p304">返回工作簿的数字签名。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p304">Returns the digital signatures for a workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SignatureSet" />
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-767">
            <para>进行数字签名 Excel2007 工作簿和验证其他签名，则需要 Microsoft CryptoAPI 和唯一的数字签名证书。CryptoAPI 安装 Microsoft Internet Explorer 4.01 或更高版本。您可以从证书颁发机构获取数字签名证书。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-767">
              <para>To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate. The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later. You can obtain a digital signature certificate from a certification authority. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-768">获取<see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" />对象关联的工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-768">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b3f-769">
            <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" />对象关联的工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-769">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-770">
            <para>读/写。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-770">
              <para>Read/write.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-771">返回<see cref="T:Microsoft.Office.Core.SmartDocument" />对象值，该值代表智能文档解决方案的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-771">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span>
          </span>
          <span data-ttu-id="f2b3f-772">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-772">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-773">返回<see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" />对象，代表用智能标记可执行的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-773">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-774">返回<see cref="T:Microsoft.Office.Interop.Excel.Styles" />值，该值代表指定工作簿中的所有样式的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-775">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-775">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-776">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-776">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-777">返回<see cref="T:Microsoft.Office.Core.Sync" />提供对一部分文档工作区的文档访问的方法和属性的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-777">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-778">返回<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />指的是当前工作簿中使用的样式的当前工作簿集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-778">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-779">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-779">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
        </value>
        <remarks>
          <span data-ttu-id="f2b3f-780">
            <para>您可以处理由该属性返回的表样式。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-780">
              <para>You can manipulate the table styles returned by the property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p308">如果工作簿保存为模板时删除外部数据引用，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p308">
              <b>True</b> if external data references are removed when the workbook is saved as a template. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p309">返回应用于当前工作簿的主题。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p309">Returns the theme applied to the current workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.OfficeTheme" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-785">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-785">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-786">打开或关闭，则切换窗体设计模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-786">Toggles form design mode on or off.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-787">
            <para>当 Excel 是在窗体设计模式下，将显示控件工具箱工具栏。您可以使用此工具栏插入 ActiveX 控件，例如命令按钮、 滚动条和选项按钮。在窗体设计模式下，不运行事件过程，并且单击嵌入的控件时，显示控件的尺寸控点。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-787">
              <para>When Excel is in form design mode, the Control Toolbox toolbar is displayed. You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons. In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="f2b3f-788">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-789">一个字符串，用于取消的工作表或工作簿的保护密码区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-789">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-790">如果表或工作簿不受密码保护，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-790">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="f2b3f-791">如果省略此参数受密码保护的工作表时，系统将提示您输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-791">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="f2b3f-792">如果省略此参数受密码保护的工作簿，该方法将失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-792">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-p311">取消工作表或工作簿的保护。如果工作表或工作簿不是受保护的，则此方法不起作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p311">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-795">如果您忘记了密码<para>，则无法取消的工作表或工作簿。它是安全的就地保留您的密码和其对应的文档名称的列表，最好。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-795">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword">
          <span data-ttu-id="f2b3f-796">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-797">工作簿密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-797">The workbook password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-798">关闭共享保护功能并保存工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-798">Turns off protection for sharing and saves the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-799">合并和小写字母、 数字和符号的<para>使用强密码。弱密码不混合使用这些元素。强密码： Y6dh ！ et5。弱密码： House27。使用强密码，以便您无需记下您能记得。</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-799">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p313">如果磁盘上的工作簿版本比内存中的当前工作簿副本新，则用磁盘上保存的工作簿文件更新只读工作簿。如果载入工作簿之后，磁盘上的副本无改变，则不必重新载入内存中的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p313">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-802">
            <para>此方法是很有用以只读方式打开用户 A 的工作簿并将其打开以读/写用户 b。如果用户 B 将新版本的工作簿保存到磁盘，而用户 A 仍工作簿打开，用户 A 无法获取更新的副本，而不关闭并重新打开工作簿并丢失视图设置。<b>UpdateFromFile</b>方法更新磁盘文件中的工作簿的内存中副本。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-802">
              <para>This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings. The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="f2b3f-803">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-803">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-804">要更新，因为从返回的 Microsoft Excel 或 DDE/OLE 链接的名称<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-804">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="f2b3f-805">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-805">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-806">更新 Microsoft Excel 链接、DDE 链接或 OLE 链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-806">Updates a Microsoft Excel, DDE, or OLE link (or links).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="f2b3f-807">
            <para>调用<b>UpdateLink</b>方法时不带任何参数，Excel 将默认更新所有工作表链接。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-807">
              <para>When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-808">返回或设置<see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" />常量，指示更新设置工作簿的嵌入 OLE 链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-808">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span>
          </span>
          <span data-ttu-id="f2b3f-809">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-809">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p316">如果 Microsoft Excel 对工作簿中的远程引用进行更新，则该值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p316">
              <b>True</b> if Microsoft Excel updates remote references in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-812">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-812">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-813">返回 1 开始，二维数组，其中提供有关每个用户的工作簿的信息以共享清单模式打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-813">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span>
          </span>
          <span data-ttu-id="f2b3f-814">数组第二维的第一个元素为用户名，第二个元素是用户打开工作簿的日期和时间，第三个元素是一个表示清单类型的数字（1 表示独占，2 表示共享）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-814">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span>
          </span>
          <span data-ttu-id="f2b3f-815">只读 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-815">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-816">
            <para>
              <b>UserStatus</b>属性不返回有关以只读方式打开指定工作簿的用户的信息。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-816">
              <para>The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-817">
            <b>True</b>如果工作簿使用搜索与匹配模式的整个单元格的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-817">
              <b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span>
          </span>
          <span data-ttu-id="f2b3f-818">只读的<b>boolean 类型的值</b>(C# 中<b>bool</b> )。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-818">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-819">
            <b>True</b>如果工作簿启用通配符字符的字符串比较和搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-819">
              <b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span>
          </span>
          <span data-ttu-id="f2b3f-820">只读的<b>boolean 类型的值</b>(C# 中<b>bool</b> )。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-820">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p320">如果指定工作簿的 Visual Basic for Applications 项目已经过数字签名，则该属性的值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p320">
              <b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p321">返回一个 <b>VBProject</b> 对象，该对象表示指定工作簿中的 Visual Basic 项目。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p321">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-825">返回<see cref="T:Microsoft.Office.Interop.Excel.WebOptions" />集合，其中包含将文档保存为网页或打开网页时使用由 Microsoft Excel 工作簿级属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-825">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span>
          </span>
          <span data-ttu-id="f2b3f-826">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-826">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-827">以网页的形式显示对指定工作簿的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-827">Displays a preview of the specified workbook as it would look if saved as a Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-828">返回<see cref="T:Microsoft.Office.Interop.Excel.Windows" />值，该值代表指定工作簿中的所有窗口的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-828">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-829">只读<b>Windows</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-829">Read-only <b>Windows</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-830">
            <para>此属性返回可见和隐藏的窗口的集合。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-830">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-831">返回<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />值，该值代表指定工作簿中的所有工作表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-832">只读<b>Sheets</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-832">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-833">
            <para>使用此属性，而不使用对象识别符返回活动工作簿中的所有工作表。</para>
            <para>此属性不返回宏表; 使用<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />属性或<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />属性可返回这些表。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-833">
              <para>Using this property without an object qualifier returns all the worksheets in the active workbook.</para>
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p325">为工作簿的写密码返回或设置一个 <b>String</b> 类型的数值。可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p325">Returns or sets a <b>String</b> for the write password of a workbook. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p326">如果指定工作簿是写保护的，则该属性的值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p326">
              <b>True</b> if the workbook is write-reserved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-838">
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法，以便设置此属性。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-838">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-p327">返回当前对指定工作簿有写权限的用户的名称。<b>String</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-p327">Returns the name of the user who currently has write permission for the workbook. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="f2b3f-841">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-841">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-842">统一资源定位器 (URL) 或 XML 数据文件的统一命名约定 (UNC) 路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-842">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="f2b3f-843">所需<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-843">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="f2b3f-844">导入文件时要应用的架构映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-844">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="f2b3f-845">可选属性，类型为 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-845">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-846">如果不指定一个值<paramref name="Destination" />参数，则此参数指定是否覆盖已被映射到中指定的架构映射的数据<paramref name="ImportMap" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-846">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="f2b3f-847">设置为<b>True</b>以覆盖的数据或<b>False</b>可将新的数据追加到现有数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-847">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="f2b3f-848">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-848">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-849">如果为指定值<paramref name="Destination" />参数，则此参数指定是否要覆盖现有数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-849">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="f2b3f-850">设置为<b>True</b>以覆盖现有数据或<b>False</b>可取消导入，如果将覆盖数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-850">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="f2b3f-851">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-851">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="f2b3f-852">可选<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-852">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="f2b3f-853">数据将导入新的 XML 列表指定的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-853">The data will be imported into a new XML list at the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-854">将 XML 数据文件导入当前工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-854">Imports an XML data file into the current workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-855">返回<see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-855">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="f2b3f-856">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para>不指定一个值<paramref name="Destination" />参数，如果您想要数据导入到现有映射。</para>
            <para>以下条件会导致<b>XMLImport</b>方法产生运行时错误：</para>
            <list type="bullet">
              <item>
                <description>指定的 XML 数据包含语法错误。</description>
              </item>
              <item>
                <description>导入过程被取消，因为指定的数据不能容纳到工作表。</description>
              </item>
            </list>
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />方法<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象导入先前加载到内存中的 XML 数据。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-856">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="f2b3f-857">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-857">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-858">要导入的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-858">The data to import.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="f2b3f-859">所需<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-859">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="f2b3f-860">导入文件时要应用的架构映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-860">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="f2b3f-861">可选属性，类型为 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-861">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-862">如果不指定一个值<paramref name="Destination" />参数，则此参数指定是否覆盖已被映射到中指定的架构映射的数据<paramref name="ImportMap" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-862">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="f2b3f-863">设置为<b>True</b>以覆盖的数据或<b>False</b>可将新的数据追加到现有数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-863">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="f2b3f-864">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-864">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="f2b3f-865">如果为指定值<paramref name="Destination" />参数，则此参数指定是否要覆盖现有数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-865">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="f2b3f-866">设置为<b>True</b>以覆盖现有数据或<b>False</b>可取消导入，如果将覆盖数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-866">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="f2b3f-867">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-867">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="f2b3f-868">可选<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-868">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="f2b3f-869">数据将导入新的 XML 列表中指定的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-869">The data will be imported into a new XML list in the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b3f-870">导入先前加载到内存 XML 数据流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-870">Imports an XML data stream that has been previously loaded into memory.</span>
          </span>
          <span data-ttu-id="f2b3f-871">返回<see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-871">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="f2b3f-872">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para>不指定一个值<paramref name="Destination" />参数，如果您想要数据导入到现有映射。</para>
            <para>以下条件会导致<b>XMLImport</b>方法产生运行时错误：</para>
            <list type="bullet">
              <item>
                <description>指定的 XML 数据包含语法错误。</description>
              </item>
              <item>
                <description>导入过程被取消，因为指定的数据不能容纳到工作表。</description>
              </item>
            </list>
            <para>使用<see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />方法<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />对象的 XML 数据文件导入当前工作簿。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-872">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-873">返回<see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" />集合，代表已添加到指定的工作簿中的架构映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-873">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-874">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-874">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-875">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-875">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b3f-876">返回<see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" />值，该值代表指定工作簿中包含的 XML 命名空间的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-876">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span>
          </span>
          <span data-ttu-id="f2b3f-877">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-877">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="f2b3f-878">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b3f-878">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>