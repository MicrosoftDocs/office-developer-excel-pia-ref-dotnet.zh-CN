<Type Name="ControlFormat" FullName="Microsoft.Office.Interop.Excel.ControlFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d88e80486b6e3c8db83afbc148105146372d3b01" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20578279" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ControlFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ControlFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ControlFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ControlFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ControlFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024440-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含 Microsoft Excel 控件属性。</summary>
    <remarks>
      <para>使用<see cref="P:Microsoft.Office.Interop.Excel.Shape.ControlFormat" />属性可返回<b>ControlFormat</b>对象。</para>
      <para>如果形状不是控件，则<b>ControlFormat</b>属性失效，该控件不列表框中，如果<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" />属性失败。</para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public int this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仅供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public void AddItem (string Text, object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddItem([in]string Text, [in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddItem (Text As String, Optional Index As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(851)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 要添加的文本</param>
        <param name="Index">可选的<b>对象</b>。 新条目的位置。 如果列表输入项数目少于指定的索引，从列表末尾的空白项目添加到指定的位置。 如果省略此参数，则项目追加到现有的列表。</param>
        <summary>为列表框或组合框添加项。</summary>
        <remarks>
          <para>使用此方法清除任何由指定的区域<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" />属性。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</para>
          <para>
            <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。 例如，Microsoft Excel 具有 XCEL 的创建者代码。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownLines">
      <MemberSignature Language="C#" Value="public int DropDownLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.DropDownLines" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(848)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(848)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(848)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置的列表在组合框的下拉部分中显示的行数。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为<b>true</b>的对象启用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public int LargeChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeChange As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeChange { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(845)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(845)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(845)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置滚动框增加或减少页面滚动 （当用户单击滚动条正文区域中） 的金额。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedCell">
      <MemberSignature Language="C#" Value="public string LinkedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LinkedCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.LinkedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkedCell As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LinkedCell { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置工作表区域链接到控件的值。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果单元格中放置一个值，该控件将采用此值。 同样，如果您更改控件的值，该值也被放在单元格。</para>
          <para>不能将该属性应用于多选列表框。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public object List[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object List(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.List(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ List[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">可选的<b>对象</b>。 设置或返回单个文本条目的索引号。 如果省略此参数，则整个列表返回或设置为一个字符串数组。</param>
        <summary>以字符串数组的形式，返回或设置指定列表框或组合框中的文字项，也可返回或设置单个文字项。如果指定列表框中没有数据项将出错。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性设置清除任何由指定的区域<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" />属性。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListCount">
      <MemberSignature Language="C#" Value="public int ListCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.ListCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(849)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(849)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(849)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列表框或组合框中返回的项数。 如果列表中不有任何条目，则返回 0 （零）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFillRange">
      <MemberSignature Language="C#" Value="public string ListFillRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListFillRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ListFillRange As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListFillRange { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(847)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(847)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(847)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置用于填充指定的列表框的工作表区域。</summary>
        <value>To be added.</value>
        <remarks>
          <para>设置该属性会破坏列表框中的任何现有列表。</para>
          <para>Microsoft Excel 阅读区域中的每一单元格的内容，并将单元格值插入到列表框中。列表对该区域中单元格的修订进行追踪。</para>
          <para>如果列表框的列表中创建与<see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" />方法，此属性返回空字符串 ("")。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIndex">
      <MemberSignature Language="C#" Value="public int ListIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.ListIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ListIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(850)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(850)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(850)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置在列表框或组合框的当前所选的项目的索引号。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockedText">
      <MemberSignature Language="C#" Value="public bool LockedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.LockedText" />
      <MemberSignature Language="VB.NET" Value="Public Property LockedText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LockedText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(616)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(616)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(616)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b>指定对象中的文本被锁定以防止更改受保护工作簿时。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public int Max { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Max" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Max" />
      <MemberSignature Language="VB.NET" Value="Public Property Max As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Max { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置滚动条或微调框的最大值的范围。 大于此最大值的值的情况下，不会滚动条或微调框。</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>Max</b>属性的值必须大于的值<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.Min" />属性。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public int Min { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Min" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Min" />
      <MemberSignature Language="VB.NET" Value="Public Property Min As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Min { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置滚动条或微调框的最小值范围。 值小于此最小值的情况下，不会滚动条或微调框。</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>Min</b>属性的值必须为的值小于<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.Max" />属性。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public int MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MultiSelect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MultiSelect { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(32)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(32)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(32)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定的列表框的选择模式。 可以是下列常量之一： <b>xlNone</b>、 <b>xlSimple</b>或<b>xlExtended</b>。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果为单项选择 (<b>xlNone</b>)，则每次只允许选择一项。单击鼠标或按空格键将取消原先的选择项，并选定正在单击的项。</para>
          <para>简单 multiselect (<b>xlSimple</b>) 切换选定内容中列表项上用鼠标单击或项上焦点时按空格键。 此模式适合于选取的列表，这通常是在选择多个项。</para>
          <para>扩展 multiselect (<b>xlExtended</b>) 通常类似单项选择列表框。 当您单击项目时，您将取消所有其他选择。 在单击鼠标或按箭头键的同时按住 shift 键，当您选择项目按顺序从当前项。 在单击鼠标时按住 CTRL，当您向列表添加单个项目。 此模式适合，允许但不是经常使用多个项目时。</para>
          <para>您可以使用<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.Value" />或<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListIndex" />属性返回或设置单项选择列表框中选定的项。</para>
          <para>不能使用链接多选列表框<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.LinkedCell" />属性。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintObject">
      <MemberSignature Language="C#" Value="public bool PrintObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.PrintObject" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为<b>true</b>时打印文档将打印指定对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllItems">
      <MemberSignature Language="C#" Value="public void RemoveAllItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllItems() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveAllItems" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllItems ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除 Microsoft Excel 列表框或组合框中的所有数据项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (int Index, object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem([in]int32 Index, [in]object Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveItem(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (Index As Integer, Optional Count As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(852)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="Count" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <b>必选。</b> 要删除的第一个项目数。 有效值是介于 1 到列表中的项目数 (返回<see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListCount" />属性)。</param>
        <param name="Count">可选的<b>对象</b>。 要删除的项目数从项目开始<paramref name="Index" />。 如果省略此参数，则会删除一个项目。 如果<paramref name="Index" />  +  <paramref name="Count" />在列表中，从所有项目的项目数超过<paramref name="Index" />通过列表末尾已没有发生错误。</param>
        <summary>从列表框或组合框中删除一个或多个数据项。</summary>
        <remarks>
          <para>如果指定对象定义了填充区域，则该方法无效。</para>
          <para>使用<see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveAllItems" />方法，以从 Microsoft Excel 列表框或组合框中删除的所有条目。</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public int SmallChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SmallChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallChange As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SmallChange { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(844)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(844)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(844)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置的金额滚动条或微调框增加或减少滚动一行 （当用户单击箭头）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ControlFormat.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定的控件格式的名称。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>