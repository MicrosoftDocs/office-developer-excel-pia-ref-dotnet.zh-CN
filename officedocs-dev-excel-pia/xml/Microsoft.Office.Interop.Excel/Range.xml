<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e87541caefc40cd684f69da1a8301eb9348e7fbc" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20584964" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="59ac6-101">代表某一单元格、某一行、某一列、某一选定区域（该区域可包含一个或若干连续单元格区域），或者某一三维区域。</span>
      <span class="sxs-lookup">
        <span data-stu-id="59ac6-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary>
          <span data-ttu-id="59ac6-102">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-102">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary>
          <span data-ttu-id="59ac6-103">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="59ac6-104">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-104">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-105">激活必须内当前所选内容的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-105">Activates a single cell, which must be inside the current selection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-106">
            <para>要选择单元格区域，请使用<see cref="M:Microsoft.Office.Interop.Excel.Range.Select" />方法。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-106">
              <para>To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="59ac6-107">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-108">批注文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-108">The comment text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-109">为区域添加批注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-109">Adds a comment to the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-110">确定是否文本会自动缩进水平或垂直等距单元格中的文本对齐方式设置为等距分布时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-111">
            <para>此属性返回<b>True</b> ，如果水平或垂直等距单元格中的文本对齐方式设置为等距分布时，自动缩进文本。</para>
            <para>设置文本对齐方式为均匀分布，您可以设置<see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />属性设为<b>xlVAlignDistributed</b>时的值<see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" />属性是<b>xlVertical</b>，并且可以设置<see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />属性设为<b>xlHAlignDistributed</b>时Orientation 属性的值是<b>xlHorizontal</b>。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-111">
              <para>This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</para>
              <para>To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="59ac6-112">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-113">
            <b>True</b>返回的绝对引用引用的行部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-113">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="59ac6-114">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-114">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="59ac6-115">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-116">
            <b>True</b>返回作为绝对引用的引用的列部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-116">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="59ac6-117">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="59ac6-118">可选<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-118">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="59ac6-119">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-119">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-120">
            <b>，则返回 true</b> ，则返回外部引用;<b>False</b>返回的本地引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-120">
              <b>True</b> to return an external reference; <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="59ac6-121">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-121">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="59ac6-122">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-123">如果<paramref name="RowAbsolute" />和<paramref name="ColumnAbsolute" />是<b>False</b>，和<paramref name="ReferenceStyle" />是<b>xlR1C1</b>，您必须包括相对引用的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-123">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="59ac6-124">此参数是<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象的定义的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-124">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-125">返回的范围引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-125">Returns the range reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-126">
            <para>如果引用包含多个单元格，<paramref name="RowAbsolute" />和<paramref name="ColumnAbsolute" />应用于所有的行和列。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-126">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="59ac6-127">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-127">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-128">
            <b>True</b>返回的绝对引用引用的行部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-128">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="59ac6-129">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-129">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="59ac6-130">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-131">
            <b>True</b>返回作为绝对引用的引用的列部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-131">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="59ac6-132">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-132">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="59ac6-133">可选<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-133">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="59ac6-134">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-135">
            <b>True</b>返回外部引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-135">
              <b>True</b> to return an external reference.</span>
          </span>
          <span data-ttu-id="59ac6-136">
            <b>False</b>返回的本地引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-136">
              <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="59ac6-137">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-137">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="59ac6-138">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-139">如果<paramref name="RowAbsolute" />和<paramref name="ColumnAbsolute" />是否都设置为<b>False</b>和<paramref name="ReferenceStyle" />设置<b>xlR1C1</b>，您必须包含相对引用的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-139">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="59ac6-140">此参数是<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它定义引用的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-140">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-141">返回指定区域的范围引用中的用户语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-141">Returns the range reference for the specified range in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-142">
            <para>如果引用包含多个单元格，<paramref name="RowAbsolute" />和<paramref name="ColumnAbsolute" />分别应用于所有的行和所有列。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-142">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action">
          <span data-ttu-id="59ac6-143">所需<see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-143">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span>
          </span>
          <span data-ttu-id="59ac6-144">可以是下列<b>XlFilterAction</b>常量之一：<b>xlFilterCopy</b><b>xlFilterInPlace</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-144">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span>
          </span>
        </param>
        <param name="CriteriaRange">
          <span data-ttu-id="59ac6-145">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-145">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-146">在条件区域中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-146">The criteria range.</span>
          </span>
          <span data-ttu-id="59ac6-147">如果省略此参数，则没有任何条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-147">If this argument is omitted, there are no criteria.</span>
          </span>
        </param>
        <param name="CopyToRange">
          <span data-ttu-id="59ac6-148">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-149">如果操作是复制的行的目标区域<paramref name="xlFilterCopy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-149">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span>
          </span>
          <span data-ttu-id="59ac6-150">否则，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-150">Otherwise, this argument is ignored.</span>
          </span>
        </param>
        <param name="Unique">
          <span data-ttu-id="59ac6-151">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-151">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-152">
            <b>True</b>以筛选仅; 唯一的记录<b>False</b>筛选满足条件的所有记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-152">
              <b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span>
          </span>
          <span data-ttu-id="59ac6-153">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-153">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-154">筛选或将数据复制从基于条件区域的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-154">Filters or copies data from a list based on a criteria range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-155">
            <para>如果初始选定区域是单个单元格，则使用该单元格的当前区域。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-155">
              <para>If the initial selection is a single cell, that cell's current region is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-156">对基于 OLAP 数据源的区域中所有编辑过的单元格执行回写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-156">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-157">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />方法将执行的更新多维数据集语句中的最后一个应用更改操作已提交以来范围中的所有更改。如果执行基于非 OLAP 数据源的区域，此方法将生成运行时错误。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-157">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed. This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-158">确定是否可以在受保护的工作表上编辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-158">Determines if the range can be edited on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-159">
            <para>如果可以在受保护的工作表上编辑区域，则此属性返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-159">
              <para>This property returns <b>True</b> if the range can be edited on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-160">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-160">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names">
          <span data-ttu-id="59ac6-161">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-162">要应用的名称的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-162">An array of the names to be applied.</span>
          </span>
          <span data-ttu-id="59ac6-163">如果省略此参数，则该范围于工作表上的所有名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-163">If this argument is omitted, all names on the sheet are applied to the range.</span>
          </span>
        </param>
        <param name="IgnoreRelativeAbsolute">
          <span data-ttu-id="59ac6-164">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-164">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-165">
            <b>True</b>以引用替换为名称，而不考虑引用类型的名称或引用;<b>False</b>替换仅具有绝对名称的绝对引用、 用相对名称相对引用和混合的引用仅混合名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-165">
              <b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span>
          </span>
          <span data-ttu-id="59ac6-166">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-166">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UseRowColumnNames">
          <span data-ttu-id="59ac6-167">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-167">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-168">
            <b>True</b>以使用如果找不到范围名称; 包含指定的区域的行和列范围的名称<b>False</b>忽略<paramref name="OmitColumn" />和<paramref name="OmitRow" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-168">
              <b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span>
          </span>
          <span data-ttu-id="59ac6-169">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-169">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitColumn">
          <span data-ttu-id="59ac6-170">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-171">
            <b>True</b> -面向行的名称中替换整个引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-171">
              <b>True</b> to replace the entire reference with the row-oriented name.</span>
          </span>
          <span data-ttu-id="59ac6-172">仅当引用的单元格位于同一公式列和行面向命名范围内，则可省略-面向列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-172">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span>
          </span>
          <span data-ttu-id="59ac6-173">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-173">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitRow">
          <span data-ttu-id="59ac6-174">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-175">
            <b>True</b> -面向列的名称中替换整个引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-175">
              <b>True</b> to replace the entire reference with the column-oriented name.</span>
          </span>
          <span data-ttu-id="59ac6-176">仅当引用的单元格的公式的同一行中且面向列的命名范围内，则可省略-面向行的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-176">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span>
          </span>
          <span data-ttu-id="59ac6-177">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-177">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Order">
          <span data-ttu-id="59ac6-178">可选<see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-178">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-179">确定用行方向区域名称和列方向区域名称替换单元格引用时，首先列出哪个区域名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-179">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span>
          </span>
          <span data-ttu-id="59ac6-180">可以是下列<b>XlApplyNamesOrder</b>常量之一：<b>xlColumnThenRow</b><b>xlRowThenColumn</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-180">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span>
          </span>
        </param>
        <param name="AppendLast">
          <span data-ttu-id="59ac6-181">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-182">
            <b>True</b>以替换中的名称定义<paramref name="Names" />还替换定义; 姓氏的定义<b>False</b>替换中的名称定义<paramref name="Names" />仅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-182">
              <b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span>
          </span>
          <span data-ttu-id="59ac6-183">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-183">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-184">将名称应用于指定区域中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-184">Applies names to the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-185">
            <para>您可以使用<b>Array</b>函数创建名称列表<paramref name="Names" />参数。</para>
            <para>如果您想要对整个工作表应用名称，可用 Cells.ApplyNames。</para>
            <para>您不能"取消应用"名称; 要删除名称，请使用<see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" />方法。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-185">
              <para>You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</para>
              <para>If you want to apply names to the entire sheet, use Cells.ApplyNames.</para>
              <para>You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-186">对指定区域应用分级显示样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-186">Applies outlining styles to the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-187">返回<see cref="T:Microsoft.Office.Interop.Excel.Areas" />代表多块选定区域中的所有范围的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-187">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-188">
            <para>对于单选， <b>Areas</b>属性返回包含一个对象的集合 — 原始<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象本身。多块选定区域中，对于<b>Areas</b>属性返回包含每个选定区域的一个对象的集合。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-188">
              <para>For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself. For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="59ac6-189">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-189">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="59ac6-190">要完成的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-190">The string to complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-191">从列表返回记忆式键入匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-191">Returns an AutoComplete match from the list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-192">
            <para>如果没有记忆式键入匹配，或者如果列表中的多个条目匹配要完成的字符串，则此方法将返回空字符串。</para>
            <para>即使记忆式键入功能被禁用，此方法有效。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-192">
              <para>If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</para>
              <para>This method works even if the AutoComplete feature is disabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="59ac6-193">所需<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-193">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="59ac6-194">要填充的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-194">The cells to be filled.</span>
          </span>
          <span data-ttu-id="59ac6-195">目标必须包括源区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-195">The destination must include the source range.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="59ac6-196">可选<see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-196">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span>
          </span>
          <span data-ttu-id="59ac6-197">指定填充类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-197">Specifies the fill type.</span>
          </span>
          <span data-ttu-id="59ac6-198">可以是下列<b>XlAutoFillType</b>常量之一：<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>如果此参数为<b>xlFillDefault</b>或省略，Microsoft Excel 选择最合适的填充类型，根据源区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-198">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-199">对指定区域中的单元格执行自动填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-199">Performs an autofill on the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field">
          <span data-ttu-id="59ac6-200">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-201">相对于作为筛选基准字段（从列表左侧开始，最左侧的字段为第一个字段）的字段的整型偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-201">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span>
          </span>
        </param>
        <param name="Criteria1">
          <span data-ttu-id="59ac6-202">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-203">条件 （一个字符串; 例如，"101"）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-203">The criteria (a string; for example, "101").</span>
          </span>
          <span data-ttu-id="59ac6-204">使用"="查找空字段，或者使用"&lt;&gt;"若要查找非空的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-204">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span>
          </span>
          <span data-ttu-id="59ac6-205">如果省略此参数，则条件为<b>All</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-205">If this argument is omitted, the criteria is <b>All</b>.</span>
          </span>
          <span data-ttu-id="59ac6-206">如果<paramref name="Operator" />是<b>xlTop10Items</b>，<paramref name="Criteria1" />指定项 (例如，"10") 的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-206">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="59ac6-207">可选<see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-207">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span>
          </span>
          <span data-ttu-id="59ac6-208">可以是下列<b>XlAutoFilterOperator</b>常量之一：<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>使用<b>xlAnd</b>和<b>xlOr</b>使用<paramref name="Criteria1" />和<paramref name="Criteria2" />来构造复合条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-208">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span>
          </span>
        </param>
        <param name="Criteria2">
          <span data-ttu-id="59ac6-209">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-209">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-210">第二个条件 （字符串）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-210">The second criteria (a string).</span>
          </span>
          <span data-ttu-id="59ac6-211">使用与 Criteria1 和运算符来构造复合条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-211">Used with Criteria1 and Operator to construct compound criteria.</span>
          </span>
        </param>
        <param name="VisibleDropDown">
          <span data-ttu-id="59ac6-212">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-212">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-213">
            <b>True</b>以显示筛选的字段; 的自动筛选下拉箭头<b>False</b>以隐藏筛选的字段的自动筛选下拉箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-213">
              <b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span>
          </span>
          <span data-ttu-id="59ac6-214">
            <b>True</b>默认情况下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-214">
              <b>True</b> by default.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-215">使用“自动筛选”筛选一个列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-215">Filters a list using the AutoFilter.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-216">
            <para>应用<see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />属性设为<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />对象返回<see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />对象。</para>
            <para>如果省略所有参数，此方法只是切换自动筛选下拉箭头指定范围中的显示。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-216">
              <para>Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</para>
              <para>If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-217">更改区域中的列宽或行高以达到最佳匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-217">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-218">行或各种行或列的列范围必须是<para>中的表达式。否则，此方法将生成一个错误。</para><para>一个列宽单位等于正文样式中一个字符的宽度。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-218">
              <para>The expression must be a row or a range of rows, or a column or a range of columns. Otherwise, this method generates an error.</para>
              <para>One unit of column width is equal to the width of one character in the Normal style.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="59ac6-219">可选<see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-219">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span>
          </span>
          <span data-ttu-id="59ac6-220">
            <b>XlRangeAutoFormat</b>常量指定的 AutoFormat.Some 可能不可用，具体取决于您已选择或安装的语言支持 （例如，美国英语）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-220">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="59ac6-221">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-222">自动套用格式中<b>，则返回 true</b>包括数字格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-222">
              <b>True</b> to include number formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-223">默认值是 <b>，则返回 True。</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-223">The default value is <b>True.</b></span>
          </span>
        </param>
        <param name="Font">
          <span data-ttu-id="59ac6-224">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-225">
            <b>True</b>中自动套用格式包括字体格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-225">
              <b>True</b> to include font formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-226">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-226">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Alignment">
          <span data-ttu-id="59ac6-227">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-228">
            <b>True</b>中自动套用格式包括对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-228">
              <b>True</b> to include alignment in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-229">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-229">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Border">
          <span data-ttu-id="59ac6-230">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-231">
            <b>True</b>中自动套用格式包括边框格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-231">
              <b>True</b> to include border formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-232">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-232">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="59ac6-233">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-233">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-234">
            <b>True</b>中自动套用格式包括图案格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-234">
              <b>True</b> to include pattern formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-235">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-235">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="59ac6-236">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-237">
            <b>True</b>自动套用格式中包括列宽度和行的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-237">
              <b>True</b> to include column width and row height in the AutoFormat.</span>
          </span>
          <span data-ttu-id="59ac6-238">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-238">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-239">自动套用格式指定的范围，使用预定义的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-239">Automatically formats the specified range, using a predefined format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-240">
            <para>如果该区域是单个单元格，此方法还格式化活动单元格周围的区域。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-240">
              <para>If the range is a single cell, this method also formats the active region surrounding the cell. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-241">自动创建指定区域的分级显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-241">Automatically creates an outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-242">
            <para>如果该区域是单个单元格，Microsoft Excel 将新建的整个工作表。新的大纲替换任何现有的轮廓。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-242">
              <para>If the range is a single cell, Microsoft Excel creates an outline for the entire sheet. The new outline replaces any existing outline.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">
          <span data-ttu-id="59ac6-243">可选<see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-243">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span>
          </span>
          <span data-ttu-id="59ac6-244">边框线型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-244">The line style for the border.</span>
          </span>
          <span data-ttu-id="59ac6-245">可以是以下<b>XlLineStyle</b>常量之一：<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-245">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span>
          </span>
        </param>
        <param name="Weight">
          <span data-ttu-id="59ac6-246">可选<see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-246">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span>
          </span>
          <span data-ttu-id="59ac6-247">边框粗细。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-247">The border weight.</span>
          </span>
          <span data-ttu-id="59ac6-248">可以是以下<b>XlBorderWeight</b>常量之一：<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-248">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="ColorIndex">
          <span data-ttu-id="59ac6-249">可选<see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-249">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
          <span data-ttu-id="59ac6-250">边框颜色，作为当前调色板中的索引或作为<b>XlColorIndex</b>常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-250">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span>
          </span>
          <span data-ttu-id="59ac6-251">可以是下列<b>XlColorIndex</b>常量之一：<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-251">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span>
          </span>
        </param>
        <param name="Color">
          <span data-ttu-id="59ac6-252">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-252">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-253">边框颜色，以 RGB 值表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-253">The border color, as an RGB value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-254">向一系列添加边框，并设置<see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />， <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />，和<see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" />新边框的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-254">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-255">
            <para>必须指定<paramref name="ColorIndex" />或<paramref name="Color" />，但不是能同时。</para>您可以指定这两
          <para><paramref name="LineStyle" />或<paramref name="Weight" />，但不是能同时。如果没有指定任何参数，Microsoft Excel 将使用的默认线条样式和权重。</para><para>此方法而不填充概述的整个区域。若要设置的所有单元格边框，则必须设置<see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />， <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />，和<see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" />Borders 集合的属性。要清除边框，必须设置<b>LineStyle</b>属性为<b>xlLineStyleNone</b>范围中的所有单元格。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-255">
              <para>You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</para>
              <para>You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both. If you don't specify either argument, Microsoft Excel uses the default line style and weight.</para>
              <para>This method outlines the entire range without filling it in. To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection. To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary>
          <span data-ttu-id="59ac6-256">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-256">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59ac6-257">返回<see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-257">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-258">返回<see cref="T:Microsoft.Office.Interop.Excel.Borders" />集合，代表 （包括定义为条件格式一部分的区域） 的单元格区域或样式的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-258">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-259">计算指定工作表上的单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-259">Calculates a specified range of cells on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-260">计算指定的单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-260">Calculates a specfied range of cells.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59ac6-261">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-261">
              <b>Object</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="59ac6-262">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />方法计算指定的范围范围的逐-单元格，从其左上角到其到右下角行优先顺序。这是由 Excel 2000 和更早版本用来计算区域相同的过程。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-262">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order. This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-263">返回一个<b>Range</b>对象，该对象表示指定范围中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-263">Returns a <b>Range</b> object that represents the cells in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="59ac6-264">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-265">要返回的第一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-265">The first character to be returned.</span>
          </span>
          <span data-ttu-id="59ac6-266">如果此参数是 1 或被省略，则此属性返回一个以第一个字符为开头的字符区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-266">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="59ac6-267">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-268">要返回的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-268">The number of characters to be returned.</span>
          </span>
          <span data-ttu-id="59ac6-269">如果省略此参数，则此属性返回的字符串的其余部分 (之后的所有<paramref name="Start" />字符)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-269">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-270">返回<see cref="T:Microsoft.Office.Interop.Excel.Characters" />对象，它代表对象的文本中的字符的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-270">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-271">
            <para>您可以使用<b>Characters</b>对象为格式文本字符串中的字符。</para>
            <para>
              <b>Characters</b>对象不是一个集合。</para>
            <para>的<see cref="T:Microsoft.Office.Interop.Excel.TextFrame" />对象，<see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" />是一种方法。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-271">
              <para>You can use the <b>Characters</b> object to format characters within a text string.</para>
              <para>The <b>Characters</b> object isn't a collection.</para>
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="59ac6-272">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-272">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-273">指示 word 不在主词典中找到要检查的自定义词典的文件名的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-273">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="59ac6-274">如果省略此参数，则使用当前指定的词典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-274">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="59ac6-275">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-276">
            <b>True</b>以使 Microsoft Excel 忽略全部大写; 字词<b>False</b>可具有都是大写的 Microsoft Excel 复选单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-276">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="59ac6-277">如果省略此参数，则将使用的当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-277">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="59ac6-278">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-278">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-279">
            <b>True</b>以让 Microsoft Excel 时找到错误拼写，则显示备用拼写建议的列表<b>False</b>可让 Microsoft Excel 暂停时输入正确的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-279">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span>
          </span>
          <span data-ttu-id="59ac6-280">如果省略此参数，则将使用的当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-280">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="59ac6-281">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-281">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-282">正在使用的词典语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-282">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="59ac6-283">可以使用的<b>MsoLanguageID</b>值之一<see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-283">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-284">检查对象的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-284">Checks the spelling of an object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-285">
            <para>此方法没有任何返回值;Microsoft Excel 显示拼写对话框。</para>
            <para>要检查页眉、 页脚和工作表上的对象，请使用此方法，在<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />对象。</para>
            <para>要仅检查单元格和批注，使用此方法返回的对象<see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" />属性。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-285">
              <para>This method has no return value; Microsoft Excel displays the Spelling dialog box.</para>
              <para>To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</para>
              <para>To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-286">清除整个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-286">Clears the entire object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-287">清除指定区域的所有单元格批注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-287">Clears all cell comments from the specified range.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-288">清除区域中的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-288">Clears the formulas from the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-289">
            <para>此方法清除图表中的数据，但保留其格式设置。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-289">
              <para>This method clears the data from a chart but leaves the formatting.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-290">清除对象的格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-290">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-291">删除指定区域中的所有超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-291">Removes all hyperlinks from the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-292">
            <para>调用<see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />在指定范围内的方法等效于从明文使用清除超链接命令的主页选项卡的编辑部分的下拉列表。将删除仅超链接;所有其他单元格内容，例如文本和格式不会影响。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-292">
              <para>Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-293">清除指定区域中所有单元格的批注和语音批注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-293">Clears notes and sound notes from all the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-294">清除指定区域的分级显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-294">Clears the outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-295">返回在指定范围中的第一个区域中的第一列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-295">Returns the number of the first column in the first area in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-296">
            <para>A 列返回 1，B 列返回 2，依此类推。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-296">
              <para>Column A returns 1, column B returns 2, and so on.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="59ac6-297">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-297">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-298">用于对指定区域进行比较的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-298">A single cell to compare to the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-299">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示其内容各不相同的每个列中与比较单元格的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-299">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-300">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象值，该值代表指定区域中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-301">
            <para>应用于<b>Range</b>对象，它是多块选定区域时，此属性将返回仅范围的第一个区域中的列。例如，如果<b>Range</b>对象有两个区域 — A1:B2 和 C3:D4 —<see cref="P:Microsoft.Office.Interop.Excel.Range.Count" />属性将返回 2，不 4。若要使用此属性可能包含多个区域选择区域上，测试<see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" />属性<see cref="T:Microsoft.Office.Interop.Excel.Areas" />对象可确定该区域是否包含多个区域。如果是这样，对每个区域区域中循环。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-301">
              <para>When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4. To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area. If it does, loop over each area in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-302">返回或设置指定范围中的所有列的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-302">Returns or sets the width of all columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-303">
            <para>一个列宽单位等于正文样式中一个字符的宽度。对于非等宽字体，则使用字符 0 （零） 的宽度。</para>
            <para>使用<see cref="P:Microsoft.Office.Interop.Excel.Range.Width" />属性返回列的宽度，以磅为单位。</para>如果区域中的所有列都具有相同的宽度
          <para>， <b>ColumnWidth</b>属性返回的宽度。如果区域中的列具有不同的宽度，此属性返回<b>Null</b>。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-303">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</para>
              <para>If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width. If columns in the range have different widths, this property returns <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-304">返回<see cref="T:Microsoft.Office.Interop.Excel.Comment" />对象，它代表与区域左上角的单元格相关联的批注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources">
          <span data-ttu-id="59ac6-305">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-305">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-306">引用 R1C1 样式表示法的字符串数组形式的文本合并计算的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-306">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span>
          </span>
          <span data-ttu-id="59ac6-307">引用必须包含要合并的表的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-307">The references must include the full path of sheets to be consolidated.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="59ac6-308">可选<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-308">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="59ac6-309">可以是下列<b>XlConsilidationFunction</b>常量之一：<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-309">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TopRow">
          <span data-ttu-id="59ac6-310">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-311">
            <b>True</b>以将其整合到基于合并计算数据区域中; 顶行中的列标题的数据<b>False</b>可按位置合并数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-311">
              <b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="59ac6-312">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-312">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="LeftColumn">
          <span data-ttu-id="59ac6-313">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-313">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-314">
            <b>True</b>以将其整合到基于合并计算数据区域中; 左侧列中的行标题的数据<b>False</b>可按位置合并数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-314">
              <b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="59ac6-315">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-315">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="CreateLinks">
          <span data-ttu-id="59ac6-316">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-316">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-317">
            <b>True</b>整合使用工作表链接;<b>False</b>具有整合副本数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-317">
              <b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span>
          </span>
          <span data-ttu-id="59ac6-318">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-318">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-319">将多个工作表上的多个区域的数据合并到单个工作表上的单个区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-319">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="59ac6-320">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-320">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-321">指定将复制到指定的范围的新范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-321">Specifies the new range to which the specified range will be copied.</span>
          </span>
          <span data-ttu-id="59ac6-322">如果省略此参数，则 Microsoft Excel 会将区域复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-322">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-323">将单元格区域复制到指定的区域或剪贴板中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-323">Copies the range to the specified range or to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="59ac6-324">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-324">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-325">要复制到区域的<b>Recordset</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-325">The <b>Recordset</b> object to copy into the range.</span>
          </span>
        </param>
        <param name="MaxRows">
          <span data-ttu-id="59ac6-326">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-326">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-327">要复制到工作表的记录的最大数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-327">The maximum number of records to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="59ac6-328">如果省略此参数，则会复制<b>Recordset</b>对象中的所有记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-328">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <param name="MaxColumns">
          <span data-ttu-id="59ac6-329">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-329">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-330">要复制到工作表的字段的最大数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-330">The maximum number of fields to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="59ac6-331">如果省略此参数，则会复制<b>Recordset</b>对象中的所有字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-331">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-332">复制到工作表，在指定区域左上角开始的 ADO 或 DAO <b>Recordset</b>对象的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-332">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-333">
            <para>如果<b>Recordset</b>对象包含与 OLE 对象字段，此方法将失败。</para>
            <para>
              <b>Recordset</b>对象的当前行开始复制。复制完成后， <b>Recordset</b>对象的<b>EOF</b>属性为<b>True</b>。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-333">
              <para>If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</para>
              <para>Copying begins at the current row of the <b>Recordset</b> object. After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="59ac6-334">可选<see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-334">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="59ac6-335">指定图片的复制方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-335">Specifies how the picture should be copied.</span>
          </span>
          <span data-ttu-id="59ac6-336">可以是下列<b>XlCopyPictureFormat</b>常量之一：<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-336">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="59ac6-337">可选<see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-337">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="59ac6-338">图片的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-338">The format of the picture.</span>
          </span>
          <span data-ttu-id="59ac6-339">可以是下列<b>XlPictureAppearance</b>常量之一：<b>xlPrinter</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-339">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span>
          </span>
          <span data-ttu-id="59ac6-340">图片进行复制打印时的外观。<b>xlScreen</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-340">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-341">图片尽可能按其屏幕显示进行复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-341">The picture is copied to resemble its display on the screen as closely as possible.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-342">将所选对象作为图片复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-342">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-343">返回集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-343">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-344">计算值的给定范围内的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-344">Counts the largest value in a given Range of values.</span>
          </span>
          <span data-ttu-id="59ac6-345">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-345">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59ac6-346">
            <b>对象</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-346">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top">
          <span data-ttu-id="59ac6-347">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-347">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-348">
            <b>True</b>以创建使用中首行的标签名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-348">
              <b>True</b> to create names by using labels in the top row.</span>
          </span>
          <span data-ttu-id="59ac6-349">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-349">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="59ac6-350">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-350">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-351">
            <b>True</b>以创建使用对应的左栏中的标签名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-351">
              <b>True</b> to create names by using labels in the left column.</span>
          </span>
          <span data-ttu-id="59ac6-352">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-352">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Bottom">
          <span data-ttu-id="59ac6-353">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-354">
            <b>，则返回 true</b>的底部行中使用标签创建名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-354">
              <b>True</b> to create names by using labels in the bottom row.</span>
          </span>
          <span data-ttu-id="59ac6-355">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-355">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="59ac6-356">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-356">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-357">
            <b>，则返回 true</b>的右侧列中使用标签创建名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-357">
              <b>True</b> to create names by using labels in the right column.</span>
          </span>
          <span data-ttu-id="59ac6-358">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-358">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-359">在指定区域中依据工作表中的文本标签创建名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-359">Creates names in the specified range, based on text labels in the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-360">
            <para>如果不指定一个<paramref name="Top" />， <paramref name="Left" />， <paramref name="Bottom" />，或<paramref name="Right" />，Microsoft Excel 猜测文本标签，基于指定的区域的形状的位置。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-360">
              <para>If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="59ac6-361">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-361">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="59ac6-362">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-362">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="59ac6-363">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-363">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="59ac6-364">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-364">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="59ac6-365">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-365">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="59ac6-366">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-366">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-367">您已请求的仅用于 Macintosh 关键字的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-367">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="59ac6-368">有关此关键字的信息，请查阅的语言参考 Microsoft Office Macintosh Edition 中包含的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-368">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-369">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-369">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-370">
            <para>如果指定的对象在 Microsoft Excel 中创建的此属性返回的字符串 XCEL，这相当于十六进制数字 5843454 c。</para>
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-370">
              <para>If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-371">如果指定单元格为数组的一部分，<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示整个数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-371">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-372">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示当前区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-372">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-373">
            <para>当前区域是受空行和空列的任意组合的范围。</para>
            <para>此属性对于许多自动展开选择以包括整个当前区域，如的操作很有用<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法。</para>
            <para>不能在受保护的工作表上使用此属性。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-373">
              <para>The current region is a range bounded by any combination of blank rows and blank columns.</para>
              <para>This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>This property cannot be used on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="59ac6-374">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-375">范围要粘贴该对象的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-375">The range where the object should be pasted.</span>
          </span>
          <span data-ttu-id="59ac6-376">如果省略此参数，则将对象剪切到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-376">If this argument is omitted, the object is cut to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-377">将对象剪切到剪贴板，或者将其粘贴到指定的目的地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-377">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-378">
            <para>剪切的区域必须由相邻单元格。</para>
            <para>可剪切嵌入式的图表仅。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-378">
              <para>The cut range must be made up of adjacent cells.</para>
              <para>Only embedded charts can be cut.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol">
          <span data-ttu-id="59ac6-379">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-379">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-380">可以是<b>xlRows</b>或<b>xlColumns</b>常量具有数据系列中的行或列，分别输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-380">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span>
          </span>
          <span data-ttu-id="59ac6-381">如果省略此参数，则使用的大小和区域的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-381">If this argument is omitted, the size and shape of the range is used.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="59ac6-382">可选<see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-382">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span>
          </span>
          <span data-ttu-id="59ac6-383">可以是下列<b>XlDataSeriesType</b>常量之一：<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-383">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          </span>
        </param>
        <param name="Date">
          <span data-ttu-id="59ac6-384">可选<see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-384">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span>
          </span>
          <span data-ttu-id="59ac6-385">如果 Type 参数为<b>xlChronological</b>，则<b>Date</b>参数指示单步执行日期单元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-385">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span>
          </span>
          <span data-ttu-id="59ac6-386">可以是下列<b>XlDataSeriesDate</b>常量之一：<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-386">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          </span>
        </param>
        <param name="Step">
          <span data-ttu-id="59ac6-387">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-387">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-388">系列步长值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-388">The step value for the series.</span>
          </span>
          <span data-ttu-id="59ac6-389">默认值为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-389">The default value is 1.</span>
          </span>
        </param>
        <param name="Stop">
          <span data-ttu-id="59ac6-390">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-390">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-391">停止系列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-391">The stop value for the series.</span>
          </span>
          <span data-ttu-id="59ac6-392">如果省略此参数，则 Microsoft Excel 将填充到末尾的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-392">If this argument is omitted, Microsoft Excel fills to the end of the range.</span>
          </span>
        </param>
        <param name="Trend">
          <span data-ttu-id="59ac6-393">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-393">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-394">
            <b>True</b>以创建一个线性趋势或增长趋势;<b>False</b>创建标准的数据系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-394">
              <b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span>
          </span>
          <span data-ttu-id="59ac6-395">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-395">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-396">在指定范围中创建一个数据系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-396">Creates a data series in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="59ac6-397">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-397">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-398">指定如何移动单元格来替换删除的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-398">Specifies how to shift cells to replace deleted cells.</span>
          </span>
          <span data-ttu-id="59ac6-399">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" />常量： <b>xlShiftToLeft</b>或<b>xlShiftUp</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-399">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span>
          </span>
          <span data-ttu-id="59ac6-400">如果省略此参数，则 Microsoft Excel 将决定基于区域的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-400">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-401">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-401">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-402">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示包含所有从属单元格的单元格的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-402">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-403">
            <para>这可以是多个所选内容 （ <b>Range</b>对象的联合），如果有多个依赖。</para>
            <para>
              <b>Dependents</b>属性仅适用于在活动工作表，不能追踪远程引用。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-403">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-404">显示一个对话框，由 Microsoft Excel 4.0 宏工作表上对话框定义表定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-404">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-405">
            <para>此方法返回的所选的控件，数，则返回<b>False</b> ，如果用户单击取消按钮。</para>
            <para>返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象必须引用 Microsoft Excel 4.0 宏工作表上对话框定义表。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-405">
              <para>This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</para>
              <para>The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-406">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示包含所有直接从属单元格的单元格的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-406">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-407">
            <para>这可以是多个所选内容 （ <b>Range</b>对象的联合），如果有多个依赖。</para>
            <para>
              <b>直接从属单元格</b>属性仅适用于在活动工作表，不能追踪远程引用。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-407">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-408">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示包含单元格的所有直接引用单元格的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-408">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-409">
            <para>
              <b>DirectPrecedents</b>属性仅适用于在活动工作表，不能追踪远程引用。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-409">
              <para>The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-410">下一次重新计算发生时指定要重新计算的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-410">Designates a range to be recalculated when the next recalculation occurs.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-411">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" />方法强制重新计算指定单元格区域、 单元格的 Microsoft Excel 知道需要重新计算。</para>
            <para>的应用程序是在手动计算模式下，如果使用<see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" />方法指示 Excel 确定指定单元格进行重新计算。如果应用程序自动计算模式中，使用<b>Dirty</b>方法指示 Excel 执行重新计算。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-411">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</para>
              <para>If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated. If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-412">放弃区域中经过编辑的单元格中的所有更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-412">Discards all changes in the edited cells of the range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-413">
            <para>为基于 OLAP 数据源的区域，此方法删除所有值和公式中单元格，输入，然后运行从数据源检索的最新值更新操作。数据源值设置为空引用 (在 Visual Basic 中为 Nothing) 的所有值单元格的编辑，且还执行针对 OLAP 服务器的回滚事务语句。为基于非 OLAP 数据源的范围，此方法只需清除所有已编辑单元格。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-413">
              <para>For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source. It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server. For ranges based on non-OLAP data sources, this method simply clears all edited cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-414">获取<see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" />对象值，该值代表指定区域的显示设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-414">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59ac6-415">A<see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" />对象值，该值代表指定区域的显示设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-415">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="59ac6-416">
            <para>只读的。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-416">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="59ac6-417">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-417">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Option">
          <span data-ttu-id="59ac6-418">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-418">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="59ac6-419">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-419">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Reference">
          <span data-ttu-id="59ac6-420">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-420">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="59ac6-421">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-421">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ChartSize">
          <span data-ttu-id="59ac6-422">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-422">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="59ac6-423">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-423">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-424">您已请求的仅用于 Macintosh 关键字的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-424">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="59ac6-425">有关此关键字的信息，请查阅的语言参考 Microsoft Office Macintosh Edition 中包含的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-425">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="59ac6-426">所需<see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-426">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
          <span data-ttu-id="59ac6-427">所要移至的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-427">The direction in which to move.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-428">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示包含源区域的区域的末尾处的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-428">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-429">
            <para>等效于按最终 + 向上键、 结束 + 向下箭头、 结束 + 向左箭头或结束 + 向右键。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-429">
              <para>Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-430">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />代表整列 （或列） 的对象，该对象包含指定的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-430">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-431">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，该对象代表整行 （或行） 包含指定的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-431">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-432">允许用户访问错误检查选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-432">Allows the user to access error checking options.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-433">
            <para>参考 （英文）<see cref="T:Microsoft.Office.Interop.Excel.Errors" />对象可查看的索引值列表与错误检查选项相关联。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-433">
              <para>Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="59ac6-434">所需<see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" />要导出到的文件格式的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-434">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="59ac6-435">可选<b>对象</b>文件的文件名保存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-435">Optional <b>Object</b> The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="59ac6-436">您可以包括完整路径，或 short_Excel2007 将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-436">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="59ac6-437">可选<b>对象</b>通常格式设置为<see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-437">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="59ac6-438">指定将发布的文件的质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-438">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="59ac6-439">可选<b>对象</b>设置为<b>True</b>以包含文档属性;否则为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-439">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="59ac6-440">可选<b>对象</b>设置为<b>True</b>以忽略发布; 时设置的任何打印区域否则为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-440">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="59ac6-441">可选<b>对象</b>在发布的起始页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-441">Optional <b>Object</b> The number of the page at which to start publishing.</span>
          </span>
          <span data-ttu-id="59ac6-442">如果省略此参数，则发布从开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-442">If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="59ac6-443">可选<b>对象</b>的最后一页数发布。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-443">Optional <b>Object</b> The number of the last page to publish.</span>
          </span>
          <span data-ttu-id="59ac6-444">如果省略此参数，则发布至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-444">If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="59ac6-445">可选<b>对象</b>设置为<b>True 以发布; 后在查看器中显示的文件</b>否则为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-445">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="59ac6-446">指向<b>FixedFormatExt</b>类的可选<b>对象</b>指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-446">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-447">导出为指定格式的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-447">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-448">
            <para>此方法还支持初始化外接程序导出为固定格式的文件的文件。例如，如果存在转换器，则 Excel 将执行文件格式转换。通常由用户启动转换。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-448">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-449">到底部的范围向下填充从顶部或指定范围中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-449">Fills down from the top cell or cells in the specified range to the bottom of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-450">
            <para>内容和格式的单元格或单元格区域的第一行中会复制到区域中的行的其余部分。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-450">
              <para>The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-451">从右向左，从指定范围中的单元格的最右侧的单元格的填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-451">Fills left from the rightmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-452">
            <para>内容和格式的单元格或单元格区域的右边的列会复制到区域中的列的其余部分。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-452">
              <para>The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-453">从指定范围中的单元格的最左边的单元格向右填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-453">Fills right from the leftmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-454">
            <para>内容和格式的单元格或单元格区域的最左侧的列会复制到区域中的列的其余部分。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-454">
              <para>The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-455">填满从底部单元格或指定范围中的单元格区域的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-455">Fills up from the bottom cell or cells in the specified range to the top of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-456">
            <para>内容和格式的单元格或单元格区域的底部行中会复制到区域中的行的其余部分。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-456">
              <para>The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="59ac6-457">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-457">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-458">要搜索的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-458">The data to search for.</span>
          </span>
          <span data-ttu-id="59ac6-459">可以是一个字符串或任何 Microsoft Excel 数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-459">Can be a string or any Microsoft Excel data type.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="59ac6-460">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-460">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-461">要在其后开始搜索的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-461">The cell after which you want the search to begin.</span>
          </span>
          <span data-ttu-id="59ac6-462">这对应于活动单元格的位置时从用户界面中进行搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-462">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="59ac6-463">请注意<b>后</b>必须是范围中的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-463">Note that <b>After</b> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="59ac6-464">请记住开始进行搜索<paramref name="after" />此单元格;指定单元格不搜索直到方法环绕返回到此单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-464">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="59ac6-465">如果不指定此参数，则搜索开始后区域左上角的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-465">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <param name="LookIn">
          <span data-ttu-id="59ac6-466">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-466">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-467">信息类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-467">The type of information.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="59ac6-468">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-469">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" />常量： <b>xlWhole</b>或<b>xlPart</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-469">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="59ac6-470">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-471">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" />常量： <b>xlByRows</b>或<b>xlByColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="SearchDirection">
          <span data-ttu-id="59ac6-472">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-472">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span>
          </span>
          <span data-ttu-id="59ac6-473">搜索的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-473">The search direction.</span>
          </span>
          <span data-ttu-id="59ac6-474">可以是下列 XlSearchDirection 常量之一：<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-474">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="59ac6-475">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-476">如果为  <b>True</b> ，则搜索区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-476">
              <b>True</b> to make the search case sensitive.</span>
          </span>
          <span data-ttu-id="59ac6-477">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-477">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="59ac6-478">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-478">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-479">仅当您已选择或安装双字节语言支持时，才使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-479">Used only if you’ve selected or installed double-byte language support.</span>
          </span>
          <span data-ttu-id="59ac6-480">
            <b>True</b>以使双字节字符匹配仅双字节字符;<b>False</b>双字节字符匹配单字节等效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-480">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="59ac6-481">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-482">搜索的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-482">The search format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-483">范围中查找特定信息，并返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示在其中找到该信息的第一个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-483">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-484">
            <para>如果未找到匹配的此方法返回<b>Nothing</b> 。</para>
            <para>此方法不会影响所选内容或活动单元格。</para>
            <para>的设置为<paramref name="LookIn" />， <paramref name="LookAt" />， <paramref name="SearchOrder" />，和<paramref name="MatchByte" />保存每次使用此方法。如果不指定这些参数的值在下次调用方法，将使用保存的值。设置以下参数更改的设置查找对话框中，并更改查找对话框中的设置更改保存使用如果省略的参数的值。若要避免出现问题，这些参数显式设置每次使用此方法。</para>
            <para>您可以使用<see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />和<see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />方法可重复搜索。</para>
            <para>搜索达到指定的搜索范围的结束时，它会绕到区域的开头。此环绕发生时，请停止搜索，保存第一个找到的单元格的地址，然后测试针对此保存地址每个连续找到单元格地址。</para>若要为每个查找的单元格与可进行更为复杂的模式匹配，请使用<b>的
          <para>...下一步与<b>Like</b>运算符的语句。</para></b><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-484">
              <para>This method returns <b>Nothing</b> if no match is found.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para>You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para>To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="59ac6-485">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-486">要在其后搜索单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-486">The cell after which you want to search.</span>
          </span>
          <span data-ttu-id="59ac6-487">这对应于活动单元格的位置时从用户界面中进行搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-487">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="59ac6-488">请注意，<paramref name="After" />必须是范围中的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-488">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="59ac6-489">请记住开始进行搜索<paramref name="after" />此单元格;指定单元格不搜索直到方法环绕返回到此单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-489">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="59ac6-490">如果不指定此参数，则搜索开始后区域左上角的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-490">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-491">继续使用开始搜索<see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-491">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-492">
            <para>查找匹配相同的下一个单元格条件并返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象表示该单元格。</para>
            <para>此方法不会影响所选内容或活动单元格。</para>
            <para>搜索达到指定的搜索范围的结束时，它会绕到区域的开头。此环绕发生时，请停止搜索，保存第一个找到的单元格的地址，然后测试针对此保存地址每个连续找到单元格地址。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-492">
              <para>Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="59ac6-493">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-494">要在其前面搜索单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-494">The cell before which you want to search.</span>
          </span>
          <span data-ttu-id="59ac6-495">这对应于活动单元格的位置时从用户界面中进行搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-495">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="59ac6-496">请注意，<paramref name="After" />必须是范围中的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-496">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="59ac6-497">请记住开始进行搜索<paramref name="before" />此单元格;指定单元格不搜索直到方法环绕返回到此单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-497">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="59ac6-498">如果不指定此参数，则搜索开始之前区域左上角单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-498">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-499">继续使用开始搜索<see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-499">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-500">
            <para>在上一单元格的查找匹配相同条件并返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象表示该单元格。</para>
            <para>此方法不会影响所选内容或活动单元格。</para>
            <para>搜索达到指定的搜索范围的开始时，它会绕到范围的末尾。此环绕发生时，请停止搜索，保存第一个找到的单元格的地址，然后测试针对此保存地址每个连续找到单元格地址。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-500">
              <para>Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-501">TRUE 表示 Excel Flash 填充功能已启用并处于活动状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-501">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-502">返回<see cref="T:Microsoft.Office.Interop.Excel.Font" />对象，它代表指定对象的字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-503">返回<see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" />值，该值代表指定区域的所有条件格式的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-503">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-504">返回或设置 A1 样式表示法和宏语言中的对象的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-504">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-505">
            <para>此属性不可用于 OLAP 数据源。</para>
            <para>如果单元格包含常量，该属性返回的常量。如果单元格为空，该<b>公式</b>属性将返回空字符串。如果单元格包含公式， <b>Formula</b>属性会将该公式返回相同的格式将公式栏 （包括等号） 中显示的字符串形式。</para>如果设置为日期值或单元格公式的
          <para>，Microsoft Excel 将检查以查看是否已设置该单元格格式之一的日期或时间的数字格式。如果没有，Microsoft Excel 将号码格式设为默认的短日期数字格式。</para>如果该区域是一个-或两维范围
          <para>，您可以为数组相同尺寸设置公式。同样，将公式放到基本阵列。</para><para>的多个单元格区域填充公式的范围中的所有单元格设置公式。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-505">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into a Basic array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-506">返回或设置一个范围的数组公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-506">Returns or sets the array formula of a range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-507">
            <para>此属性返回 （或可设为） 一个公式或数组。</para>
            <para>如果指定的区域不包含数组公式，此属性返回<b>Null</b>。</para>
            <para>如果您使用此属性输入数组公式，该公式必须使用 R1C1 引用样式，而不能使用 A1 引用样式 （请参阅第二个示例）。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-507">
              <para>This property returns (or can be set to) a single formula or an array.</para>
              <para>If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</para>
              <para>If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-508">确定在工作表处于保护状态时，是否将隐藏公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-508">Determines if the formula will be hidden when the worksheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-509">
            <para>如果将隐藏公式，在工作表处于保护状态时，此属性返回<b>True</b> 。如果指定的范围包含有些单元格的<b>FormulaHidden</b>等于<b>true，</b>而有些单元格的<b>FormulaHidden</b>等于<b>False</b>，则返回<b>Null</b> 。</para>
            <para>不将此属性与<see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" />属性。如果受保护工作簿和工作表不，但仅当工作表处于保护，将不隐藏公式。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-509">
              <para>This property returns <b>True</b> if the formula will be hidden when the worksheet is protected. It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</para>
              <para>Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property. The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-510">返回或设置指定区域的公式标签类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-510">Returns or sets the formula label type for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-511">
            <para>如果该区域包含无标签，或下列<b>XlFormulaLabel</b>常量之一，该属性的返回值可以是<b>xlNone</b> :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlColumnLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlMixedLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlNoLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowLabels</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-511">
              <para>The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlColumnLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlMixedLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlNoLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowLabels</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-512">返回或设置对象，在语言中的用户使用 A1-样式引用的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-512">Returns or sets the formula for the object, using A1-style references in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-513">
            <para>如果单元格包含常量，该属性返回的常量。如果单元格为空，则属性将返回空字符串。如果单元格包含公式，则该属性返回公式作为字符串中，在其中将显示公式栏 （包括等号） 中的格式。</para>如果设置为日期值或单元格公式的
          <para>，Microsoft Excel 将检查以查看是否已设置该单元格格式之一的日期或时间的数字格式。如果没有的数字格式将更改为默认的短日期数字格式。</para>如果该区域是一个-或两维范围
          <para>，您可以为数组相同尺寸设置公式。同样，将公式放入数组。</para><para>设置多个单元格区域的公式填充公式的范围中的所有单元格。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-513">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-514">返回或设置对象，用宏语言的 R1C1 样式表示法表示的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-514">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-515">
            <para>如果单元格包含常量，该属性返回的常量。如果单元格为空，则属性将返回空字符串。如果单元格包含公式，则该属性返回公式作为字符串中，在其中将显示公式栏 （包括等号） 中的格式。</para>如果设置为日期值或单元格公式的
          <para>，Microsoft Excel 将检查以查看是否已设置该单元格格式之一的日期或时间的数字格式。如果没有的数字格式将更改为默认的短日期数字格式。</para>如果该区域是一个-或两维范围
          <para>，您可以为数组相同尺寸设置公式。同样，将公式放入数组。</para><para>设置多个单元格区域的公式填充公式的范围中的所有单元格。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-515">
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-516">返回或设置对象，使用的用户语言的 R1C1 样式表示法表示的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-516">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-517">
            <para>如果单元格包含常量，该属性返回的常量。如果单元格为空，则属性将返回空字符串。如果单元格包含公式，则该属性返回公式作为字符串中，在其中将显示公式栏 （包括等号） 中的格式。</para>如果设置为日期值或单元格公式的
          <para>，Microsoft Excel 将检查以查看是否已设置该单元格格式之一的日期或时间的数字格式。如果没有的数字格式将更改为默认的短日期数字格式。</para>如果该区域是一个-或两维范围
          <para>，您可以为数组相同尺寸设置公式。同样，将公式放入数组。</para><para>设置多个单元格区域的公式填充公式的范围中的所有单元格。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-517">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-518">对指定区域左上角单元格启动“函数向导”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-518">Starts the Function Wizard for the upper-left cell of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal">
          <span data-ttu-id="59ac6-519">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-519">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-520">希望在该单元格中返回的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-520">The value you want returned in this cell.</span>
          </span>
        </param>
        <param name="ChangingCell">
          <span data-ttu-id="59ac6-521">所需<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-521">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="59ac6-522">指定为获得目标值而应更改的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-522">Specifies which cell should be changed to achieve the target value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-523">计算实现特定目标所必需的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-523">Calculates the values necessary to achieve a specific goal.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-524">
            <para>如果目标是返回的公式的量，这会计算一个值，当提供给您的公式，将导致返回所需的数字的公式。</para>
            <para>如果单变量求解成功，则此方法返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-524">
              <para>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</para>
              <para>This method returns <b>True</b> if the goal seek is successful.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="59ac6-525">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-525">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-526">要进行分组的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-526">The first value to be grouped.</span>
          </span>
          <span data-ttu-id="59ac6-527">如果省略此参数，或使用<b>，则返回 True</b>，字段中的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-527">If this argument is omitted or <b>True</b>, the first value in the field is used.</span>
          </span>
        </param>
        <param name="End">
          <span data-ttu-id="59ac6-528">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-529">要进行分组的最后一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-529">The last value to be grouped.</span>
          </span>
          <span data-ttu-id="59ac6-530">如果省略此参数，或使用<b>，则返回 True</b>，字段中的最后一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-530">If this argument is omitted or <b>True</b>, the last value in the field is used.</span>
          </span>
        </param>
        <param name="By">
          <span data-ttu-id="59ac6-531">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-532">如果该字段是数字，该参数指定每个组的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-532">If the field is numeric, this argument specifies the size of each group.</span>
          </span>
          <span data-ttu-id="59ac6-533">如果该字段是一个日期，该参数指定的天数每个组中如果 4 中的元素<paramref name="Periods" />数组为<b>true，</b>以及所有其他元素都为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-533">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span>
          </span>
          <span data-ttu-id="59ac6-534">否则，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-534">Otherwise, this argument is ignored.</span>
          </span>
          <span data-ttu-id="59ac6-535">如果省略此参数，则 Microsoft Excel 将自动选择默认组大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-535">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span>
          </span>
        </param>
        <param name="Periods">
          <span data-ttu-id="59ac6-536">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-537">指定的时间段组下, 表中所示的布尔值的数组。为相应的时间; 如果数组中的元素为<b>True</b>，将创建一个组如果该元素是<b>False</b>，，不创建任何组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-537">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span>
          </span>
          <span data-ttu-id="59ac6-538">如果字段不是日期字段，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-538">If the field isn’t a date field, this argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-539">当<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象表示数据透视表字段的数据区域中的单个单元格， <b>Group</b>方法在该字段中执行基于数字或日期的分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-539">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-540">
            <para>
              <b>Range</b>对象必须是数据透视表字段的数据区域中的单个单元格。如果您尝试将此方法应用于多个单元格，它将失败，但不是会显示一条错误消息。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-540">
              <para>The <b>Range</b> object must be a single cell in the PivotTable field’s data range. If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-541">确定指定单元格是否是数组公式的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-541">Determines if the specified cell is part of an array formula.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-542">
            <para>如果指定的单元格为数组公式的一部分，则此属性返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-542">
              <para>This property returns <b>True</b> if the specified cell is part of an array formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-543">确定是否区域中的所有单元格包含公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-543">Determines if all cells in the range contain formulas.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-544">
            <para>如果区域中的所有单元格包含公式，此属性返回<b>True</b> 、 <b>False</b>如果无范围中的单元格包含公式和<b>Null</b>否则。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-544">
              <para>This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-545">范围的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-545">The height of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-546">确定是否隐藏的行或列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-546">Determines if the rows or columns are hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-547">
            <para>如果隐藏行或列，则此属性返回<b>True</b> 。指定的区域必须跨越多个行或整列。</para>
            <para>不将此属性与<see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />属性。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-547">
              <para>This property returns <b>True</b> if the rows or columns are hidden. The specified range must span an entire column or row.</para>
              <para>Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-548">返回或设置指定对象的水平对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-548">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-549">返回<see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" />集合，它代表区域的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-549">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-550">返回或设置指定单元格的识别标志页保存为网页时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-550">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-551">
            <para>您可将 ID 标签用作其他 HTML 文档或相同网页上的超链接引用。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-551">
              <para>You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-552">返回或设置单元格或区域的缩进。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-552">Returns or sets the indent level for the cell or range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-553">
            <para>的缩进量可以是介于 0 到 15 的整数。</para>
            <para>使用此属性将缩进级别设置为一个小于 0 （零） 或大于 15 将导致出错。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-553">
              <para>The indent level can be an integer from 0 to 15.</para>
              <para>Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="59ac6-554">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-555">指定移动单元格的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-555">Specifies which way to shift the cells.</span>
          </span>
          <span data-ttu-id="59ac6-556">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" />常量： <b>xlShiftToRight</b>或<b>xlShiftDown</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-556">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span>
          </span>
          <span data-ttu-id="59ac6-557">如果省略此参数，则 Microsoft Excel 将决定基于区域的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-557">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <param name="CopyOrigin">
          <span data-ttu-id="59ac6-558">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-559">复制的起点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-559">The copy origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-560">在工作表或宏表中插入一个单元格或单元格区域，其他单元格相应移位以腾出空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-560">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount">
          <span data-ttu-id="59ac6-561">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-561">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="59ac6-562">要添加到当前缩进量的缩进量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-562">The amount to be added to the current indent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-563">向指定的区域添加缩进量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-563">Adds an indent to the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-564">
            <para>使用此方法将缩进级别设置为一个小于 0 （零） 或大于 15 将导致出错。</para>
            <para>使用<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />属性可返回范围内的缩进级别。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-564">
              <para>Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para>Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-565">返回<see cref="T:Microsoft.Office.Interop.Excel.Interior" />值，该值代表指定对象的内部的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-565">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">
          <span data-ttu-id="59ac6-566">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-566">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-567">要访问的单元格的索引号，顺序为从左到右，然后往下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-567">The index number of the cell you want to access, in order from left to right, then down.</span>
          </span>
          <span data-ttu-id="59ac6-568">Range.Item(1) 返回范围; 中的左上角单元格Range.Item(2) 立即返回右侧的左上角单元格的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-568">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span>
          </span>
        </param>
        <param name="ColumnIndex">
          <span data-ttu-id="59ac6-569">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-570">指明要访问的单元格所在列的列号的数字或字符串，1 或 “A”表示区域中的第一列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-570">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-571">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象表示指定区域存在一定偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-571">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-572">
            <para>
              <paramref name="RowIndex" />和<paramref name="ColumnIndex" />参数是相对偏移量。换句话说，指定<paramref name="RowIndex" />1 的返回的范围，不在工作表的第一行的第一行中单元格。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-572">
              <para>The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets. In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-573">调整区域内的文字，使之均衡地填充该区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-573">Rearranges the text in a range so that it fills the range evenly.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-574">
            <para>如果该区域不足够大，Microsoft Excel 将显示一条消息，告知您文本将超出范围。如果您单击确定按钮，对齐的文本将替换超出所选范围的单元格中的内容。若要防止出现此消息，请设置<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />属性设为<b>False</b>。设置该属性后，文本将始终替换范围的单元格中的内容。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-574">
              <para>If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range. If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range. To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. After you set this property, text will always replace the contents in cells below the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-575">从 A 列的左边缘到区域的左边缘的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-575">The distance from the left edge of column A to the left edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-576">
            <para>不连续范围，如果使用的第一个区域。如果该范围是范围的多个列，则使用范围中最左侧的列。</para>如果窗口处于最大化
          <para>，此属性返回会有所不同，为负数基于窗口边框的宽度。此属性设置为 0 （零） 将使窗口稍微有点小超过将应用程序窗口已最大化状态。换句话说，如果此属性为 0 （零），Microsoft Excel 主窗口的左边的框将几乎会显示在屏幕上。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-576">
              <para>If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</para>
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-577">返回指定区域的标题行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-577">Returns the number of header rows for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-578">
            <para>使用此属性之前，使用<see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />属性查找区域的边界。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-578">
              <para>Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-579">将粘贴到开头范围中的第一个单元格的工作表上所有的显示名称的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-579">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-580">
            <para>使用<see cref="P:Microsoft.Office.Interop.Excel._Application.Names" />属性可返回工作表上的所有名称的集合。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-580">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-581">返回<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />对象的<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象或<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-581">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-582">返回一个常量，介绍的一部分<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />包含指定区域左上角的报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-582">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-583">
            <para>
              <b>XlLocationInTable</b>可为以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" />常量：</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlRowHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlTableBody</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-583">
              <para>
                <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlRowHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTableBody</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-584">确定对象已被锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-584">Determines if the object is locked.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-585">
            <para>如果指定的区域中包含锁定和解除锁定单元格，此属性返回<b>True</b>如果对象已锁定、 <b>False</b>时工作表受保护，可以修改对象和<b>Null</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-585">
              <para>This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-586">返回指定的 MDX 名称<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-586">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="59ac6-587">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-587">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59ac6-588">字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-588">String</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across">
          <span data-ttu-id="59ac6-589">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-589">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-590">
            <b>True</b>合并为单独的合并单元格指定范围中每一行中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-590">
              <b>True</b> to merge cells in each row of the specified range as separate merged cells.</span>
          </span>
          <span data-ttu-id="59ac6-591">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-591">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-592">从指定创建合并单元格<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-592">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-593">
            <para>合并区域的值指定区域左上角的单元格中。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-593">
              <para>The value of a merged range is specified in the cell of the range's upper-left corner.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-594">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示包含指定单元格的合并的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-595">
            <para>指定单元格不合并区域中，如果此属性返回的指定单元格。</para>
            <para>
              <b>MergeArea</b>属性仅适用于单个单元格区域。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-595">
              <para>If the specified cell isn’t in a merged range, this property returns the specified cell.</para>
              <para>The <b>MergeArea</b> property only works on a single-cell range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-596">确定区域或样式是否包含合并单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-596">Determines if the range or style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-597">
            <para>如果 range 或 style 包含合并单元格，此属性返回<b>True</b> 。</para>
            <para>当您选择该区域包含合并单元格时，所获得的选择可能不同于预期的所选内容。使用<see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />属性检查所选范围的地址。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-597">
              <para>This property returns <b>True</b> if the range or style contains merged cells.</para>
              <para>When you select a range that contains merged cells, the resulting selection may be different from the intended selection. Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-598">返回或设置对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-598">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-599">
            <para>一个<b>Range</b>对象的名称就是<see cref="T:Microsoft.Office.Interop.Excel.Name" />对象。对于每个其他类型的对象，名称为<b>字符串</b>。</para>
            <para>下表显示<b>名称</b>属性和给定唯一名称"[Europe] 与 OLAP 数据源相关的属性示例值。[France]。[Paris]"，并将与项目的非 OLAP 数据源命名"巴黎"。</para>
            <list type="table">
              <item>
                <term>标题</term>
                <description>巴黎</description>
                <description>巴黎</description>
              </item>
              <item>
                <term>名称</term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>巴黎</description>
              </item>
              <item>
                <term>SourceName</term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>（与 SQL 属性值，只读相同）</description>
              </item>
              <item>
                <term>值</term>
                <description>[Europe]。 [法国]。[Paris]（只读）</description>
                <description>巴黎</description>
              </item>
            </list>
            <para>指定的索引时<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />集合，您可以使用下表中所示的语法。</para>
            <list type="table">
              <item>
                <term>表达式。PivotItems ("[Europe]。 [法国]。[Paris]")</term>
                <description>表达式。PivotItems("Paris")</description>
              </item>
            </list>
            <para>时使用<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />属性引用集合中的特定成员，您可以使用下表中所示的文本索引名称。</para>
            <list type="table">
              <item>
                <term>[Europe]。 [法国]。[Paris]</term>
                <description>巴黎</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-599">
              <para>The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object. For every other type of object, the name is a <b>String</b>.</para>
              <para>The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>Caption</term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>Name</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>SourceName</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>Value</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent">
          <span data-ttu-id="59ac6-600">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-600">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-601">指定定位的方向： <b>True</b>定位到从属单元格;<b>False</b>定位到从属。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-601">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span>
          </span>
        </param>
        <param name="ArrowNumber">
          <span data-ttu-id="59ac6-602">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-603">指定要定位的箭头编号；对应于单元格公式中编号的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-603">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span>
          </span>
        </param>
        <param name="LinkNumber">
          <span data-ttu-id="59ac6-604">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-604">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-605">如果箭头是外部引用箭头，该参数表示外部引用执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-605">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span>
          </span>
          <span data-ttu-id="59ac6-606">如果省略此参数，则后面第一个外部引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-606">If this argument is omitted, the first external reference is followed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-607">导航到追踪引用、 相关，或导致错误的单元格或单元格指定区域的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-607">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-608">
            <para>选定的引用单元格、 相关或错误的单元格并返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示新选定区域。如果应用于没有可见的追踪箭头的单元格，则此方法会导致错误。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-608">
              <para>Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection. This method causes an error if it's applied to a cell without visible tracer arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-609">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它代表下一个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-609">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-610">
            <para>此属性会模拟 TAB 键，但会返回下一个单元格不选定它。</para>
            <para>在受保护的工作表，此属性返回下一个未锁定单元格。不受保护的表，此属性始终返回单元格立即右侧的指定单元格。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-610">
              <para>This property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="59ac6-611">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-611">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-612">要添加到注释 （最多 255 个字符） 的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-612">The text to add to the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="59ac6-613">将文本插入位置开始<paramref name="Start" />，并替换<paramref name="Length" />现有备注的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-613">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span>
          </span>
          <span data-ttu-id="59ac6-614">如果省略此参数，则此方法返回当前文本，该注释起始位置<paramref name="Start" />，为<paramref name="Length" />字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-614">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="59ac6-615">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-615">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-616">设置或返回的文本的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-616">The starting position for the text that’s set or returned.</span>
          </span>
          <span data-ttu-id="59ac6-617">如果省略此参数，则此方法从第一个字符开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-617">If this argument is omitted, this method starts at the first character.</span>
          </span>
          <span data-ttu-id="59ac6-618">要追加到注释的文本，请在现有备注中指定一个大于的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-618">To append text to the note, specify a number larger than the number of characters in the existing note.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="59ac6-619">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-619">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-620">设置或返回的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-620">The number of characters to be set or returned.</span>
          </span>
          <span data-ttu-id="59ac6-621">如果省略此参数，则 Microsoft Excel 设置或返回的起始位置的字符到末尾的注释 （最多 255 个字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-621">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="59ac6-622">如果有超过 255 个字符从<paramref name="Start" />到末尾的注释，此方法返回仅 255 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-622">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-623">返回或设置与区域左上角的单元格关联的单元格注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-623">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-624">范围注释已更换<para>单元格注释。有关详细信息，请参阅<see cref="T:Microsoft.Office.Interop.Excel.Comment" />对象。</para><para>若要添加一条注释，包含超过 255 个字符，一次此方法用于指定前 255 个字符，并将其重新附加注释 （一次不超过 255 个字符） 的其余部分。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-624">
              <para>Cell notes have been replaced by range comments. For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</para>
              <para>To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-625">返回或设置对象的格式代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-625">Returns or sets the format code for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-626">
            <para>如果指定范围中的所有单元格都包含相同的数字格式，此属性返回<b>Null</b> 。</para>
            <para>格式代码是作为单元格格式对话框中的格式代码选项相同的字符串。<b>Format</b>函数使用格式代码字符串不同，不执行<b>与 NumberFormat</b>和<see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />属性。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-626">
              <para>This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</para>
              <para>The format code is the same string as the Format Codes option in the Format Cells dialog box. The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-627">返回或设置对象的格式代码，以用户的语言的字符串形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-627">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-628">
            <para>
              <b>Format</b>函数使用使用的格式代码字符串不同<see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />和<b>NumberFormatLocal</b>属性。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-628">
              <para>The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset">
          <span data-ttu-id="59ac6-629">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-629">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-630">行 （正值，负，或 0 （零）） 数通过其范围是偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-630">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="59ac6-631">正值表示向下偏移和负值表示向上偏移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-631">Positive values are offset downward, and negative values are offset upward.</span>
          </span>
          <span data-ttu-id="59ac6-632">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-632">The default value is 0.</span>
          </span>
        </param>
        <param name="ColumnOffset">
          <span data-ttu-id="59ac6-633">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-633">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-634">列 （正值，负，或 0 （零）） 的数目通过其范围是偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-634">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="59ac6-635">正值表示向右，偏移和负值表示向左侧偏移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-635">Positive values are offset to the right, and negative values are offset to the left.</span>
          </span>
          <span data-ttu-id="59ac6-636">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-636">The default value is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-637">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，代表指定区域存在一定偏移的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-637">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-638">返回的文本方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-638">Returns the text orientation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-639">
            <para>这返回方向值可以是介于 90 到 90 度的整数值。</para>
            <para>对于 OLAP 数据源，层次结构中设置此属性的一个字段设置相同的层次结构中的其他字段的方向。只能在行、 列和页字段区域的数据透视表报告中进行定向维度字段。仅可以在数据区域面向度量字段。层次结构或数据的字段设置为<b>xlHidden</b>从数据透视表中删除字段的层次结构。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-639">
              <para>This returned orientation value can be an integer value from 90 to 90 degrees.</para>
              <para>For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-640">返回或设置指定的行或列的当前大纲级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-640">Returns or sets the current outline level of the specified row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-641">
            <para>一级为最外层的摘要。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-641">
              <para>Level one is the outermost summary level.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-642">返回或设置一个分页符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-642">Returns or sets the location of a page break.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-643">
            <para>返回的值可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />常量：</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlPageBreakAutomatic</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakManual</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakNone</b>
                </description>
              </item>
            </list>
            <para>此属性可返回自动或手动页的位置分页符，但它只能设置 （它只能设置为<b>xlPageBreakManual</b>或<b>xlPageBreakNone</b>） 的手动分页符的位置。</para>
            <para>要删除的工作表上的所有手动分页符，请将清除设置为<b>xlPageBreakNone</b>。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-643">
              <para>The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlPageBreakAutomatic</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakManual</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakNone</b>
                  </description>
                </item>
              </list>
              <para>This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</para>
              <para>To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-644">返回指定对象的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-644">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine">
          <span data-ttu-id="59ac6-645">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-645">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-646">一个字符串，包含可指示应在何处拆分单元格的左边框和右括号。例如，"[xxx] [xxx]"将插入到目标区域，第一列的前三个字符，它会在第二列中插入三个字符。如果省略此参数，则 Microsoft Excel 将猜测拆分基于左上角单元格区域中的间距的列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-646">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span>
          </span>
          <span data-ttu-id="59ac6-647">如果您想要使用不同的范围猜测分析行，使用<b>范围</b>对象为<paramref name="ParseLine" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-647">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span>
          </span>
          <span data-ttu-id="59ac6-648">该范围必须对要分析的单元格之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-648">That range must be one of the cells that's being parsed.</span>
          </span>
          <span data-ttu-id="59ac6-649">
            <paramref name="ParseLine" />参数不能超过 255 个字符，包括括号和空格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-649">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="59ac6-650">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-651">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示已分析的数据的目标区域的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-651">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span>
          </span>
          <span data-ttu-id="59ac6-652">如果省略此参数，则 Microsoft Excel 将分析就地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-652">If this argument is omitted, Microsoft Excel parses in place.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-653">分析的数据范围，并将其分为多个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-653">Parses a range of data and breaks it into multiple cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-654">
            <para>分发要填充相邻的多个列的范围的内容。范围可以是不超过一列的宽度。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-654">
              <para>Distributes the contents of the range to fill several adjacent columns. The range can be no more than one column wide.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">
          <span data-ttu-id="59ac6-655">可选<see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-655">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span>
          </span>
          <span data-ttu-id="59ac6-656">要粘贴的区域部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-656">The part of the range to be pasted.</span>
          </span>
          <span data-ttu-id="59ac6-657">可以是下列<b>XlPasteType</b>常量之一：<b>xlPasteAll 默认</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-657">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          </span>
        </param>
        <param name="Operation">
          <span data-ttu-id="59ac6-658">可选<see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span>
          </span>
          <span data-ttu-id="59ac6-659">粘贴操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-659">The paste operation.</span>
          </span>
          <span data-ttu-id="59ac6-660">可以是下列<b>XlPasteSpecialOperation</b>常量之一：<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-660">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          </span>
        </param>
        <param name="SkipBlanks">
          <span data-ttu-id="59ac6-661">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-661">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-662">
            <b>True</b>没有剪贴板粘贴到目标区域上区域中的空白单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-662">
              <b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span>
          </span>
          <span data-ttu-id="59ac6-663">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-663">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Transpose">
          <span data-ttu-id="59ac6-664">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-665">
            <b>True</b>粘贴区域时转置行和列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-665">
              <b>True</b> to transpose rows and columns when the range is pasted.</span>
          </span>
          <span data-ttu-id="59ac6-666">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-666">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-667">粘贴<see cref="T:Microsoft.Office.Interop.Excel.Range" />从剪贴板粘贴到指定范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-667">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-668">返回<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />对象，其中包含有关单元格中特定拼音文本字符串的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-668">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-669">
            <para>此属性提供了与 Microsoft Excel 的早期版本兼容。您应使用<b>拼音</b>(<paramref name="index" />)，其中 index 是索引号的拼音文本以返回单个<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />对象。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-669">
              <para>This property provides compatibility with earlier versions of Microsoft Excel. You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-670">返回<see cref="T:Microsoft.Office.Interop.Excel.Phonetics" />范围的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-670">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-671">返回<see cref="T:Microsoft.Office.Interop.Excel.PivotCell" />对象，它代表数据透视表报告中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-672">返回<see cref="T:Microsoft.Office.Interop.Excel.PivotField" />对象，表示包含指定区域左上角的数据透视表字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-673">返回<see cref="T:Microsoft.Office.Interop.Excel.PivotItem" />对象，表示包含指定区域左上角的数据透视表项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-674">返回<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />对象，它代表数据透视表报表，其中包含指定的区域或与数据透视图相关联的数据透视表报表的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-674">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-675">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示单元格的所有引用单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-675">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-676">
            <para>如果有多个引用单元格，这可以是多重选择 （ <b>Range</b>对象的联合）。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-676">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-677">返回单元格的前缀字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-677">Returns the prefix character for the cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-678">
            <para>如果<see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />属性为<b>False</b>，将此前缀字符文本标签或空白。<b>TransitionNavigKeys</b>属性为<b>True</b>，如果此字符将左对齐的标签，"右对齐的标签，^ 居中的标签，\ 重复的标签，或空白。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-678">
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank. If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-679">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示上一单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-679">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-680">
            <para>对象为区域，如果此属性是仿效 SHIFT + TAB; 但是，与不同的键的组合，该属性返回的以前的单元格，而不选中它。</para>
            <para>在受保护的工作表，此属性返回以前未锁定单元格。不受保护的表，此属性始终返回单元格立即指定单元格的左侧。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-680">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="59ac6-681">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-681">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-682">从中开始打印的页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-682">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="59ac6-683">如果省略此参数，则打印从开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-683">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="59ac6-684">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-684">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-685">要打印的末页数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-685">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="59ac6-686">如果省略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-686">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="59ac6-687">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-687">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-688">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-688">The number of copies to print.</span>
          </span>
          <span data-ttu-id="59ac6-689">如果省略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-689">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="59ac6-690">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-690">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-691">
            <b>True</b>以使 Microsoft Excel 调用之前打印对象; 打印预览<b>False</b>（或省略） 若要立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-691">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="59ac6-692">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-692">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-693">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-693">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="59ac6-694">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-695">
            <b>True</b>打印到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-695">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="59ac6-696">如果未指定<b>PrToFileName</b> ，Microsoft Excel 将提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-696">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="59ac6-697">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-697">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-698">如果为 <b>True</b>，则逐份打印多个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-698">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="59ac6-699">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-699">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-700">如果 <b>PrintToFile</b> 设为 <b>True</b>，则该参数指定要打印到的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-700">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-701">打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-701">Prints the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-702">
            <para>说明中的"页面"<paramref name="From" />和<paramref name="To" />指打印页 — 表或工作簿中的未全部页。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-702">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="59ac6-703">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-703">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59ac6-704">返回<see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-704">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="59ac6-705">
            <b>True</b>启用更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-705">
              <b>True</b> to enable changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-706">按对象打印后的外观效果显示对象的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-706">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-707">返回<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />对象，表示与指定相交的查询表<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-707">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="59ac6-708">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-708">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-709">区域名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-709">The name of the range.</span>
          </span>
          <span data-ttu-id="59ac6-710">这必须是在宏语言中 A1 样式的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-710">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="59ac6-711">它可以包括区域运算符 （冒号）、 交点运算符 （空格） 或 union 运算符 （逗号分隔）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-711">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="59ac6-712">它还可以包含美元符号，但它们被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-712">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="59ac6-713">您可以使用局部定义的名称在该范围的任何部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-713">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="59ac6-714">如果您使用的名称，被假定该名称为宏的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-714">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="59ac6-715">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-715">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-716">区域左上角和右下角中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-716">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="59ac6-717">可以是一个<b>Range</b>对象，该对象包含单个单元格、 整列或整行，也可以是命名的宏语言中的单个单元格的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-717">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-718">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它代表单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-718">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-719">
            <para>此属性是相对于<b>Range</b>对象。例如，如果所选内容位于单元格 C3，然后 Selection.Range("B1") 返回单元格 D3 因为它是相对于<b>Range</b>对象返回<see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" />属性。另一方面，ActiveSheet.Range("B1") 始终返回单元格 B1。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-719">
              <para>This property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, ActiveSheet.Range("B1") always returns cell B1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-720">返回或设置指定对象的读取顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-720">Returns or sets the reading order for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-721">
            <para>返回的值可以是下列常量之一： <b>xlRTL</b> （右至左）、 <b>xlLTR</b> （从左到右） 或<b>xlContext</b>。</para>
            <para>这些常量的一些可能不可用，具体取决于您已选择或安装的语言支持 （例如，美国英语）。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-721">
              <para>The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns">
          <span data-ttu-id="59ac6-722">可选的包含重复的信息的列的索引的<b>对象</b>数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-722">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span>
          </span>
          <span data-ttu-id="59ac6-723">如果没有传递则假定所有列都包含重复的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-723">If nothing is passed then it assumes all columns contain duplicate information.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="59ac6-724">可选<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />指定的第一行是否包含标题信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-724">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span>
          </span>
          <span data-ttu-id="59ac6-725">
            <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" />为默认值;指定<see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" />如果您希望 Excel 尝试确定标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-725">
              <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-726">从值区域中删除重复的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-726">Removes duplicate values from a range of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-727">删除列表中的分类汇总。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-727">Removes subtotals from a list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="59ac6-728">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-728">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-729">Microsoft Excel 要搜索的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-729">The string you want Microsoft Excel to search for.</span>
          </span>
        </param>
        <param name="Replacement">
          <span data-ttu-id="59ac6-730">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-730">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-731">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-731">The replacement string.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="59ac6-732">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-732">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-733">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" />常量： <b>xlWhole</b>或<b>xlPart</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-733">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="59ac6-734">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-735">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" />常量： <b>xlByRows</b>或<b>xlByColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-735">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="59ac6-736">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-736">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-737">如果为  <b>True</b> ，则搜索区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-737">
              <b>True</b> to make the search case sensitive.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="59ac6-738">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-738">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-739">仅当您已选择或 Microsoft Excel 中安装双字节语言支持，您可以使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-739">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="59ac6-740">
            <b>True</b>以使双字节字符匹配仅双字节字符;<b>False</b>双字节字符匹配单字节等效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-740">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="59ac6-741">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-741">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-742">该方法的搜索格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-742">The search format for the method.</span>
          </span>
        </param>
        <param name="ReplaceFormat">
          <span data-ttu-id="59ac6-743">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-743">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-744">该方法的替换格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-744">The replace format for the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-745">返回一个<b>boolean 类型的值</b>，该值指示所指定区域中的单元格中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-745">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-746">
            <para>使用此方法不更改所选内容或活动单元格。</para>
            <para>的设置为<paramref name="LookAt" />， <paramref name="SearchOrder" />， <paramref name="MatchCase" />，和<paramref name="MatchByte" />保存每次使用此方法。如果不指定这些参数的值在下次调用方法，将使用保存的值。设置以下参数更改的设置查找对话框中，并更改查找对话框中的设置更改保存使用如果省略的参数的值。若要避免出现问题，这些参数显式设置每次使用此方法。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-746">
              <para>Using this method doesn’t change either the selection or the active cell.</para>
              <para>The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize">
          <span data-ttu-id="59ac6-747">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-747">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-748">新区域中的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-748">The number of rows in the new range.</span>
          </span>
          <span data-ttu-id="59ac6-749">如果省略此参数，则的范围中的行数保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-749">If this argument is omitted, the number of rows in the range remains the same.</span>
          </span>
        </param>
        <param name="ColumnSize">
          <span data-ttu-id="59ac6-750">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-750">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-751">新区域中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-751">The number of columns in the new range.</span>
          </span>
          <span data-ttu-id="59ac6-752">如果省略此参数，则范围中的列数保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-752">If this argument is omitted, the number of columns in the range remains the same.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-753">调整指定的区域的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-753">Resizes the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-754">返回区域中的第一行的第一个区域数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-754">Returns the number of the first row of the first area in the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="59ac6-755">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-755">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-756">用于与指定区域进行比较的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-756">A single cell to compare with the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-757">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示其内容是不同的每一行中与比较单元格的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-757">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-758">返回指定范围中的所有行的高度，以磅为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-758">Returns the height of all the rows in the range specified, measured in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-759">
            <para>如果指定范围中的各行不高度相同，此属性返回<b>Null</b> 。</para>
            <para>单行、 的值的<see cref="P:Microsoft.Office.Interop.Excel.Range.Height" />属性等于<b>RowHeight</b>属性的值。但是，您可以还使用<b>Height</b>属性可返回单元格区域的总高度。</para>
            <para>之间是<b>RowHeight</b>和<b>Height</b>的其他差别包括以下：</para>
            <list type="bullet">
              <item>
                <description>
                  <b>高度</b>是只读的。</description>
              </item>如果返回多个行的<b>RowHeight</b>属性
            <item><description>，您将获得行高的每个行 （如果所有行的行高） 或<b>Null</b> （如果它们是不同高度）。如果返回多个行的<b>高度</b>属性，您将获取所有行的总高度。</description></item></list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-759">
              <para>This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</para>
              <para>For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property. However, you can also use the <b>Height</b> property to return the total height of a range of cells.</para>
              <para>Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>Height</b> is read-only.</description>
                </item>
                <item>
                  <description>If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights). If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-760">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，代表指定范围中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-760">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-761">
            <para>应用于<b>Range</b>对象，它是多个所选内容时，该属性将返回仅范围的第一个区域中的行。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-761">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="59ac6-762">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-762">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-763">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-763">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="59ac6-764">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-764">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-765">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-765">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="59ac6-766">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-766">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-767">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-767">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="59ac6-768">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-768">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-769">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-769">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="59ac6-770">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-770">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-771">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-771">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="59ac6-772">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-772">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-773">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-773">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="59ac6-774">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-774">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-775">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-775">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="59ac6-776">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-776">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-777">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-777">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="59ac6-778">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-778">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-779">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-779">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="59ac6-780">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-780">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-781">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-781">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="59ac6-782">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-782">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-783">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-783">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="59ac6-784">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-784">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-785">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-785">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="59ac6-786">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-787">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-787">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="59ac6-788">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-789">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-789">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="59ac6-790">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-790">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-791">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-791">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="59ac6-792">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-792">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-793">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-793">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="59ac6-794">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-794">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-795">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-795">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="59ac6-796">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-797">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-797">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="59ac6-798">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-798">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-799">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-799">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="59ac6-800">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-800">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-801">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-801">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="59ac6-802">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-802">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-803">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-803">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="59ac6-804">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-804">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-805">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-805">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="59ac6-806">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-806">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-807">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-807">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="59ac6-808">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-808">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-809">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-809">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="59ac6-810">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-811">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-811">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="59ac6-812">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-812">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-813">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-813">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="59ac6-814">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-814">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-815">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-815">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="59ac6-816">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-816">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-817">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-817">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="59ac6-818">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-818">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-819">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-819">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="59ac6-820">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-820">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-821">传递给函数的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-821">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-822">此位置中运行的 Microsoft Excel 宏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-822">Runs the Microsoft Excel macro at this location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-823">
            <para>该范围必须宏工作表上。</para>
            <para>不能使用此方法使用命名的参数。参数必须按位置传递。</para>
            <para>
              <b>Run</b>方法返回被调用的宏返回任何。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-823">
              <para>The range must be on a macro sheet.</para>
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-824">选择对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-824">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-825">
            <para>若要选择一个单元格的范围，请使用 Select 方法。若要使单个单元格活动单元格，请使用<see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" />方法。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-825">
              <para>To select a cell or a range of cells, use the Select method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-826">指定可用于的 SharePoint 服务器上执行的操作<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-826">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Actions" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-827">创建<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />对象的指定范围中的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-827">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="59ac6-828">
            <para>指定范围中的任何现有<b>Phonetic</b>对象都会自动覆盖 （删除） 使用此方法添加的新对象。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-828">
              <para>Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-829">滚动活动窗口将范围移到视图的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-829">Scrolls through the contents of the active window to move the range into view.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-830">
            <para>该区域必须包含活动文档中的单个单元格。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-830">
              <para>The range must consist of a single cell in the active document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="59ac6-831">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-831">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-832">
            <b>True</b>以删除一个级别的追踪箭头直接从属单元格;<b>False</b>以展开一个级别的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-832">
              <b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="59ac6-833">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-833">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-834">绘制从指定区域指向直接从属单元格的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-834">Draws tracer arrows to the direct dependents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-835">如果指定区域展开大纲，（以便是可见的行或列的详细信息），则返回<b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-835">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-836">
            <para>指定的区域必须是单个汇总列或行在大纲中。</para>
            <para>如果范围为数据透视表报告中，此属性设置为<b>true，</b>如果该项目正在显示明细数据。</para>
            <para>如果指定的区域不在数据透视表报告中，下列语句是，则返回 true:</para>
            <list type="bullet">
              <item>
                <description>该范围必须在单个汇总行或列中。</description>
              </item>
              <item>
                <description>如果任何行或列的子级处于隐藏状态，此属性返回<b>False</b> 。</description>
              </item>
              <item>
                <description>将此属性设置为<b>True</b>等效于显示的汇总行或列的所有子级。</description>
              </item>
              <item>
                <description>此属性设置为<b>False</b>相当于隐藏汇总行或列的所有子级。</description>
              </item>
              <item>
                <description>如果数据透视表中指定的范围，就可以一次设置此属性的多个单元格，如果是连续的区域。此属性可返回的范围是单个单元格时，才。</description>
              </item>
            </list>
            <para>此属性不可用于 OLAP 数据源。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-836">
              <para>The specified range must be a single summary column or row in an outline.</para>
              <para>If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</para>
              <para>If the specified range isn’t in a PivotTable report, the following statements are true:</para>
              <list type="bullet">
                <item>
                  <description>The range must be in a single summary row or column.</description>
                </item>
                <item>
                  <description>This property returns <b>False</b> if any of the children of the row or column are hidden.</description>
                </item>
                <item>
                  <description>Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</description>
                </item>
              </list>
              <para>This property isn’t available for OLAP data sources.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-837">到错误的源，并返回的范围包含该单元格的单元格绘制通过从属单元格树的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-837">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="59ac6-838">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-838">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-839">
            <b>True</b>以删除一个级别的追踪箭头直接引用单元格;<b>False</b>以展开一个级别的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-839">
              <b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="59ac6-840">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-840">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-841">绘制从指定区域指向直接引用单元格的追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-841">Draws tracer arrows to the direct precedents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-842">确定文本是否自动缩小以适合可用列宽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-842">Determines if text automatically shrinks to fit in the available column width.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-843">
            <para>如果文本会自动缩小以适应<b>可用列宽中</b>，如果此属性未设置为指定范围中的所有单元格的值相同，则此属性返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-843">
              <para>This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-844">返回<see cref="T:Microsoft.Office.Interop.Excel.SmartTags" />对象，它代表指定单元格的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-844">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1">
          <span data-ttu-id="59ac6-845">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-845">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-846">第一个排序字段，以文本 （数据透视表字段或区域名） 或<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象 （"Dept"或单元格 （1，1），例如）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-846">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="59ac6-847">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-847">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-848">字段或区域中指定的排序顺序<paramref name="Key1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-848">The sort order for the field or range specified in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="59ac6-849">可以是下列<b>XlSortOrder</b>常量之一：<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-849">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-850">排序<paramref name="Key1" />降序排序。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-850">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-851">排序<paramref name="Key1" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-851">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="59ac6-852">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-852">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-853">第二排序字段，文本 （数据透视表字段或区域名） 或<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-853">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="59ac6-854">如果省略此参数，则没有第二排序字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-854">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="59ac6-855">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-855">Cannot be used when sorting Pivot Table reports.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="59ac6-856">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-856">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-857">指定要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-857">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="59ac6-858">仅当排序数据透视表报表时，请使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-858">Use this argument only when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-859">可以是下列<b>XlSortType</b>常量之一：<b>xlSortLabels</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-859">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="59ac6-860">按标签对数据透视表数据排序。<b>xlSortValues</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-860">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="59ac6-861">按值对数据透视表排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-861">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="59ac6-862">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-862">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-863">字段或区域中指定的排序顺序<paramref name="Key2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-863">The sort order for the field or range specified in <paramref name="Key2" />.</span>
          </span>
          <span data-ttu-id="59ac6-864">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-864">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-865">可以是下列<b>XlSortOrder</b>常量之一：<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-865">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-866">排序<paramref name="Key2" />降序排序。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-866">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-867">排序<paramref name="Key2" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-867">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="59ac6-868">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-868">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-869">第三排序字段，文本 （范围名称） 或<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-869">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="59ac6-870">如果省略此参数，则任何第三排序字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-870">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="59ac6-871">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-871">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="59ac6-872">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-872">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-873">字段或区域中指定的排序顺序<paramref name="Key3" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-873">The sort order for the field or range specified in <paramref name="Key3" />.</span>
          </span>
          <span data-ttu-id="59ac6-874">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-874">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-875">可以是下列<b>XlSortOrder</b>常量之一：<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-875">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-876">排序<paramref name="Key3" />降序排序。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-876">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-877">排序<paramref name="Key3" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-877">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="59ac6-878">可选<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-878">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="59ac6-879">指定的第一行包含标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-879">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="59ac6-880">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-880">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-881">可以是下列<b>XlYesNoGuess</b>常量之一：<b>xlGuess</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-881">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="59ac6-882">让 Microsoft Excel 确定是否有标题，并确定其所在如果存在。<b>xlNo</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-882">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-883">（应排序整个区域。）<b>xlYes</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-883">(The entire range should be sorted).<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="59ac6-884">（整个区域应不进行排序）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-884">(The entire range should not be sorted).</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="59ac6-885">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-885">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-886">此参数是到的自定义排序次序列表中的基于一的整数偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-886">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="59ac6-887">如果省略<paramref name="OrderCustom" />，则使用正常排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-887">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="59ac6-888">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-888">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-889">
            <b>True</b>可执行区分大小写的排序;<b>False</b>可执行不区分大小写的排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-889">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="59ac6-890">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-890">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="59ac6-891">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-891">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="59ac6-892">排序方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-892">The sort orientation.</span>
          </span>
          <span data-ttu-id="59ac6-893">可以是下列<b>XlSortOrientation</b>常量之一：<b>xlSortRows</b><paramref name="default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-893">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-894">按行排序。<b>xlSortColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-894">Sorts by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="59ac6-895">按列排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-895">Sorts by column.</span>
          </span>
        </param>
        <param name="SortMethod">
          <span data-ttu-id="59ac6-896">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-896">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="59ac6-897">排序类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-897">The type of sort.</span>
          </span>
          <span data-ttu-id="59ac6-898">这些常量中的某些可能不可用，这取决于选择或安装的语言支持（例如，美国英语）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-898">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="59ac6-899">可以是下列<b>XlSortMethod</b>常量之一：<b>安装</b>通过按每个字符的笔划数排序。<b>所</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-899">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-900">汉语拼音的字符的顺序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-900">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="59ac6-901">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-901">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-902">指定如何排序中文<paramref name="Key 1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-902">Specifies how to sort text in <paramref name="Key 1" />.</span>
          </span>
          <span data-ttu-id="59ac6-903">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-903">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-904">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-904">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-905">将文本作为数字型数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-905">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-906">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-906">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="59ac6-907">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-907">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-908">指定如何排序中文<paramref name="Key 2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-908">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="59ac6-909">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-909">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-910">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-910">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-911">将文本作为数字型数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-911">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-912">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-912">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="59ac6-913">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-913">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-914">指定 key 3 中的文本的排序方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-914">Specifies how to sort text in key 3.</span>
          </span>
          <span data-ttu-id="59ac6-915">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-915">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-916">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-916">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-917">将文本作为数字型数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-917">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-918">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-918">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-919">如果指定的区域中包含只有一个单元格进行排序数据透视表、 区域或活动区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-919">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-920">
            <para>设置<paramref name="Header" />， <paramref name="Order1" />， <paramref name="Order2" />， <paramref name="Order3" />， <paramref name="OrderCustom" />，和<paramref name="Orientation" />保存，特定工作表，每次使用此方法。如果不指定这些参数的值在下次调用方法，将使用保存的值。如果您选择不使用保存的值，则使用<b>Sort</b>方法每次显式设置以下参数。</para>
            <para>通常排序不转换为数值数据的文本字符串。</para>
            <para>如果使用<b>Sort</b>方法不定义了任何参数，Microsoft Excel 会对所选内容，以升序排序。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-920">
              <para>The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</para>
              <para>Text strings which are not convertible to numeric data are sorted normally.</para>
              <para>If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod">
          <span data-ttu-id="59ac6-921">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-921">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="59ac6-922">排序类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-922">The type of sort.</span>
          </span>
          <span data-ttu-id="59ac6-923">这些常量中的某些可能不可用，这取决于选择或安装的语言支持（例如，美国英语）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-923">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="59ac6-924">可以是下列<b>XlSortMethod</b>常量之一：<b>安装</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-924">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span>
          </span>
          <span data-ttu-id="59ac6-925">通过在每个字符的笔划数排序。<b>所</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-925">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-926">汉语拼音的字符的顺序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-926">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="Key1">
          <span data-ttu-id="59ac6-927">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-928">第一个排序字段，可以是文本（数据透视表字段或区域名）也可以是 <b>Range</b> 对象（例如，“Dept”或 Cells(1, 1)）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-928">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="59ac6-929">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-929">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-930">字段或区域中指定的排序顺序<paramref name="Key1" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-930">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span>
          </span>
          <span data-ttu-id="59ac6-931">可以是下列<b>XlSortOrder</b>常量之一：<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-931">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-932">排序<paramref name="Key1" />降序排序。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-932">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-933">排序<paramref name="Key1" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-933">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="59ac6-934">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-934">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-935">指定要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-935">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="59ac6-936">仅当排序数据透视表报表时，请使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-936">Use this argument only when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="59ac6-937">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-938">第二排序字段，文本 （数据透视表字段或区域名） 或<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-938">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="59ac6-939">如果省略此参数，则没有第二排序字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-939">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="59ac6-940">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-940">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-941">可以是下列<b>XlSortType</b>常量之一：<b>xlSortLabels</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-941">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="59ac6-942">按标签对数据透视表数据排序。<b>xlSortValues</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-942">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="59ac6-943">按值对数据透视表排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-943">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="59ac6-944">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-944">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-945">字段或区域中指定的排序顺序<paramref name="Key2" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-945">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span>
          </span>
          <span data-ttu-id="59ac6-946">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-946">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-947">可以是下列<b>XlSortOrder</b>常量之一：<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-947">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-948">排序<paramref name="Key2" />按降序顺序<b>xlAscending</b>默认。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-948">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span>
          </span>
          <span data-ttu-id="59ac6-949">排序<paramref name="Key2" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-949">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="59ac6-950">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-950">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-951">第三排序字段，文本 （范围名称） 或<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-951">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="59ac6-952">如果省略此参数，则任何第三排序字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-952">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="59ac6-953">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-953">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="59ac6-954">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-954">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="59ac6-955">字段或区域中指定的排序顺序<paramref name="Key3" />参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-955">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span>
          </span>
          <span data-ttu-id="59ac6-956">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-956">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-957">可以是下列<b>XlSortOrder</b>常量之一： <b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-957">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="59ac6-958">排序<paramref name="Key3" />降序排序。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-958">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-959">排序<paramref name="Key3" />升序排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-959">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="59ac6-960">可选<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-960">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="59ac6-961">指定的第一行包含标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-961">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="59ac6-962">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-962">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-963">可以是下列<b>XlYesNoGuess</b>常量之一：<b>xlGuess</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-963">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="59ac6-964">允许 Microsoft Excel 确定是否有标题，并确定其所在如果存在。<b>xlNo</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-964">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-965">整个区域的排序方式。<b>xlYes</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-965">The entire range should be sorted.<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="59ac6-966">不应对整个区域进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-966">The entire range should not be sorted.</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="59ac6-967">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-967">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-968">此参数是到的自定义排序次序列表中的基于一的整数偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-968">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="59ac6-969">如果省略<paramref name="OrderCustom" />，则使用 （普通的排序顺序）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-969">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="59ac6-970">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-970">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-971">
            <b>True</b>可执行区分大小写的排序;<b>False</b>可执行不区分大小写的排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-971">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="59ac6-972">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-972">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="59ac6-973">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-973">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="59ac6-974">排序方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-974">The sort orientation.</span>
          </span>
          <span data-ttu-id="59ac6-975">可以是下列<b>XlSortOrientation</b>常量之一：<b>xlSortRows</b><paramref name="default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-975">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-976">按行进行排序。<b>xlSortColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-976">The sort is done by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="59ac6-977">按列进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-977">The sort is done by column.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="59ac6-978">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-978">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-979">指定如何排序中文<paramref name="Key1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-979">Specifies how to sort text in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="59ac6-980">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-980">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-981">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-981">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-982">将文本作为数字型数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-982">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-983">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-983">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="59ac6-984">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-984">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-985">指定如何排序中文<paramref name="Key 2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-985">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="59ac6-986">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-986">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-987">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-987">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-988">将文本作为数字型数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-988">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-989">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-989">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="59ac6-990">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-990">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="59ac6-991">指定如何排序中文<paramref name="Key 3" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-991">Specifies how to sort text in <paramref name="Key 3" />.</span>
          </span>
          <span data-ttu-id="59ac6-992">不能使用排序数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-992">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="59ac6-993">可以是下列<b>XlSortDataOption</b>常量之一：<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-993">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="59ac6-994">将文本数值数据进行排序。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-994">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="59ac6-995">分别对数值和文本数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-995">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-996">使用中文排序方法进行排序的区域或数据透视表报表，或对活动区域上使用本方法，如果该区域包含只有一个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-996">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span>
          </span>
          <span data-ttu-id="59ac6-997">例如，日语排序顺序假名音节表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-997">For example, Japanese sorts in the order of the Kana syllabary.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-998">
            <para>如果任何参数不均使用<b>SortSpecial</b>方法，Microsoft Excel 会对所选内容，以升序排序。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-998">
              <para>If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-p302">本属性不应再被使用。语音批注已从 Microsoft Excel 中删除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-p302">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1001">获取<see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" />对象，表示指定范围中的现有迷你图组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1001">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59ac6-1002">A<see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" />对象，表示指定范围中的现有迷你图组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1002">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="59ac6-1003">
            <para>只读的。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1003">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection">
          <span data-ttu-id="59ac6-1004">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1004">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1005">朗读的方向，按行或按列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1005">The speak direction, by rows or columns.</span>
          </span>
        </param>
        <param name="SpeakFormulas">
          <span data-ttu-id="59ac6-1006">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1006">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1007">
            <b>True</b>将导致发送到文本到语音转换 (TTS) 引擎具有公式的单元格的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1007">
              <b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span>
          </span>
          <span data-ttu-id="59ac6-1008">如果单元格没有公式;，发送值<b>False</b>（默认值） 将导致值始终将发送给 TTS 引擎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1008">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1009">按行或列的顺序朗读单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1009">Causes the cells of the range to be spoken in row order or column order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="59ac6-1010">所需<see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1010">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span>
          </span>
          <span data-ttu-id="59ac6-1011">要包含的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1011">The cells to include.</span>
          </span>
          <span data-ttu-id="59ac6-1012">可以是下列<b>XlCellType</b>常量之一：<b>xlCellTypeAllFormatConditions</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1012">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1013">任意格式的单元格。<b>xlCellTypeAllValidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1013">Cells of any format.<b>xlCellTypeAllValidation</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1014">含有验证条件的单元格。<b>xlCellTypeBlanks</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1014">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1015">空单元格。<b>xlCellTypeComments</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1015">Empty cells.<b>xlCellTypeComments</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1016">含有注释的单元格。<b>xlCellTypeConstants</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1016">Cells containing notes.<b>xlCellTypeConstants</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1017">含有常量的单元格。<b>xlCellTypeFormulas</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1017">Cells containing constants.<b>xlCellTypeFormulas</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1018">包含公式的单元格。<b>xlCellTypeLastCell</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1018">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1019">用区域中最后一个单元格。<b>xlCellTypeSameFormatConditions</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1019">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1020">格式相同的单元格。<b>xlCellTypeSameValidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1020">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1021">验证条件相同的单元格。<b>xlCellTypeVisible</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1021">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1022">所有可见单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1022">All visible cells.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="59ac6-1023">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1023">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1024">如果<paramref name="Type" />是<b>xlCellTypeConstants</b>或<b>xlCellTypeFormulas</b>，此参数用于确定要在结果中包括的单元格的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1024">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span>
          </span>
          <span data-ttu-id="59ac6-1025">可以添加这些值在一起以返回多个类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1025">These values can be added together to return more than one type.</span>
          </span>
          <span data-ttu-id="59ac6-1026">默认值为选择所有常量或公式，无论哪些类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1026">The default is to select all constants or formulas, no matter what the type.</span>
          </span>
          <span data-ttu-id="59ac6-1027">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" />常量：<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1027">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1028">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示与指定的类型和值匹配的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1029">返回<see cref="T:Microsoft.Office.Interop.Excel.Style" />，该值代表指定区域的样式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1029">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="59ac6-1030">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1030">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="59ac6-1031">此参数仅适用于 Macintosh 并且不应使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1031">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1032">您已请求的仅用于 Macintosh 关键字的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1032">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="59ac6-1033">有关此关键字的信息，请查阅的语言参考 Microsoft Office Macintosh Edition 中包含的帮助。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1033">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy">
          <span data-ttu-id="59ac6-1034">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1034">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1035">分组依据字段的为基于一的整数偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1035">The field to group by, as a one-based integer offset.</span>
          </span>
          <span data-ttu-id="59ac6-1036">有关详细信息，请参阅以下示例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1036">For more information, see the example.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="59ac6-1037">所需<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1037">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="59ac6-1038">分类汇总函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1038">The subtotal function.</span>
          </span>
          <span data-ttu-id="59ac6-1039">可以是以下<b>XlConsolidationFunction</b>常量之一：<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1039">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TotalList">
          <span data-ttu-id="59ac6-1040">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1040">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1041">偏移量 1 基于字段的数组，指示被分类汇总的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1041">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span>
          </span>
          <span data-ttu-id="59ac6-1042">有关详细信息，请参阅以下示例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1042">For more information, see the example.</span>
          </span>
        </param>
        <param name="Replace">
          <span data-ttu-id="59ac6-1043">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1043">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1044">
            <b>True</b>以替换现有的分类汇总。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1044">
              <b>True</b> to replace existing subtotals.</span>
          </span>
          <span data-ttu-id="59ac6-1045">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1045">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageBreaks">
          <span data-ttu-id="59ac6-1046">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1046">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1047">每个组后断开的是<b>，则返回 true</b>以添加页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1047">
              <b>True</b> to add page breaks after each group.</span>
          </span>
          <span data-ttu-id="59ac6-1048">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1048">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SummaryBelowData">
          <span data-ttu-id="59ac6-1049">可选<see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1049">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span>
          </span>
          <span data-ttu-id="59ac6-1050">放置相对于分类汇总的汇总数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1050">Places the summary data relative to the subtotal.</span>
          </span>
          <span data-ttu-id="59ac6-1051">可以是以下<b>XlSummaryRow</b>常量之一：<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1051">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1052">创建指定区域或当前区域（如果该区域为单个单元格时）的分类汇总。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1052">Creates subtotals for the range (or the current region, if the range is a single cell).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1053">确定是否分级显示的汇总行或列区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1053">Determines if the range is an outlining summary row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1054">
            <para>分级显示的汇总行或列区域时，此属性返回<b>True</b> 。</para>
            <para>范围应行或列。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1054">
              <para>This property returns <b>True</b> if the range is an outlining summary row or column.</para>
              <para>The range should be a row or a column.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput">
          <span data-ttu-id="59ac6-1055">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1055">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1056">用作数据表行输入的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1056">A single cell to use as the row input for your table.</span>
          </span>
        </param>
        <param name="ColumnInput">
          <span data-ttu-id="59ac6-1057">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1057">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1058">用作数据表列输入的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1058">A single cell to use as the column input for your table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1059">依据输入值和工作表上定义的公式创建模拟运算表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1059">Creates a data table based on input values and formulas that you define on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-1060">
            <para>使用模拟运算表执行模拟分析通过更改工作表中的其他单元格的值的影响，请参阅上特定常量的值。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1060">
              <para>Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1061">返回或设置指定对象中的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1061">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1062">
            <para>为<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />对象，该属性返回或设置其拼音文本。您不能将此属性设置为<b>Null</b>。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1062">
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text. You cannot set this property to <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="59ac6-1063">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1063">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1064">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它指定 Microsoft Excel 将结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1064">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span>
          </span>
          <span data-ttu-id="59ac6-1065">如果该区域不大于的单个单元格，则使用左上角的单元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1065">If the range is larger than a single cell, the top left cell is used.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="59ac6-1066">可选<see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1066">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
          <span data-ttu-id="59ac6-1067">将被拆分到多列中的文本的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1067">The format of the text to be split into columns.</span>
          </span>
          <span data-ttu-id="59ac6-1068">可以是以下<b>XlTextParsingType</b>常量之一：<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1068">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="59ac6-1069">可选<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1069">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="59ac6-1070">可以是以下<b>XlTextQualifier</b>常量之一：<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1070">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="59ac6-1071">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1071">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1072">
            <b>True</b>由 Microsoft Excel 将连续分隔符视为一个分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1072">
              <b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1073">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1073">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="59ac6-1074">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1074">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1075">
            <b>True</b>以具有<paramref name="DataType" />是<b>xlDelimited</b>并将制表符字符用作分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1075">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1076">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1076">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="59ac6-1077">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1077">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1078">
            <b>True</b>以具有<paramref name="DataType" />是<b>xlDelimited</b>和将分号用作分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1078">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1079">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1079">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="59ac6-1080">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1080">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1081">
            <b>True</b>以具有<paramref name="DataType" />是<b>xlDelimited</b>和将逗号用作分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1081">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1082">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1082">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="59ac6-1083">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1083">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1084">
            <b>True</b>以具有<paramref name="DataType" />是<b>xlDelimited</b> ，并且将空格字符用作分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1084">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1085">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1085">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="59ac6-1086">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1086">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1087">
            <b>True</b>以具有<paramref name="DataType" />是<b>xlDelimited</b>和能够由指定的字符<paramref name="OtherChar" />参数是分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1087">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span>
          </span>
          <span data-ttu-id="59ac6-1088">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1088">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="59ac6-1089">可选<b>对象</b>(如果使用<paramref name="Other" />为<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1089">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="59ac6-1090">分隔符字符何时<paramref name="Other" />是<b>，则返回 True</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1090">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1091">如果多个指定个字符，使用仅字符串的第一个字符;剩余的字符将被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1091">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="59ac6-1092">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1092">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1093">包含单个列中的数据分析信息的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1093">An array containing parse information for the individual columns of data.</span>
          </span>
          <span data-ttu-id="59ac6-1094">解释取决于的值<paramref name="DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1094">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="59ac6-1095">当数据分隔时，此参数是数组的两个元素的数组，其中每两个元素数组指定特定的列的转换选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1095">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="59ac6-1096">第一个元素是列号 （从 1 开始），而第二个元素是一个<see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />指定如何分析列中的常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1096">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span>
          </span>
          <span data-ttu-id="59ac6-1097">可以是以下<b>XlColumnDataType</b>常量之一：<b>xlGeneralFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1097">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1098">常规。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1098">Genera.</span>
          </span>
          <span data-ttu-id="59ac6-1099">
            <b>xlTextFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1099">
              <b>xlTextFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1100">文本。<b>xlMDYFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1100">Text.<b>xlMDYFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1101">MDY 日期。<b>xlDMYFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1101">MDY Date.<b>xlDMYFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1102">DMY 日期。<b>xlYMDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1102">DMY Date.<b>xlYMDFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1103">YMD 日期。<b>xlMYDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1103">YMD Date.<b>xlMYDFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1104">MYD 日期。<b>xlDYMFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1104">MYD Date.<b>xlDYMFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1105">DYM 日期。<b>xlYDMFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1105">DYM Date.<b>xlYDMFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1106">YDM 日期。<b>xlEMDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1106">YDM Date.<b>xlEMDFormat</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1107">EMD 日期。<b>xlSkipColumn</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1107">EMD Date.<b>xlSkipColumn</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1108">只有在安装和选择繁体中文语言支持，跳过 Column.You 可以使用<b>xlEMDFormat</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1108">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span>
          </span>
          <span data-ttu-id="59ac6-1109">
            <b>XlEMDFormat</b>常量指定繁体中文卡时代日历日期正在被使用。列说明符可以按任意顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1109">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="59ac6-1110">如果给定的列说明符不存在于特定的列中输入数据，与<b>常规</b>设置分析列。如果源数据具有固定宽度的列，每两个元素数组的第一个元素指定列中的起始字符位置 （作为整数; 0 （零） 为第一个字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1110">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="59ac6-1111">两个元素数组的第二个元素指定列的分析选项为介于 1 至 9，上面列出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1111">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="59ac6-1112">可选的<b>字符串</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1112">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1113">Microsoft Excel 时识别号码使用小数分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1113">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="59ac6-1114">默认设置是系统设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1114">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="59ac6-1115">可选的<b>字符串</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1115">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1116">千位分隔符时识别号码 Excel 使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1116">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="59ac6-1117">默认设置是系统设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1117">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="59ac6-1118">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1119">以减号字符开始的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1119">Numbers that begin with a minus character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1120">将包含文本的一列单元格分解为若干列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1120">Parses a column of cells that contain text into several columns.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-1121">
            <para>下表显示文本的各种导入设置导入 Excel 的结果。数值结果显示在最右边的列。</para>
            <list type="table">
              <item>
                <term>段</term>
                <description>逗号分隔</description>
                <description>逗号</description>
                <description>段</description>
                <description>123.123,45</description>
                <description>123,123.45 （数值）</description>
              </item>
              <item>
                <term>段</term>
                <description>逗号分隔</description>
                <description>逗号分隔</description>
                <description>逗号</description>
                <description>123.123,45</description>
                <description>123.123,45 (文本）</description>
              </item>
              <item>
                <term>逗号</term>
                <description>段</description>
                <description>逗号</description>
                <description>段</description>
                <description>123,123.45</description>
                <description>123,123.45 （数值）</description>
              </item>
              <item>
                <term>段</term>
                <description>逗号</description>
                <description>段</description>
                <description>逗号</description>
                <description>123123.45</description>
                <description>123 123.45 （文本）</description>
              </item>
              <item>
                <term>段</term>
                <description>逗号</description>
                <description>段</description>
                <description>空间</description>
                <description>123 123.45</description>
                <description>123,123.45 （数值）</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1121">
              <para>The following table shows the results of importing text into Excel for various import settings. Numeric results are displayed in the rightmost column.</para>
              <list type="table">
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123.123,45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>123.123,45</description>
                  <description>123.123,45 (text)</description>
                </item>
                <item>
                  <term>Comma</term>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123,123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>123 123.45</description>
                  <description>123 123.45 (text)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Space</description>
                  <description>123 123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1122">返回以磅为单位从行 1 上边缘到区域上边缘的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1122">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1123">
            <para>如果不连续范围，则使用的第一个区域。如果该区域不高的多个行，则使用最低 （编号） 首行范围中。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1123">
              <para>If the range is noncontiguous, the first area is used. If the range is more than one row high, the top (lowest numbered) row in the range is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1124">在大纲中的一个区域进行升级 （即，降低其大纲级别）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1124">Promotes a range in an outline (that is, decreases its outline level).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="59ac6-1125">
            <para>指定区域必须行或列或行或列的范围。如果该区域不在数据透视表报告中，此方法取消组合范围中包含的项。</para>如果活动单元格在父字段的字段标题
          <para>，该字段中的所有组都被取消，并且从数据透视表中删除字段。取消父字段中的最后一个组后，整个字段报表中删除。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1125">
              <para>The specified range must be a row or column, or a range of rows or columns. If the range is in a PivotTable report, this method ungroups the items contained in the range.</para>
              <para>If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1126">将合并区域分解为独立的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1126">Separates a merged area into individual cells.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1127">确定的行高<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象等于工作表的标准高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1127">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1128">
            <para>如果<b>Range</b>对象的行高等于工作表的标准高度， <b>Null</b>如果区域中包含多个行及其下一行的不是所有相同的高度，此属性返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1128">
              <para>This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1129">确定的列宽<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象等于的工作表的标准列宽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1129">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1130">
            <para>如果<b>Range</b>对象的列宽等于工作表的标准宽度， <b>Null</b>如果区域中包含多个列和列的不是宽度相同，此属性返回<b>True</b> 。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1130">
              <para>This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1131">返回<see cref="T:Microsoft.Office.Interop.Excel.Validation" />对象值，该值代表指定区域的数据有效性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1131">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType">
          <span data-ttu-id="59ac6-1132">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="59ac6-1133">区域值数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1133">The range value data type.</span>
          </span>
          <span data-ttu-id="59ac6-1134">可以是以下项之一<see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" />常量：<b>xlRangeValueDefault</b><paramref name="default" />如果指定<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象为空，则返回<b>空</b>值 （使用<b>IsEmpty</b>函数以这种情况下测试）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1134">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span>
          </span>
          <span data-ttu-id="59ac6-1135">如果<b>Range</b>对象包含多个单元格，则返回的值 （使用<b>IsArray</b>函数测试这种情况） 的数组。<b>xlRangeValueMSPersistXML</b>   以 XML 格式返回指定的<b>Range</b>对象的记录集表示形式。<b>xlRangeValueXMLSpreadsheet</b>   返回值、 格式、 公式和 XML 电子表格格式指定的<b>Range</b>对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1135">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59ac6-1136">返回或设置指定范围的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1136">Returns or sets the value of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1137">
            <para>设置单元格区域的 XML 电子表格文件内容时, 使用仅工作簿中的第一个工作表的值。您无法设置或获取非连续范围中的 XML 电子表格格式的单元格。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1137">
              <para>When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used. You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1138">返回或设置单元格的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1138">Returns or sets the cell value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1139">
            <para>此属性与<b>Value</b>属性仅差是<b>Value2</b>属性不使用<b>货币</b>和<b>日期</b>数据类型。您可以返回格式化与这些数据类型为浮点数，使用<b>Double</b>数据类型的值。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1139">
              <para>The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1140">返回或设置指定对象的垂直对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1140">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59ac6-1141">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1141"></span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="59ac6-1142">
            <para>返回的垂直对齐方式说明符可以是以下项之一读/写<b>对象</b>值：</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlBottom</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlCenter</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDistributed</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlJustify</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlTop</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1142">
              <para>The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlBottom</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlCenter</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDistributed</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlJustify</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTop</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1143">以磅为单位的范围的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1143">The width, in points, of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1144">返回<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />对象，表示包含指定的区域的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1144">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1145">确定是否 Microsoft Excel 会将文本包装对象中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1145">Determines if Microsoft Excel wraps the text in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1146">
            <para>此属性返回<b>True</b> ，如果 Microsoft Excel 将文本包装对象中和<b>Null</b>如果指定的区域中包含一些单元格文本换行和其他单元格的不。</para>
            <para>Microsoft Excel 将更改范围的高度，如有必要，以容纳其中的文字范围中。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1146">
              <para>This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</para>
              <para>Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ac6-1147">返回<see cref="T:Microsoft.Office.Interop.Excel.XPath" />对象，表示元素映射到指定的 Xpath<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="59ac6-1148">
            <para>仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59ac6-1148">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>