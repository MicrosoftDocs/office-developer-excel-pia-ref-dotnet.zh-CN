<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20583130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dae8a-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae8a-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="dae8a-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae8a-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="dae8a-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae8a-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="dae8a-104">有关 COM 对象的详细信息，请参阅<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae8a-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-105">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-106">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-107">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-108">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-109">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-110">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-111">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-112">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-112">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-113">使当前工作表成为活动工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-113">Makes the current sheet the active sheet.</span>
          </span>
          <span data-ttu-id="dae8a-114">相当于单击工作表的选项卡。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-114">Equivalent to clicking the sheet's tab.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-115">当使用对象识别符，此属性返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="dae8a-116">如果与对象识别符一起使用，则此属性返回代表指定对象的创建者的 <b>Application</b> 对象（可以将此属性与 OLE 自动化对象一起使用以返回该对象的应用程序）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="dae8a-117">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-118">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-118">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-119">返回<see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />如果筛选已打开的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span>
          </span>
          <span data-ttu-id="dae8a-120">如果筛选已关闭，则返回<b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-120">Returns <b>Nothing</b> if filtering is off.</span>
          </span>
          <span data-ttu-id="dae8a-121">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-122">若要创建工作表<b>AutoFilter</b>对象，必须打开自动筛选工作表上的某个区域可以手动或使用<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />方法<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-122">To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-123">
            <b>True</b>如果当前工作表上显示自动筛选下拉箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-123">
              <b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-124">此属性是独立的<see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span>
          </span>
          <span data-ttu-id="dae8a-125">可读写 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-125">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-126">如果当前显示的下拉箭头，则此属性返回<b>True</b> 。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-126">This property returns <b>True</b> if the drop-down arrows are currently displayed.</span>
            </span>
            <span data-ttu-id="dae8a-127">您可以将此属性设置为<b>False</b>可删除该箭头，但不能将它设置为<b>True</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-127">You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>.</span>
            </span>
            <span data-ttu-id="dae8a-128">使用<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />方法，以筛选列表和显示的下拉箭头。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-128">Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-129">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-129">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-130">计算所有打开的工作簿、工作簿中的某张特定工作表或工作表指定区域中的单元格，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-130">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span>
          </span>
        </summary>
        <remarks>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="dae8a-131">所有打开的工作簿</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-131">All open workbooks</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-132">Application.Calculate</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-132">Application.Calculate</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="dae8a-133">指定工作表</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-133">A specific worksheet</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-134">Worksheets(1)。计算</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-134">Worksheets(1).Calculate</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="dae8a-135">指定区域</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-135">A specified range</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-136">Worksheets(1)。Rows(2)。计算</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-136">Worksheets(1).Rows(2).Calculate</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-137">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示工作表 （而不仅仅是当前正在使用的单元） 上的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
          <span data-ttu-id="dae8a-138">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-138">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-139">因为<see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />属性是<b>Range</b>对象的默认属性，则可以在<b>单元格</b>关键字后面立即指定的行和列的索引。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-139">Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span>
            </span>
            <span data-ttu-id="dae8a-140">有关详细信息，请参阅<b>Item</b>属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-140">For more information, see the <b>Item</b> property.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-141">使用对象识别符的此属性返回一个<b>Range</b>对象，该对象代表活动工作表上的所有单元格。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-141">Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="dae8a-142">可选<b>Variant</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-142">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="dae8a-143">名称或图表的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-143">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="dae8a-144">此参数可以是指定多个图表的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-144">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-145">返回一个 object 值，该值代表以下任意一个嵌入式的图表 (<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />对象) 或所有嵌入式图表的集合 (<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />对象) 工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-145">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-146">此方法不等于<see cref="T:Microsoft.Office.Interop.Excel.Charts" />属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-146">This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property.</span>
            </span>
            <span data-ttu-id="dae8a-147">此方法返回嵌入式的图表;<b>图表</b>属性返回图表工作表。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-147">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span>
            </span>
            <span data-ttu-id="dae8a-148">使用<see cref="T:Microsoft.Office.Interop.Excel.Chart" />属性返回<see cref="T:Microsoft.Office.Interop.Excel.Chart" />嵌入式图表的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-148">Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-149">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-149">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="dae8a-150">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-151">指示 word 不在主词典中找到要检查的自定义词典的文件名的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-151">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="dae8a-152">如果省略此参数，则使用当前指定的词典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-152">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="dae8a-153">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-153">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-154">
            <b>True</b>由 Microsoft Excel 忽略全部大写的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-154">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="dae8a-155">
            <b>False</b>可具有都是大写的 Microsoft Excel 复选单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-155">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="dae8a-156">如果省略此参数，则将使用的当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-156">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="dae8a-157">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-158">
            <b>True</b>由 Microsoft Excel 在找到错误拼写时显示备用拼写建议的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-158">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="dae8a-159">
            <b>False</b>可让 Microsoft Excel 等待您输入正确的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-159">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="dae8a-160">如果省略此参数，则将使用的当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-160">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="dae8a-161">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-162">正在使用的词典语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-162">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="dae8a-163">可以使用的<b>MsoLanguageID</b>值之一<see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-163">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-164">检查对象的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-164">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="dae8a-165">该窗体有没有返回值;Microsoft Excel 显示拼写对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-165">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-166">使用此方法来检查页眉、 页脚和工作表上的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-166">Use this method to check headers, footers, and objects on a worksheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-167">对工作表中的无效数据项进行圈释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-167">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-168">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它代表包含的工作表上第一个循环引用的区域或工作表上没有循环引用时返回<b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-169">必须先计算就可以继续进行删除循环引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-169">The circular reference must be removed before calculation can proceed.</span>
          </span>
          <span data-ttu-id="dae8a-170">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-170">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p117">清除指定工作表的追踪箭头。使用审核功能可添加追踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p117">Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-173">清除指定工作表的无效数据项的圈释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-173">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-174">使用<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />圆单元格包含无效数据的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-174">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p118">返回对象的代码名。<b>String</b> 型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p118">Returns the code name for the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-177">您看到属性窗口中的<b>（名称）</b>右侧的单元格中的值是所选对象的代码名。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-177">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
            </span>
            <span data-ttu-id="dae8a-178">在设计时，您可以通过更改此值更改对象的代码名。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-178">At design time, you can change the code name of an object by changing this value.</span>
            </span>
            <span data-ttu-id="dae8a-179">以编程方式不能在运行时更改此属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-179">You cannot programmatically change this property at run time.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-180">对象的代码名称可代替返回对象的表达式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-180">The code name for an object can be used in place of an expression that returns the object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-p120">工作表的名称可以与其代码名不同。创建一张工作表时，其工作表名称和代码名是相同的，不过，更改工作表名称时并不影响其代码名，并且，更改工作表代码名（在 Visual Basic 编辑器中使用“属性”窗口）也不影响其名称。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p120">It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-183">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示指定工作表上的所有列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-184">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-184">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-185">返回<see cref="T:Microsoft.Office.Interop.Excel.Comments" />值，该值代表指定工作表中的所有批注的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-186">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-186">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-187">返回用于当前合并计算的函数代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-187">Returns the function code used for the current consolidation.</span>
          </span>
          <span data-ttu-id="dae8a-188">可以是一个<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-188">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span>
          </span>
          <span data-ttu-id="dae8a-189">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-189">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-190">下表中所示，则返回整合选项的三个元素数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-190">Returns a three-element array of consolidation options, as shown in the following table.</span>
          </span>
          <span data-ttu-id="dae8a-191">如果该元素是<b>True</b>，将设置该选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-191">If the element is <b>True</b>, that option is set.</span>
          </span>
          <span data-ttu-id="dae8a-192">只读 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-192">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="dae8a-193">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-193">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-194">使用首行的标签。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-194">Use labels in top row.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="dae8a-195">2</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-195">2</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-196">使用左列的标签。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-196">Use labels in left column.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="dae8a-197">3</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-197">3</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="dae8a-198">创建到数据源的链接。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-198">Create links to source data.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-199">返回工作表的当前合并源工作表名称的字符串值的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-199">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span>
          </span>
          <span data-ttu-id="dae8a-200">如果没有合并计算工作表上，则返回<b>空</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-200">Returns <b>Empty</b> if there's no consolidation on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-201">只读 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-201">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="dae8a-202">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-203">将在其前面放置复制的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-203">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="dae8a-204">不能指定<paramref name="Before" />如果指定<paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-204">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="dae8a-205">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-205">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-206">将在其后放置复制的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-206">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="dae8a-207">不能指定<paramref name="After" />如果指定<paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-207">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-208">将工作表复制到工作簿的另一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-208">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-209">如果不指定<paramref name="Before" />或<paramref name="After" />，Microsoft Excel 将新建一个包含复制的工作表的新工作簿。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-209">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-210">返回中的一个常量<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />枚举，指示在其中创建此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-210">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="dae8a-211">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-211">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="dae8a-212">只读<b>xlCreatorCode</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-212">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-213">
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-213">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="dae8a-214">例如，Microsoft Excel 具有 XCEL 的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-214">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-215">返回<see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" />对象，表示与工作表关联的标识符信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-215">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-216">对于 <b>CustomProperties</b> 属性，工作表的标识符信息可以表示 XML 的元数据。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-216">For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-217">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-217">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-218">当您删除<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />，此方法将显示一个对话框，提示用户确认删除。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-218">When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion.</span>
            </span>
            <span data-ttu-id="dae8a-219">默认情况下显示此对话框。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-219">This dialog box is displayed by default.</span>
            </span>
            <span data-ttu-id="dae8a-220">
              <b>Delete</b>方法返回一个<b>Boolean</b>值，如果用户单击取消对话框上的或<b>，则返回 True</b> ，如果用户单击删除为<b>False</b> 。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-220">The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-221">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-221">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p131">如果显示指定工作表中的分页符（包括自动和手动分页符），则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p131">
              <b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-224">如果没有安装打印机，不能设置该属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-224">You can't set this property if you don't have a printer installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-225">
            <b>True</b>如果指定的窗口、 工作表或<b>ListObject</b>显示从右到左而不是从左到右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-225">
              <b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="dae8a-226">
            <b>False</b>如果对象显示从左到右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-226">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
          <span data-ttu-id="dae8a-227">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-227">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-228">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-228">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-229">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-229">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-230">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-230">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p133">如果当仅限于用户界面保护处于打开状态时，启用自动筛选箭头，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p133">
              <b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-233">该属性可应用于每一张工作表，而不随工作表或会话一起保存。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-233">This property applies to each worksheet and isn't saved with the worksheet or session.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p134">如果在必要的情况下 Microsoft Excel 自动重新计算工作表，则该值为 <b>True</b>。如果 Excel 不重新计算工作表，则该值为 <b>False</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p134">
              <b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary. <b>False</b> if Excel doesn't recalculate the sheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-p135">当本属性的值为 <b>False</b> 时，则不能请求重新计算。如果将其值从 <b>False</b> 更改为 <b>True</b>，则 Excel 将重新计算工作表。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p135">When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-239">返回或设置条件格式，则会发生自动根据需要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-239">Returns or sets if conditional formats will occur automatically as needed.</span>
          </span>
          <span data-ttu-id="dae8a-240">可读写 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-240">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dae8a-241">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-241">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-242">当设置为<b>True</b> （默认值） 时，将自动根据需要进行评估的条件格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-242">When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.</span>
            </span>
            <span data-ttu-id="dae8a-243">设置为<b>False</b>时，条件格式不会重新计算。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-243">When set to <b>False</b>, conditional formats will not be re-evaluated.</span>
            </span>
            <span data-ttu-id="dae8a-244">任何以前应用的条件格式将仍可见，但它不会更新为单元格的值或<see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" />更改范围。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-244">Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-245">此标志的用途是允许程序员完整地配置规则评估它之前。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-245">The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.</span>
            </span>
            <span data-ttu-id="dae8a-246">当条件应用于较大的区域，性能可能会比较慢在这些情况下，这是特别有用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-246">This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p139">如果当仅限于用户界面保护处于打开状态时，启用分级显示符号，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p139">
              <b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-249">该属性可应用于每一张工作表，而不随工作表或会话一起保存。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-249">This property applies to each worksheet and isn't saved with the worksheet or session.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p140">如果当仅限于用户界面保护处于打开状态时，启用数据透视表控件和操作，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p140">
              <b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-252">该属性可应用于每一张工作表，而不随工作表或会话一起保存。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-252">This property applies to each worksheet and isn't saved with the worksheet or session.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-253">在数据透视表的下方或右侧必须有足够的未锁定单元格，这样 Microsoft Excel 才能重新计算并显示该数据透视表。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-253">There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-254">返回或设置工作表上可选择的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-254">Returns or sets what can be selected on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-255">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-255">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-256">仅当工作表处于保护状态时，本属性才能起作用：<b>xlNoSelection</b> 防止在工作表上进行任何选择操作，<b>xlUnlockedCells</b> 仅允许 <b>Locked</b> 属性为 <b>False</b> 的单元格才能被选定，而 <b>xlNoRestrictions</b> 允许选定任意单元格。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-256">This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="dae8a-257">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-257">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="dae8a-258">使用 Microsoft Excel 命名约定的对象名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-258">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-259">将一个 Microsoft Excel 名称转换为一个对象或者一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-259">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-260">该方法可使用下列 Microsoft Excel 名称类型：</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-260">The following types of names in Microsoft Excel can be used with this method:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="dae8a-261">已定义的名称。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-261">Defined names.</span>
                </span>
                <span data-ttu-id="dae8a-262">您可以指定任何名称。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-262">You can specify any name.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="dae8a-263">外部引用。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-263">External references.</span>
                </span>
                <span data-ttu-id="dae8a-264">您可以使用 ！</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-264">You can use the !</span>
                </span>
                <span data-ttu-id="dae8a-265">要引用在其他工作簿中定义的工作表的运算符。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="dae8a-265">operator to refer to a worksheet defined in another workbook.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="dae8a-266">要导出为的文件格式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-266">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="dae8a-267">要保存的文件的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-267">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="dae8a-268">您可以包括完整路径，或 short_Excel2007 将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-268">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="dae8a-269">可选<see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-269">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="dae8a-270">指定将发布的文件的质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-270">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="dae8a-271">						若要包括文档属性，则为 <b>True</b>；否则为 <b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-271">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="dae8a-272">						若要忽略发布时设置的任何打印区域，则为 <b>True</b>；否则为 <b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-272">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="dae8a-p147">发布的起始页码。如果省略此参数，则从起始位置开始发布。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p147">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="dae8a-p148">发布的终止页码。如果省略此参数，则发布至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p148">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="dae8a-277">
            <b>True</b>以发布; 后在查看器中显示的文件否则为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-277">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="dae8a-278">指向<b>FixedFormatExt</b>类的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-278">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-279">导出为指定格式的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-279">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-p149">此方法还支持初始化加载项，以将文件导出为固定格式的文件。例如，如果存在转换器，则 Excel 将执行文件格式转换。转换通常由用户执行。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p149">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-283">
            <b>True</b>如果工作表处于筛选模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-283">
              <b>True</b> if the worksheet is in filter mode.</span>
          </span>
          <span data-ttu-id="dae8a-284">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-284">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-285">如果工作表包含已筛选的列表中隐藏的行，则此属性为<b>True</b> 。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-285">This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-286">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-286">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-287">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-287">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-288">返回<see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" />集合，代表水平分页符工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-288">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-289">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-289">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-290">没有限制为每个工作表的 1,026 水平分页符。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-290">There is a limit of 1,026 horizontal page breaks per sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-291">返回<see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" />代表范围或工作表的超链接的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-291">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-292">返回对象在其同类对象所组成的集合内的编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-292">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="dae8a-293">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-293">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-294">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-294">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-295">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-295">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-296">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-296">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-297">返回的集合<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />工作表中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-297">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-298">只读<b>ListObjects</b>集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-298">Read-only <b>ListObjects</b> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-299">代表文档的电子邮件标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-299">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="dae8a-300">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-300">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-301">将在其前面放置移动的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-301">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="dae8a-302">不能指定<paramref name="Before" />如果指定<paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-302">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="dae8a-303">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-303">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-304">将在其后放置移动的工作表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-304">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="dae8a-305">不能指定<paramref name="After" />如果指定<paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-305">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-306">将工作表移到工作簿中的另一个位置</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-306">Moves the sheet to another location in the workbook</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-307">如果不指定<paramref name="Before" />或<paramref name="After" />，Microsoft Excel 将新建一个包含移动的工作表的新工作簿。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-307">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p156">返回或设置对象的名称。 <b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p156">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-310">返回<see cref="T:Microsoft.Office.Interop.Excel.Names" />集合，代表所有特定于工作表的名称 （使用"WorksheetName ！"定义的名称</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-310">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="dae8a-311">前缀）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-311">prefix).</span>
          </span>
          <span data-ttu-id="dae8a-312">只读<b>Names</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-312">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-313">返回<see cref="T:Microsoft.Office.Interop.Excel.Chart" />， <see cref="T:Microsoft.Office.Interop.Excel.Range" />，或<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />对象，表示的下一个工作表或单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-313">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span>
          </span>
          <span data-ttu-id="dae8a-314">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-314">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-315">如果该对象为区域，则此属性会模拟 Tab 键，但会返回下一个单元格，而不选中它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-315">If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-p159">在处于保护状态的工作表中，此属性返回下一个未锁定单元格。在未保护的工作表中，此属性总是返回紧靠指定单元格右边的单元格。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p159">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="dae8a-318">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-318">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-319">OLE 对象的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-319">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-320">返回一个 object 值，该值代表之一的单个 OLE 对象 ( <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) 或所有 OLE 对象的集合 (<see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" />集合) 图表或工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-320">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
          <span data-ttu-id="dae8a-321">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-321">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-322">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-322">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-323">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-323">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-324">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-324">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-325">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-325">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-326">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-326">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-327">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-327">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-328">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-328">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-329">返回<see cref="T:Microsoft.Office.Interop.Excel.Outline" />对象，表示指定工作表的分级显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-329">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-330">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-330">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-331">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-331">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-332">返回<see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />包含指定对象的所有页面设置的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-332">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
          <span data-ttu-id="dae8a-333">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-333">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p164">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p164">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="dae8a-336">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-336">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-337">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它指定要粘贴剪贴板内容的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-337">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="dae8a-338">如果省略此参数，则使用当前所选内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-338">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="dae8a-339">此参数可以是仅指定是否可以将剪贴板的内容粘贴到区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-339">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="dae8a-340">如果指定此参数，则<paramref name="Link" />不能使用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-340">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="dae8a-341">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-341">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-342">
            <b>True</b>建立到将粘贴数据源的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-342">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="dae8a-343">如果指定此参数，则<paramref name="Destination" />不能使用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-343">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span>
          </span>
          <span data-ttu-id="dae8a-344">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-344">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-345">将“剪贴板”中的内容粘贴到工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-345">Pastes the contents of the Clipboard onto the sheet.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-346">如果不指定<paramref name="Destination" />参数，您必须选择目标区域才能使用此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-346">If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-347">该方法可能会修改工作表的选定区域，这取决于剪贴板中的内容。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-347">This method may modify the sheet selection, depending on the contents of the Clipboard.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="dae8a-348">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-348">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-349">指定数据的剪贴板格式的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-349">A string that specifies the Clipboard format of the data.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="dae8a-350">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-350">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-351">
            <b>True</b>建立到将粘贴数据源的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-351">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="dae8a-352">如果源数据不适于链接或源应用程序不支持的链接，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-352">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="dae8a-353">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-353">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="dae8a-354">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-354">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-355">
            <b>True</b>将粘贴的数据显示为图标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-355">
              <b>True</b> to display the pasted data as an icon.</span>
          </span>
          <span data-ttu-id="dae8a-356">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-356">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="dae8a-357">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-358">包含要使用的图标文件的名称<paramref name="DisplayAsIcon" />是<b>，则返回 True</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-358">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="dae8a-359">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-359">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-360">图标文件内的图标索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-360">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="dae8a-361">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-361">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-362">图标的文本标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-362">The text label of the icon.</span>
          </span>
        </param>
        <param name="NoHTMLFormatting">
          <span data-ttu-id="dae8a-363">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-363">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-364">
            <b>True</b> HTML 中删除所有格式、 超链接和图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-364">
              <b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span>
          </span>
          <span data-ttu-id="dae8a-365">
            <b>False</b>粘贴 HTML 原样。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-365">
              <b>False</b> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="dae8a-366">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-366">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-367">粘贴到使用指定的格式工作表剪贴板的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-367">Pastes the contents of the Clipboard onto the sheet using a specified format.</span>
          </span>
          <span data-ttu-id="dae8a-368">粘贴从其他应用程序的数据或以特定格式粘贴数据，请使用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-368">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-369">
              <paramref name="NoHTMLFormatting" />将仅专家时<paramref name="Format" />="HTML"。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-369">
                <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”.</span>
            </span>
            <span data-ttu-id="dae8a-370">在所有其他情况下，<paramref name="NoHTMLFormatting" />将被忽略。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-370">In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-371">必须在使用本方法之前选定目标区域。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-371">You must select the destination range before you use this method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-372">该方法可能会修改工作表的选定区域，这取决于剪贴板中的内容。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-372">This method may modify the sheet selection, depending on the contents of the Clipboard.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-373">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-373">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="dae8a-374">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-375">报表的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-375">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-376">返回一个 object 值，该值代表以下任意一个数据透视表报表 (<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />对象) 或所有数据透视表的集合 (<see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />对象) 的工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-376">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-377">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-377">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="dae8a-378">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-379">报告数据的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-379">The source of the report data.</span>
          </span>
          <span data-ttu-id="dae8a-380">可以是一个<see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-380">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          </span>
        </param>
        <param name="SourceData">
          <span data-ttu-id="dae8a-381">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-381">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-382">新报表的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-382">The data for the new report.</span>
          </span>
          <span data-ttu-id="dae8a-383">可以是<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象、 数组的范围或一个文本常量，代表其他报表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-383">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="dae8a-384">对于外部数据库，<paramref name="SourceData" />是包含 SQL 查询字符串，其中每个元素是长度最多 255 个字符的字符串的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-384">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="dae8a-385">您应使用<paramref name="Connection" />参数指定的 ODBC 连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-385">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="dae8a-386">与早期版本的 Excel 的兼容性<paramref name="SourceData" />可以是一个两个元素的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-386">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span>
          </span>
          <span data-ttu-id="dae8a-387">指定 ODBC 数据源的连接字符串的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-387">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="dae8a-388">第二个元素都是用来获取数据的 SQL 查询字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-388">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="dae8a-389">如果指定<paramref name="SourceData" />，则还必须指定<paramref name="SourceType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-389">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span>
          </span>
          <span data-ttu-id="dae8a-390">如果活动单元格位于<paramref name="SourceData" />范围，则必须指定<paramref name="TableDestination" />以及。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-390">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span>
          </span>
        </param>
        <param name="TableDestination">
          <span data-ttu-id="dae8a-391">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-391">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-392">指定报表在工作表的位置的<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-392">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-393">如果省略此参数，则报表将放置到活动单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-393">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="TableName">
          <span data-ttu-id="dae8a-394">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-394">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-395">用于指定新报表名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-395">A string that specifies the name of the new report.</span>
          </span>
        </param>
        <param name="RowGrand">
          <span data-ttu-id="dae8a-396">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-396">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-397">						如果为 <b>True</b>，则显示报表中的行总计。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-397">
              <b>True</b> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="ColumnGrand">
          <span data-ttu-id="dae8a-398">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-398">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-399">						如果为 <b>True</b>，则显示报表中的列总计。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-399">
              <b>True</b> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="SaveData">
          <span data-ttu-id="dae8a-400">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-400">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-401">
            <b>True</b>保存报表数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-401">
              <b>True</b> to save data with the report.</span>
          </span>
          <span data-ttu-id="dae8a-402">
            <b>False</b>可保存仅报告定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-402">
              <b>False</b> to save only the report definition.</span>
          </span>
        </param>
        <param name="HasAutoFormat">
          <span data-ttu-id="dae8a-403">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-403">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-404">						如果为 <b>True</b>，当刷新报表或移动字段时，Microsoft Excel 将自动设置其格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-404">
              <b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="AutoPage">
          <span data-ttu-id="dae8a-405">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-406">有效才<paramref name="SourceType" />是<b>xlConsolidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-406">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span>
          </span>
          <span data-ttu-id="dae8a-407">
            <b>True</b>已创建的合并页字段的 Microsoft Excel。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-407">
              <b>True</b> to have Microsoft Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="dae8a-408">如果<paramref name="AutoPage" />是<b>False</b>，您必须创建的页字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-408">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="Reserved">
          <span data-ttu-id="dae8a-409">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-409">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-410">不在 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-410">Not used by Microsoft Excel.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="dae8a-411">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-411">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-412">
            <b>True</b>以让 Excel 报表异步 （在后台） 执行查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-412">
              <b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="dae8a-413">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-413">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OptimizeCache">
          <span data-ttu-id="dae8a-414">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-414">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-415">
            <b>True</b>构造时优化数据透视表缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-415">
              <b>True</b> to optimize the PivotTable cache when it's constructed.</span>
          </span>
          <span data-ttu-id="dae8a-416">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-416">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageFieldOrder">
          <span data-ttu-id="dae8a-417">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-417">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-418">在哪一页字段添加到数据透视表报表的布局的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-418">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="dae8a-419">可以是下列<b>XlOrder</b>常量之一： <b>xlDownThenOver</b>或<b>xlOverThenDown</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-419">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span>
          </span>
          <span data-ttu-id="dae8a-420">默认值是<b>xlDownThenOver</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-420">The default value is <b>xlDownThenOver</b>.</span>
          </span>
        </param>
        <param name="PageFieldWrapCount">
          <span data-ttu-id="dae8a-421">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-421">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-422">每个列中的页字段或数据透视表报告中的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-422">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="dae8a-423">默认值为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-423">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="ReadData">
          <span data-ttu-id="dae8a-424">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-424">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-425">
            <b>True</b>以创建包含从外部数据库; 所有记录的数据透视表缓存此缓存可能会非常大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-425">
              <b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="dae8a-426">如果<paramref name="ReadData" />是<b>False</b>，您可以设置某些字段为基于服务器的页字段之前实际读取数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-426">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="Connection">
          <span data-ttu-id="dae8a-427">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-427">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-428">一个字符串，包含允许 Excel 连接到 ODBC 数据源的 ODBC 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-428">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="dae8a-429">连接字符串有窗体"ODBC;&lt;连接字符串&gt;"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-429">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="dae8a-430">此参数覆盖任何以前设置<see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />对象的<see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-430">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-431">创建<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-431">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
          <span data-ttu-id="dae8a-432">此方法才会显示数据透视表向导。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-432">This method doesn’t display the PivotTable Wizard.</span>
          </span>
          <span data-ttu-id="dae8a-433">此方法不可用于 OLE DB 数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-433">This method isn’t available for OLE DB data sources.</span>
          </span>
          <span data-ttu-id="dae8a-434">使用<see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />方法，以添加数据透视表缓存，然后创建数据透视表报告基于该缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-434">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span>
          </span>
          <span data-ttu-id="dae8a-435">
            <b>PivotTable</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-435">
              <b>PivotTable</b> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-436">返回<see cref="T:Microsoft.Office.Interop.Excel.Chart" />， <see cref="T:Microsoft.Office.Interop.Excel.Range" />，或<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />对象，表示的上一个工作表或单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span>
          </span>
          <span data-ttu-id="dae8a-437">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-437">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-438">如果指定对象为区域，则此属性的作用是仿效 Shift+Tab；但此属性只是返回上一单元格，并不选定它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-438">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-p196">在保护工作表上，该属性返回上一个未锁定的单元格。在未保护的工作表上，该属性通常返回指定单元格左侧相邻的单元格。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p196">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-441">获取当前工作表的打印的注释页数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-441">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dae8a-442">将打印当前工作表的备注页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-442">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-443">只读。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-443">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-444">
              <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />属性将仅返回一个数字大于零如果注释的页面设置工作表选项卡上设置对话框中设置为在工作表的末尾。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-444">The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet.</span>
            </span>
            <span data-ttu-id="dae8a-445">如果工作表为图表工作表或 MS Excel 5.0 对话框工作表，此属性将返回零。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-445">This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="dae8a-446">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-446">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-447">从中开始打印的页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-447">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="dae8a-448">如果省略此参数，则打印从开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-448">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="dae8a-449">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-449">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-450">要打印的末页数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-450">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="dae8a-451">如果省略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-451">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="dae8a-452">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-452">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-453">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-453">The number of copies to print.</span>
          </span>
          <span data-ttu-id="dae8a-454">如果省略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-454">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="dae8a-455">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-455">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-456">
            <b>True</b>由 Microsoft Excel 调用之前打印对象的打印预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-456">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="dae8a-457">
            <b>False</b>（或省略） 若要立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-457">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="dae8a-458">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-458">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-459">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-459">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="dae8a-460">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-460">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-461">
            <b>True</b>打印到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-461">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="dae8a-462">如果<paramref name="PrToFileName" />未指定，则 Microsoft Excel 将提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-462">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="dae8a-463">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-463">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-464">如果为 <b>True</b>，则逐份打印多个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-464">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="dae8a-465">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-465">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-466">如果<paramref name="PrintToFile" />设置为<b>True</b>，则该参数指定要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-466">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-467">打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-467">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-468">说明中的"页面"<paramref name="From" />和<paramref name="To" />指打印页、 工作表或工作簿中不整个页面。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-468">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-469">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-469">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="dae8a-470">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-471">
            <b>True</b>启用对指定工作表的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-471">
              <b>True</b> to enable changes to the specified worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-472">按对象打印后的外观效果显示对象的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-472">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="dae8a-473">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-473">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-474">指定工作表或工作簿的密码区分大小写的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-474">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="dae8a-475">如果省略此参数，则可以取消的工作表或工作簿保护不使用密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-475">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="dae8a-476">否则，您必须指定要取消的工作表或工作簿的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-476">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="dae8a-477">如果您忘记了密码，则无法取消的工作表或工作簿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-477">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="dae8a-478">最好在安全的地方保留您的密码和其对应的文档名称的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-478">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="dae8a-479">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-479">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-480">
            <b>True</b>保护形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-480">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="dae8a-481">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-481">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="dae8a-482">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-482">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-483">
            <b>True</b>保护内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-483">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="dae8a-484">有关图表，此保护整个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-484">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="dae8a-485">对于工作表，此保护锁定的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-485">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="dae8a-486">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-486">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="dae8a-487">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-487">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-488">
            <b>True</b>保护方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-488">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="dae8a-489">此参数是仅供工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-489">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="dae8a-490">默认值为 <b>True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-490">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="dae8a-491">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-491">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-492">
            <b>True</b>保护用户界面但不是宏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-492">
              <b>True</b> to protect the user interface but not macros.</span>
          </span>
          <span data-ttu-id="dae8a-493">如果省略此参数，则保护应用宏和用户界面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-493">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="AllowFormattingCells">
          <span data-ttu-id="dae8a-494">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-494">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-495">
            <b>True</b>允许用户在受保护的工作表上的任意单元格进行格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-495">
              <b>True</b> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-496">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-496">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingColumns">
          <span data-ttu-id="dae8a-497">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-497">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-498">
            <b>True</b>允许用户在受保护的工作表上的任何列进行格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-498">
              <b>True</b> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-499">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-499">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingRows">
          <span data-ttu-id="dae8a-500">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-500">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-501">
            <b>True</b>允许用户在受保护的工作表上的任何行进行格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-501">
              <b>True</b> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-502">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-502">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingColumns">
          <span data-ttu-id="dae8a-503">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-503">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-504">
            <b>True</b>允许用户在受保护的工作表上插入列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-504">
              <b>True</b> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-505">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-505">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingRows">
          <span data-ttu-id="dae8a-506">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-507">
            <b>True</b>允许用户在受保护的工作表上插入行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-507">
              <b>True</b> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-508">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-508">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingHyperlinks">
          <span data-ttu-id="dae8a-509">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-509">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-510">
            <b>True</b>允许用户在工作表插入超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-510">
              <b>True</b> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-511">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-511">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingColumns">
          <span data-ttu-id="dae8a-512">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-513">
            <b>True</b>允许用户在受保护的工作表上删除列删除列中的每个单元格所在的锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-513">
              <b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="dae8a-514">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-514">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingRows">
          <span data-ttu-id="dae8a-515">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-516">
            <b>True</b>允许用户在受保护的工作表上删除行的每个要删除的行中的单元格是解除锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-516">
              <b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="dae8a-517">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-517">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowSorting">
          <span data-ttu-id="dae8a-518">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-519">
            <b>True</b>允许用户对受保护的工作表进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-519">
              <b>True</b> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-520">必须锁定或未受保护排序区域中的每个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-520">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="dae8a-521">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-521">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFiltering">
          <span data-ttu-id="dae8a-522">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-522">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-523">
            <b>True</b>允许用户在受保护的工作表上设置筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-523">
              <b>True</b> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-524">用户可以更改筛选条件，但可以不启用或禁用自动筛选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-524">Users can change filter criteria but can not enable or disable an auto filter.</span>
          </span>
          <span data-ttu-id="dae8a-525">用户可以在现有的自动筛选器上设置筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-525">Users can set filters on an existing auto filter.</span>
          </span>
          <span data-ttu-id="dae8a-526">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-526">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowUsingPivotTables">
          <span data-ttu-id="dae8a-527">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-527">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-528">
            <b>True</b>允许用户在受保护的工作表上使用数据透视表报告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-528">
              <b>True</b> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-529">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-529">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-530">保护工作表使其不能被修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-530">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-531">如果应用<b>Protect</b>方法与<paramref name="UserInterfaceOnly" />参数设置为<b>True</b>向工作表，然后保存工作簿，整张工作表 （而不仅仅是接口） 将受到完全保护时重新打开工作簿。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-531">If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook.</span>
            </span>
            <span data-ttu-id="dae8a-532">要重新启用用户界面保护后打开工作簿时，必须重新应用<b>Protect</b>方法与<paramref name="UserInterfaceOnly" />将设置为<b>True</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-532">To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-533">如果您想要对受保护的工作表进行更改，则可以使用<b>Protect</b>方法在受保护的工作表上，如果提供密码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-533">If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied.</span>
            </span>
            <span data-ttu-id="dae8a-534">另一种方法是取消保护工作表和进行必要的更改，然后再次保护工作表。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-534">Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-535">
              <b>注意</b>: 未受保护意味着单元格可能被锁定 （单元格格式对话框） 中编辑区域对话框，允许用户定义的范围包含但和用户已取消保护密码的范围或已 NT 权限通过验证。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-535">
                <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-536">如果为<b>true</b>的工作表的内容处于保护状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-536">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="dae8a-537">有关图表，此保护整个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-537">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="dae8a-538">对于工作表，此保护的单个单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-538">For a worksheet, this protects the individual cells.</span>
          </span>
          <span data-ttu-id="dae8a-539">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-539">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-540">
            <b>True</b>如果形状处于保护状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-540">
              <b>True</b> if shapes are protected.</span>
          </span>
          <span data-ttu-id="dae8a-541">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-541">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-542">返回<see cref="T:Microsoft.Office.Interop.Excel.Protection" />对象，表示工作表的保护选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-542">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-543">
            <b>True</b>如果在打开仅限用户界面的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-543">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="dae8a-544">若要启用用户界面保护，请使用<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />方法与<paramref name="UserInterfaceOnly" />参数设置为<b>True</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-544">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
          <span data-ttu-id="dae8a-545">只读 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-545">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p228">如果工作表的方案处于保护状态，则该属性值为 <b>True</b>。<b>Boolean</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p228">
              <b>True</b> if the worksheet scenarios are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-548">返回<see cref="T:Microsoft.Office.Interop.Excel.QueryTables" />值，该值代表指定工作表中的所有查询表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-548">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-549">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-549">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="dae8a-550">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-550">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-551">区域名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-551">The name of the range.</span>
          </span>
          <span data-ttu-id="dae8a-552">这必须是在宏语言中 A1 样式的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-552">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="dae8a-553">它可以包括区域运算符 （冒号）、 交点运算符 （空格） 或 union 运算符 （逗号分隔）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-553">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="dae8a-554">它还可以包含美元符号，但它们被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-554">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="dae8a-555">您可以使用局部定义的名称在该范围的任何部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-555">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="dae8a-556">如果您使用的名称，被假定该名称为宏的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-556">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="dae8a-557">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-558">区域左上角和右下角中的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-558">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="dae8a-559">可以是一个<b>Range</b>对象，该对象包含单个单元格、 整列或整行，也可以是命名的宏语言中的单个单元格的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-559">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-560">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，它代表单元格区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-561">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-561">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-562">重新设置指定工作表上的所有分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-562">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-563">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示指定工作表上的所有行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-563">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-564">只读<b>Range</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-564">Read-only <b>Range</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="dae8a-565">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-565">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-566">一个指示要保存的文件的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-566">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="dae8a-567">您可以包括完整路径。否则，Microsoft Excel 将保存在当前文件夹中的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-567">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="dae8a-568">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-568">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-569">要保存文件时使用的文件格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-569">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="dae8a-570">一个有效的选项列表，请参阅<see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-570">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="dae8a-571">对于现有文件，默认格式是指定; 的最后一个文件格式新的文件，默认值为版本的 Excel 正在使用的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-571">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="dae8a-572">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-572">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-573">它是一个区分大小写的字符串（最长不超过 15 个字符），用于指定文件的保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-573">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="dae8a-574">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-574">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-575">String 值，该值指示此文件的写保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-575">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="dae8a-576">如果使用密码保存文件，打开该文件时，不输入密码以只读方式打开文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-576">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="dae8a-577">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-577">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-578">
            <b>True</b>建议以只读方式打开该文件打开该文件时显示一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-578">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="dae8a-579">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-579">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-580">如果为  <b>True</b> ，则创建备份文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-580">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="dae8a-581">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-581">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-582">
            <b>True</b>将此工作簿添加到列表中最近使用的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-582">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="dae8a-583">默认值为 <b>False</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-583">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="dae8a-584">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-584">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-585">不在美国英语版的 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-585">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="dae8a-586">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-586">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-587">不在美国英语版的 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-587">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="dae8a-588">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-588">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-589">
            <b>True</b>将保存对 Microsoft Excel （包括控制面板设置） 的语言文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-589">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="dae8a-590">
            <b>False</b>（默认值） 保存文件，针对语言的 Visual Basic for Applications (VBA) （即通常美国英语除非从运行 Workbooks.Open VBA 项目是旧国际化的 XL5/95 VBA 项目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-590">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-591">将对图表或工作表的更改保存到另一不同文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-591">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="dae8a-592">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-592">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-593">名称或编号方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-593">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="dae8a-594">使用数组来指定多个方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-594">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-595">返回一个 object 值，该值代表之一的单个方案 (<see cref="T:Microsoft.Office.Interop.Excel.Scenario" />对象) 或方案集合 (<see cref="T:Microsoft.Office.Interop.Excel.Scenarios" />对象) 工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-595">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-596">返回<see cref="T:Microsoft.Office.Core.Scripts" />集合，它包含<see cref="T:Microsoft.Office.Core.Script" />对象保存为网页时，表示指定文档中的脚本或代码块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-596">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-597">返回或设置允许滚动的区域以 A1-样式区域引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-597">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span>
          </span>
          <span data-ttu-id="dae8a-598">不能选择滚动区域以外的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-598">Cells outside the scroll area cannot be selected.</span>
          </span>
          <span data-ttu-id="dae8a-599">可读写 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-599">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-600">可将该属性设置为空字符串 ("") 以允许对整张工作表内所有单元格的选定。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-600">Set this property to the empty string ("") to enable cell selection for the entire sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-601">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-601">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="dae8a-602">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-603">要替换的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-603">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-604">选择对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-604">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-605">若要选择一个单元格的范围，请使用<b>Select</b>方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-605">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="dae8a-606">若要使单个单元格活动单元格，请使用<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-606">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="dae8a-607">必需的 <b>字符串</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-607">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="dae8a-608">图形文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-608">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-609">设置工作表或图表的背景图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-609">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-610">返回<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />对象，表示工作表或图表工作表上的所有形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="dae8a-611">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-611">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p249">使当前筛选列表的所有行均可见。如果正在使用自动筛选，则本方法将下拉列表框内容改为“（全部）”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p249">Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-614">显示与指定工作表相关联的数据表单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-614">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-615">您正在使用的数据表单时，会暂停执行。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-615">Execution pauses while you’re using the data form.</span>
            </span>
            <span data-ttu-id="dae8a-616">关闭数据表单时，处行的下<b>ShowDataForm</b>方法将继续执行。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-616">When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-617">如果存在自定义数据表单，则本方法将运行此表单。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-617">This method runs the custom data form, if one exists.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-618">返回<see cref="T:Microsoft.Office.Interop.Excel.SmartTags" />对象，它代表指定单元格的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p251">在当前工作表中返回经过排序的值。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p251">Returns the sorted values in the current worksheet. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-621">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-621">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-622">返回以磅为单位工作表中的所有行的标准 （默认值） 高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-622">Returns the standard (default) height of all the rows in the worksheet in points.</span>
          </span>
          <span data-ttu-id="dae8a-623">只读的 <b>双</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-623">Read-only <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p253">返回或设置工作表中所有列的标准列宽（默认值）。<b>Double</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p253">Returns or sets the standard (default) width of all the columns in the worksheet. Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-p254">一个列宽单位等于"常规"样式中一个字符的宽度。对于比例字体，则使用字符 0（零）的宽度。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p254">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-628">返回<see cref="T:Microsoft.Office.Interop.Excel.Tab" />chart 或 worksheet 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-628">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="dae8a-629">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-629">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p255">如果 Microsoft Excel 对工作表使用 Lotus 1-2-3 的表达式求值规则，则该属性的值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p255">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-p256">如果 Microsoft Excel 对工作表使用 Lotus 1-2-3 的公式输入规则，则该属性的值为 <b>True</b>。<b>Boolean</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p256">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-634">返回或设置工作表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-634">Returns or sets the worksheet type.</span>
          </span>
          <span data-ttu-id="dae8a-635">只读<see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-635">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="dae8a-636">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-636">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-637">一个字符串，用于取消的工作表或工作簿的保护密码区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-637">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="dae8a-638">如果表或工作簿不受密码保护，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-638">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="dae8a-639">如果省略此参数受密码保护的工作表时，系统将提示您输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-639">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="dae8a-640">如果省略此参数受密码保护的工作簿，该方法将失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-640">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-p259">取消工作表或工作簿的保护。如果工作表或工作簿不是受保护的，则此方法不起作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-p259">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-p260">如果您忘记了密码，将不能取消工作表或工作簿的保护。建议将密码和对应文档名妥善保存。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-p260">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-645">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示指定工作表上的已用的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-645">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span>
          </span>
          <span data-ttu-id="dae8a-646">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-646">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-647">确定对象是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-647">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="dae8a-648">读/写<see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-648">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-649">如果数据透视表中的某一项在当前是可见的，则该项的 <b>Visible</b> 属性为 <b>True</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-649">The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-650">如果将一个名称的 <b>Visible</b> 属性设为 <b>False</b>，则该名称将不出现在“定义名称”对话框中。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-650">If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae8a-651">返回<see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" />集合，代表垂直分页符工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-651">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="dae8a-652">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-652">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="dae8a-653">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-653">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-654">要查询的 XPath。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-654">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="dae8a-655">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-655">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-656">空格分隔的<b>字符串</b>包含 XPath 参数中引用的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-656">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="dae8a-657">如果无法解析之一指定的命名空间，则将生成运行时错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-657">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="dae8a-658">可选<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="dae8a-659">如果希望在特定的映射中查询 XPath，请指定 XML 映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-659">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-660">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示映射到特定 XPath 单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-660">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="dae8a-661">如果尚未映射到工作表中指定的 XPath，或者如果映射的区域为空，则返回<b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-661">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-662">仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-662">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-663">如果 XPath 存在于 XML 列表中的列，返回的<b>Range</b>对象不包括标题行或插入行。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-663">If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="dae8a-664">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-664">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-665">要查询的 XPath。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-665">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="dae8a-666">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-666">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="dae8a-667">空格分隔的<b>字符串</b>包含 XPath 参数中引用的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-667">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="dae8a-668">如果无法解析之一指定的命名空间，则将生成运行时错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-668">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="dae8a-669">可选<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-669">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="dae8a-670">如果希望在特定的映射中查询 XPath，请指定 XML 映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-670">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae8a-671">返回<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象，表示映射到特定 XPath 单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="dae8a-672">如果尚未映射到工作表中指定的 XPath，则返回<b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae8a-672">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="dae8a-673">仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中提供了 XML 功能，除了 XML 电子表格格式保存文件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-673">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="dae8a-674">与不同<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />方法， <b>XmlMapQuery</b>方法返回 XML 列表，包括标题行和插入行的整个列。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dae8a-674">Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>