<Type Name="Sheets" FullName="Microsoft.Office.Interop.Excel.Sheets">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db6b3bb11f3b424395c8a07057d1712212b447b0" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010267" /></Metadata><TypeSignature Language="C#" Value="public interface Sheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Sheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Sheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Sheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Sheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="251a0-101">指定的或活动工作簿中所有工作表的集合。</span><span class="sxs-lookup"><span data-stu-id="251a0-101">A collection of all the sheets in the specified or active workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="251a0-102"><b>Sheets 集合</b>可以包含 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 或 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-102">The <b>Sheets</b> collection can contain <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects.</span></span> <span data-ttu-id="251a0-103">如果希望返回所有类型的工作表，<b>Sheets</b> 集合就非常有用。</span><span class="sxs-lookup"><span data-stu-id="251a0-103">The <b>Sheets</b> collection is useful when you want to return sheets of any type.</span></span> <span data-ttu-id="251a0-104">如果仅需使用某一类型的工作表，请参阅该工作表类型的对象主题。</span><span class="sxs-lookup"><span data-stu-id="251a0-104">If you need to work with sheets of only one type, see the object topic for that sheet type.</span></span></para>
      <para><span data-ttu-id="251a0-105">使用 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> 该属性可返回 <b>Sheets</b> 集合。</span><span class="sxs-lookup"><span data-stu-id="251a0-105">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> property to return the <b>Sheets</b> collection.</span></span></para>
      <para><span data-ttu-id="251a0-106">使用 <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> 该方法可新建工作表并将其添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="251a0-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new sheet and add it to the collection.</span></span></para>
      <para><span data-ttu-id="251a0-107">使用 <b>工作表</b> <paramref name="index" /> () ，其中工作表名称 <paramref name="index" /> 或索引号，返回单个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 或 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-107">Use <b>Sheets</b>(<paramref name="index" />), where <paramref name="index" /> is the sheet name or index number, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span></span></para>
      <para><span data-ttu-id="251a0-108">使用 <b>工作表</b> <paramref name="array" /> () 指定多个工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-108">Use <b>Sheets</b>(<paramref name="array" />) to specify more than one sheet.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="251a0-109">保留以供内部使用。 </span><span class="sxs-lookup"><span data-stu-id="251a0-109">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="251a0-110">保留以供内部使用。</span><span class="sxs-lookup"><span data-stu-id="251a0-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="251a0-111">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-111">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-112">指定工作表的对象，新建的工作表将置于此工作表之前。</span><span class="sxs-lookup"><span data-stu-id="251a0-112">An object that specifies the sheet before which the new sheet is added.</span></span></param>
        <param name="After"><span data-ttu-id="251a0-113">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-114">指定工作表的对象，新建的工作表将置于此工作表之后。</span><span class="sxs-lookup"><span data-stu-id="251a0-114">An object that specifies the sheet after which the new sheet is added.</span></span></param>
        <param name="Count"><span data-ttu-id="251a0-115">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-115">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-116">要添加的工作表数。</span><span class="sxs-lookup"><span data-stu-id="251a0-116">The number of sheets to be added.</span></span> <span data-ttu-id="251a0-117">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="251a0-117">The default value is one.</span></span></param>
        <param name="Type"><span data-ttu-id="251a0-118">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-118">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-119">指定工作表类型。</span><span class="sxs-lookup"><span data-stu-id="251a0-119">Specifies the sheet type.</span></span> <span data-ttu-id="251a0-120">可以是下列常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> ： <b>xlWorksheet</b>、 <b>xlChart</b>、 <b>xlExcel4MacroSheet</b>或 <b>xlExcel4IntlMacroSheet</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-120">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span></span> <span data-ttu-id="251a0-121">如果要基于现有模板插入工作表，请指定模板的路径。</span><span class="sxs-lookup"><span data-stu-id="251a0-121">If you are inserting a sheet based on an existing template, specify the path to the template.</span></span> <span data-ttu-id="251a0-122">默认值为 <b>xlWorksheet</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-122">The default value is <b>xlWorksheet</b>.</span></span></param>
        <summary><span data-ttu-id="251a0-123">创建新的工作表、图表或宏工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-123">Creates a new worksheet, chart, or macro sheet.</span></span> <span data-ttu-id="251a0-124">新工作表成为活动工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-124">The new worksheet becomes the active sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="251a0-125">如果 <paramref name="Before" /> 两 <paramref name="After" /> 者都省略，则新工作表将插入到活动工作表之前。</span><span class="sxs-lookup"><span data-stu-id="251a0-125">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <param name="Count">To be added.</param>
        <param name="NewLayout">To be added.</param>
        <summary><span data-ttu-id="251a0-126">此方法仅对<b>Charts</b>集合对象实现，如果在 Sheets 和<b>Worksheets</b>对象上使用，<b></b>将生成运行时错误。</span><span class="sxs-lookup"><span data-stu-id="251a0-126">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on the <b>Sheets</b> and <b>Worksheets</b> objects.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-127">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-127">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="251a0-128">只读。</span><span class="sxs-lookup"><span data-stu-id="251a0-128">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="251a0-129">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-129">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-130">将要在其之前放置所复制工作表的工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-130">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="251a0-131">不能指定 <paramref name="Before" /> 是否指定 <paramref name="After" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-131">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="251a0-132">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-133">将要在其之后放置所复制工作表的工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-133">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="251a0-134">不能指定 <paramref name="After" /> 是否指定 <paramref name="Before" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-134">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="251a0-135">将工作表复制到工作簿的另一位置。</span><span class="sxs-lookup"><span data-stu-id="251a0-135">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="251a0-136">如果未指定或 <paramref name="Before" /> <paramref name="After" /> ，Microsoft Excel 将创建一个新工作簿，其中包含复制的工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-136">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-137">返回集合中对象的数目。</span><span class="sxs-lookup"><span data-stu-id="251a0-137">Returns the number of objects in the collection.</span></span> <span data-ttu-id="251a0-138">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-138">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-139">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="251a0-139">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="251a0-140">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="251a0-140">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="251a0-141">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-141">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="251a0-142"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="251a0-142">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="251a0-143">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="251a0-143">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="251a0-144">删除对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-144">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="251a0-145">所需的 <b>Range</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-145">Required <b>Range</b> object.</span></span> <span data-ttu-id="251a0-146">要填充到集合中所有工作表上的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="251a0-146">The range to fill on all the worksheets in the collection.</span></span> <span data-ttu-id="251a0-147">该区域必须来自集合中的某个工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-147">The range must be from a worksheet within the collection.</span></span></param>
        <param name="Type"><span data-ttu-id="251a0-148">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-148">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span></span> <span data-ttu-id="251a0-149">指定如何复制区域。</span><span class="sxs-lookup"><span data-stu-id="251a0-149">Specifies how to copy the range.</span></span></param>
        <summary><span data-ttu-id="251a0-150">将单元格区域复制到集合中所有其他工作表的同一位置。</span><span class="sxs-lookup"><span data-stu-id="251a0-150">Copies a range to the same area on all other worksheets in a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-151">返回 <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> 一个集合，该集合代表工作表上的水平分页符。</span><span class="sxs-lookup"><span data-stu-id="251a0-151">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="251a0-152">只读。</span><span class="sxs-lookup"><span data-stu-id="251a0-152">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="251a0-153">每个工作表有 1，026 个水平分页符的限制。</span><span class="sxs-lookup"><span data-stu-id="251a0-153">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="251a0-154">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-154">Required <b>Object</b>.</span></span> <span data-ttu-id="251a0-155">对象的名称或索引号。</span><span class="sxs-lookup"><span data-stu-id="251a0-155">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="251a0-156">从集合中返回一个对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-156">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="251a0-157">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-158">在其之前放置移动工作表的工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-158">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="251a0-159">不能指定 <paramref name="Before" /> 是否指定 <paramref name="After" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-159">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="251a0-160">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-161">在其之后放置移动工作表的工作表。</span><span class="sxs-lookup"><span data-stu-id="251a0-161">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="251a0-162">不能指定 <paramref name="After" /> 是否指定 <paramref name="Before" /> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-162">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="251a0-163">将工作表移到工作簿中的其他位置。</span><span class="sxs-lookup"><span data-stu-id="251a0-163">Moves the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="251a0-164">如果不指定或，Microsoft Excel 将创建一个包含移动工作表 <paramref name="Before" /> <paramref name="After" /> 的新工作簿。</span><span class="sxs-lookup"><span data-stu-id="251a0-164">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-165">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-165">Returns the parent object for the specified object.</span></span> <span data-ttu-id="251a0-166">只读。</span><span class="sxs-lookup"><span data-stu-id="251a0-166">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="251a0-167">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-167">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-168">打印的开始页号。</span><span class="sxs-lookup"><span data-stu-id="251a0-168">The number of the page at which to start printing.</span></span> <span data-ttu-id="251a0-169">如果省略此参数，则从起始位置开始打印。</span><span class="sxs-lookup"><span data-stu-id="251a0-169">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="251a0-170">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-171">打印的终止页号。</span><span class="sxs-lookup"><span data-stu-id="251a0-171">The number of the last page to print.</span></span> <span data-ttu-id="251a0-172">如果省略此参数，则打印至最后一页。</span><span class="sxs-lookup"><span data-stu-id="251a0-172">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="251a0-173">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-174">打印份数。</span><span class="sxs-lookup"><span data-stu-id="251a0-174">The number of copies to print.</span></span> <span data-ttu-id="251a0-175">如果省略此参数，则只打印一份。</span><span class="sxs-lookup"><span data-stu-id="251a0-175">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="251a0-176">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-177">如果为 <b>True</b>，Microsoft Excel 将在打印对象之前调用打印预览。</span><span class="sxs-lookup"><span data-stu-id="251a0-177"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="251a0-178">如果为 <b>False</b>（或省略该参数），则立即打印对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-178"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="251a0-179">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-179">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-180">设置活动打印机的名称。</span><span class="sxs-lookup"><span data-stu-id="251a0-180">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="251a0-181">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-181">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-182">如果为 <b>True</b>，则打印到文件。</span><span class="sxs-lookup"><span data-stu-id="251a0-182"><b>True</b> to print to a file.</span></span> <span data-ttu-id="251a0-183">如果 <paramref name="PrToFileName" /> 未指定，Microsoft Excel 将提示用户输入输出文件的名称。</span><span class="sxs-lookup"><span data-stu-id="251a0-183">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="251a0-184">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-184">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-185">如果为 <b>True</b>，则逐份打印多个副本。</span><span class="sxs-lookup"><span data-stu-id="251a0-185"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="251a0-186">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-186">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-187">如果 <paramref name="PrintToFile" /> 设置为 <b>True，</b>则此参数指定要打印到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="251a0-187">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="251a0-188">打印对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-188">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="251a0-189">"页面"在工作表或工作簿的说明中引用打印页，而不是 <paramref name="From" /> <paramref name="To" /> 整个页面。</span><span class="sxs-lookup"><span data-stu-id="251a0-189">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="251a0-190">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="251a0-190">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="251a0-191">启用对对象的更改。</span><span class="sxs-lookup"><span data-stu-id="251a0-191">Enables changes to the object.</span></span></param>
        <summary><span data-ttu-id="251a0-192">按对象打印后的外观效果显示对象的预览。</span><span class="sxs-lookup"><span data-stu-id="251a0-192">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="251a0-193">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="251a0-193">Optional <b>Object</b>.</span></span> <span data-ttu-id="251a0-194">要替换的对象。</span><span class="sxs-lookup"><span data-stu-id="251a0-194">The object to replace.</span></span></param>
        <summary><span data-ttu-id="251a0-195">选择对象</span><span class="sxs-lookup"><span data-stu-id="251a0-195">Selects the object</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-196">决定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="251a0-196">Determines whether the object is visible.</span></span> <span data-ttu-id="251a0-197">读取/写入 <b>对象</b> 。</span><span class="sxs-lookup"><span data-stu-id="251a0-197">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="251a0-198">返回 <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> 一个集合，该集合代表工作表上的垂直分页符。</span><span class="sxs-lookup"><span data-stu-id="251a0-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="251a0-199">只读。</span><span class="sxs-lookup"><span data-stu-id="251a0-199">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>