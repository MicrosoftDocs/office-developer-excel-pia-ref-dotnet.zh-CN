<Type Name="HPageBreak" FullName="Microsoft.Office.Interop.Excel.HPageBreak">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7639a911b0b101be74933f305618b0af07f12d1" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20585447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface HPageBreak" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract HPageBreak" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.HPageBreak" />
  <TypeSignature Language="VB.NET" Value="Public Interface HPageBreak" />
  <TypeSignature Language="C++ CLI" Value="public interface class HPageBreak" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024401-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="89bfd-101">代表水平分页符。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89bfd-101">Represents a horizontal page break.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="89bfd-102">
        <para>
          <b>HPageBreak</b>对象是成员<see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" />集合。</para>
        <para>使用<b>HPageBreaks</b>(<paramref name="index" />)，其中<paramref name="index" />是分页符，以返回一个<b>HPageBreak</b>对象的索引号。</para>
        <para>有
        <b>备注</b>是每个工作表的 1,026 水平分页符的限制。</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="89bfd-102">
          <para>The <b>HPageBreak</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection.</para>
          <para>Use <b>HPageBreaks</b>(<paramref name="index" />), where <paramref name="index" /> is the index number of the page break, to return an <b>HPageBreak</b> object.</para>
          <para>
            <b>Note</b>  There is a limit of 1,026 horizontal page breaks per sheet.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-103">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-104">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-104">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="89bfd-105">
            <para>如果对象在 Microsoft Excel 中创建的此属性返回的字符串 XCEL，这相当于十六进制数字 5843454 c。</para>
            <para>
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Excel 的创建者代码 XCEL。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-105">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.HPageBreak.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-106">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-106">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOff">
      <MemberSignature Language="C#" Value="public void DragOff (Microsoft.Office.Interop.Excel.XlDirection Direction, int RegionIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DragOff([in]valuetype Microsoft.Office.Interop.Excel.XlDirection Direction, [in]int32 RegionIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.HPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragOff (Direction As XlDirection, RegionIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragOff(Microsoft::Office::Interop::Excel::XlDirection Direction, int RegionIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
        <Parameter Name="RegionIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="89bfd-107">所需<see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-107">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
          <span data-ttu-id="89bfd-108">分页符拖动方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-108">The direction in which the page break is dragged.</span>
          </span>
          <span data-ttu-id="89bfd-109">
            <b>XlDirection</b>可为以下常量之一：<b>xlDown</b><b>xlToRight</b><b>xlToLeft</b><b>xlUp</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-109">
              <b>XlDirection</b> can be one of these constants:<b>xlDown</b><b>xlToRight</b><b>xlToLeft</b><b>xlUp</b></span>
          </span>
        </param>
        <param name="RegionIndex">
          <span data-ttu-id="89bfd-110">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-110">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="89bfd-111">用于分页符 （如果用户拖动分页符，按下鼠标按钮时鼠标指针所在的位置的区域） 的打印区域索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-111">The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break).</span>
          </span>
          <span data-ttu-id="89bfd-112">如果打印区域是连续的则只有一个打印区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-112">If the print area is contiguous, there’s only one print region.</span>
          </span>
          <span data-ttu-id="89bfd-113">如果连续打印区域，则多个打印区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-113">If the print area is noncontiguous, there’s more than one print region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89bfd-114">将一个分页符拖出打印区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-114">Drags a page break out of the print area.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="89bfd-115">
            <para>主要用于录制宏存在此方法。您可以使用<see cref="M:Microsoft.Office.Interop.Excel.HPageBreak.Delete" />方法，以编程方式删除一个分页符。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-115">
              <para>This method exists primarily for the macro recorder. You can use the <see cref="M:Microsoft.Office.Interop.Excel.HPageBreak.Delete" /> method to delete a page break programmatically.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPageBreakExtent Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPageBreakExtent Extent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As XlPageBreakExtent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPageBreakExtent Extent { Microsoft::Office::Interop::Excel::XlPageBreakExtent get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1422)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPageBreakExtent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-116">返回指定分页符的类型： 全屏幕或仅在打印区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-116">Returns the type of the specified page break: full-screen or only within a print area.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="89bfd-117">
            <para>
              <b>Extent</b>属性可以是以下任一<see cref="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent" />常量： <b>xlPageBreakFull</b>或<b>xlPageBreakPartial</b>。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-117">
              <para>The <b>Extent</b> property can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent" /> constants: <b>xlPageBreakFull</b> or <b>xlPageBreakPartial</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Location { Microsoft::Office::Interop::Excel::Range ^ get(); void set(Microsoft::Office::Interop::Excel::Range ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-118">返回或设置的单元格 (<see cref="T:Microsoft.Office.Interop.Excel.Range" />对象) 的定义分页符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-118">Returns or sets the cell (a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object) that defines the page-break location.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="89bfd-119">
            <para>水平分页符的位置单元格的上边缘对齐。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-119">
              <para>Horizontal page breaks are aligned with the top edge of the location cell.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Parent { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-120">返回指定对象的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-120">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPageBreak Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPageBreak Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.HPageBreak.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlPageBreak" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPageBreak Type { Microsoft::Office::Interop::Excel::XlPageBreak get(); void set(Microsoft::Office::Interop::Excel::XlPageBreak value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPageBreak</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bfd-121">返回或设置分页符类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-121">Returns or sets the page break type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="89bfd-122">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" />可以是下列常量之一：</para>
            <para>
              <b>xlPageBreakAutomatic</b>
            </para>
            <para>
              <b>xlPageBreakManual</b>
            </para>
            <para>
              <b>xlPageBreakNone</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bfd-122">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /> can be one of these constants:</para>
              <para>
                <b>xlPageBreakAutomatic</b>
              </para>
              <para>
                <b>xlPageBreakManual</b>
              </para>
              <para>
                <b>xlPageBreakNone</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>