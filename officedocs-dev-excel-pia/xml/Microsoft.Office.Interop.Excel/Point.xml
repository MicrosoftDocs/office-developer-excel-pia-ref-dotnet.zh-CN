<Type Name="Point" FullName="Microsoft.Office.Interop.Excel.Point">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41d76d059050993a028c8b26b1795b64c3e70e33" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49997206" /></Metadata><TypeSignature Language="C#" Value="public interface Point" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Point" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Point" />
  <TypeSignature Language="VB.NET" Value="Public Interface Point" />
  <TypeSignature Language="C++ CLI" Value="public interface class Point" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a49e5-101">代表图表系列中的单个数据点。</span><span class="sxs-lookup"><span data-stu-id="a49e5-101">Represents a single point in a series in a chart.</span></span></summary>
    <remarks><para><span data-ttu-id="a49e5-102"><b>Point</b>对象是集合的 <see cref="T:Microsoft.Office.Interop.Excel.Points" /> 一个成员。</span><span class="sxs-lookup"><span data-stu-id="a49e5-102">The <b>Point</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection.</span></span> <span data-ttu-id="a49e5-103">该 <b>点</b> 集合包含一个序列中的所有点。</span><span class="sxs-lookup"><span data-stu-id="a49e5-103">The <b>Points</b> collection contains all the points in one series.</span></span></para>
      <para><span data-ttu-id="a49e5-104">使用 <b>Points</b> <paramref name="index" /> () （其中点 <paramref name="index" /> 索引号）返回单个 <b>Point</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-104">Use <b>Points</b>(<paramref name="index" />), where <paramref name="index" /> is the point index number, to return a single <b>Point</b> object.</span></span> <span data-ttu-id="a49e5-105">点在系列从左至右编号。</span><span class="sxs-lookup"><span data-stu-id="a49e5-105">Points are numbered from left to right on the series.</span></span> <span data-ttu-id="a49e5-106">Points(1) 为最左边的数据点，而 Points(Points.Count) 为最右边的数据点。</span><span class="sxs-lookup"><span data-stu-id="a49e5-106">Points(1) is the leftmost point, and Points(Points.Count) is the rightmost point.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary><span data-ttu-id="a49e5-107">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="a49e5-107">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-108">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-108">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="a49e5-109">可选 <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" /> 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-109">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span></span> <span data-ttu-id="a49e5-110">要应用的数据标签的类型。</span><span class="sxs-lookup"><span data-stu-id="a49e5-110">The type of data label to apply.</span></span> <span data-ttu-id="a49e5-111">可以是以下 <b>XlDataLabelsType</b> 常量之一<b>：xlDataLabelsShowBubbleSizes</b><b>xlDataLabelsShowLabelAndPercent</b> Point 的总数和类别的百分比。</span><span class="sxs-lookup"><span data-stu-id="a49e5-111">Can be one of the following <b>XlDataLabelsType</b> constants:<b>xlDataLabelsShowBubbleSizes</b><b>xlDataLabelsShowLabelAndPercent</b> Percentage of the total and category for the point.</span></span> <span data-ttu-id="a49e5-112">仅适用于饼图和圆环图。<b>xlDataLabelsShowPercent</b> 占总数百分比。</span><span class="sxs-lookup"><span data-stu-id="a49e5-112">Available only for pie charts and doughnut charts.<b>xlDataLabelsShowPercent</b> Percentage of the total.</span></span> <span data-ttu-id="a49e5-113">仅适用于饼图和圆环图。<b>xlDataLabelsShowLabel</b> 点的类别。<b>xlDataLabelsShowNone</b> 无数据标签。<b>xlDataLabelsShowValue</b> 默认值。</span><span class="sxs-lookup"><span data-stu-id="a49e5-113">Available only for pie charts and doughnut charts.<b>xlDataLabelsShowLabel</b> Category for the point.<b>xlDataLabelsShowNone</b> No data labels.<b>xlDataLabelsShowValue</b> Default.</span></span> <span data-ttu-id="a49e5-114">数据点的值（若未指定此参数，则假定为此值）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-114">Value for the point (assumed if this argument isn't specified).</span></span></param>
        <param name="LegendKey"><span data-ttu-id="a49e5-115">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-115">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-116"><b>True</b> 显示图例项标示点旁。</span><span class="sxs-lookup"><span data-stu-id="a49e5-116"><b>True</b> to show the legend key next to the point.</span></span> <span data-ttu-id="a49e5-117">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-117">The default value is <b>False</b>.</span></span></param>
        <param name="AutoText"><span data-ttu-id="a49e5-118">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-118">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-119"><b>如此</b> 如果对象自动生成合适的文字内容。</span><span class="sxs-lookup"><span data-stu-id="a49e5-119"><b>True</b> if the object automatically generates appropriate text based on content.</span></span></param>
        <param name="HasLeaderLines"><span data-ttu-id="a49e5-120">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-120">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-121">对于 and 对象，如果系列有前导线，则 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> <see cref="T:Microsoft.Office.Interop.Excel.Series" /> 其为<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="a49e5-121">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span></span></param>
        <param name="ShowSeriesName"><span data-ttu-id="a49e5-122">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-122">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-123">数据标签的系列名称。</span><span class="sxs-lookup"><span data-stu-id="a49e5-123">The series name for the data label.</span></span></param>
        <param name="ShowCategoryName"><span data-ttu-id="a49e5-124">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-124">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-125">数据标签的类别名称。</span><span class="sxs-lookup"><span data-stu-id="a49e5-125">The category name for the data label.</span></span></param>
        <param name="ShowValue"><span data-ttu-id="a49e5-126">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-126">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-127">数据标签的值。</span><span class="sxs-lookup"><span data-stu-id="a49e5-127">The value for the data label.</span></span></param>
        <param name="ShowPercentage"><span data-ttu-id="a49e5-128">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-129">数据标签的百分比。</span><span class="sxs-lookup"><span data-stu-id="a49e5-129">The percentage for the data label.</span></span></param>
        <param name="ShowBubbleSize"><span data-ttu-id="a49e5-130">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-131">数据标签的气泡尺寸。</span><span class="sxs-lookup"><span data-stu-id="a49e5-131">The bubble size for the data label.</span></span></param>
        <param name="Separator"><span data-ttu-id="a49e5-132">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="a49e5-133">数据标签的分隔符。</span><span class="sxs-lookup"><span data-stu-id="a49e5-133">The separator for the data label.</span></span></param>
        <summary><span data-ttu-id="a49e5-134">将数据标签应用于图表中的点。</span><span class="sxs-lookup"><span data-stu-id="a49e5-134">Applies data labels to a point in a chart.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-135">如果图片应用于系列中数据点或所有数据点之后，则该属性值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-135"><b>True</b> if a picture is applied to the end of the point or all points in the series.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-136">此属性仅适用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="a49e5-136">This property only applies to 3-D charts.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-137">如果图片应用于系列中数据点或所有数据点之前，则该属性值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-137"><b>True</b> if a picture is applied to the front of the point or all points in the series.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-138">此属性仅适用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="a49e5-138">This property only applies to 3-D charts.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-139">如果图片应用于系列中数据点或所有数据点的旁边，则该属性值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-139"><b>True</b> if a picture is applied to the sides of the point or all points in the series.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-140">此属性仅适用于 3D 图表。</span><span class="sxs-lookup"><span data-stu-id="a49e5-140">This property only applies to 3D charts.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-141">返回 <see cref="T:Microsoft.Office.Interop.Excel.Border" /> 一个对象，该对象表示对象的边框。</span><span class="sxs-lookup"><span data-stu-id="a49e5-141">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a49e5-142">清除对象的格式设置。</span><span class="sxs-lookup"><span data-stu-id="a49e5-142">Clears the formatting of the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a49e5-143">如果点或系列具有图片填充，则图片复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="a49e5-143">If the point or series has a picture fill, copies the picture to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-144">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="a49e5-144">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-145">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="a49e5-145">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="a49e5-146"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="a49e5-146">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a49e5-147">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="a49e5-147">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataLabel DataLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataLabel DataLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.DataLabel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataLabel As DataLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataLabel ^ DataLabel { Microsoft::Office::Interop::Excel::DataLabel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-148">返回 <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> 一个对象，该对象代表与点或趋势线关联的数据标签。</span><span class="sxs-lookup"><span data-stu-id="a49e5-148">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object that represents the data label associated with the point or trendline.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-149">若要打开趋势线的数据标签，需要将 <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayEquation" /> 该属性或 <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayRSquared" /> 属性设置为<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="a49e5-149">To turn on data labels for a trendline you need to set the <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayEquation" /> property or the <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayRSquared" /> property to <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a49e5-150">删除对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-150">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a49e5-151">删除对象 <see cref="T:Microsoft.Office.Interop.Excel.Point" /> 会删除整个系列。</span><span class="sxs-lookup"><span data-stu-id="a49e5-151">Deleting a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object deletes the entire series.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-152">返回或设置饼图或圆环图切片的分解程度值。</span><span class="sxs-lookup"><span data-stu-id="a49e5-152">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span></span> <span data-ttu-id="a49e5-153">如果未分解（切片尖端位于饼图中心），则返回 0（零）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-153">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-154">返回指定形状的对象，或指定图表（包含形状或图表的填充格式属性 <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> ）的对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-155">返回 <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-155">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span></span> <span data-ttu-id="a49e5-156">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-156">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-157">返回和设置一个值，该值指出点是否具有三维外观。</span><span class="sxs-lookup"><span data-stu-id="a49e5-157">Returns and Sets a value that states if a point has a three-dimensional appearance.</span></span> <span data-ttu-id="a49e5-158">读/写。</span><span class="sxs-lookup"><span data-stu-id="a49e5-158">Read/Write.</span></span></summary>
        <value><span data-ttu-id="a49e5-159">Boolean</span><span class="sxs-lookup"><span data-stu-id="a49e5-159">Boolean</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-160">如果点具有三维外观，则返回 True。</span><span class="sxs-lookup"><span data-stu-id="a49e5-160">Returns True if a point has a three-dimensional appearance.</span></span> </para>
          <para><span data-ttu-id="a49e5-161">该属性仅适用于气泡图。</span><span class="sxs-lookup"><span data-stu-id="a49e5-161">This property applies to bubble charts only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabel">
      <MemberSignature Language="C#" Value="public bool HasDataLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.HasDataLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-162">如果数据点具有数据标签，则该属性值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-162"><b>True</b> if the point has a data label.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-163">获取对象的高度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-163">Gets the height, in points, of the object.</span></span></summary>
        <value><span data-ttu-id="a49e5-164">对象的高度，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="a49e5-164">The height, in points, of the object.</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-165">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-165">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-166">返回 <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> 一个对象，该对象代表指定对象的内部。</span><span class="sxs-lookup"><span data-stu-id="a49e5-166">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-167"><b>如此</b> 如果 Microsoft Excel 反转项中的图案，当它对应于一个负数。</span><span class="sxs-lookup"><span data-stu-id="a49e5-167"><b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-168">获取一个值，该值代表从对象的左边缘到图表区左边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-168">Gets a value that represents the distance, in points, from the left edge of the object to the left edge of the chart area.</span></span></summary>
        <value><span data-ttu-id="a49e5-169">从对象的左边缘到图表区左边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-169">The distance, in points, from the left edge of the object to the left edge of the chart area.</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-170">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-170">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-171">将数据标志的背景色设置为 RGB 值或返回对应的颜色索引值。</span><span class="sxs-lookup"><span data-stu-id="a49e5-171">Sets the marker background color as an RGB value or returns the corresponding color index value.</span></span> <span data-ttu-id="a49e5-172">仅适用于折线图、散点图和雷达图。</span><span class="sxs-lookup"><span data-stu-id="a49e5-172">Applies only to line, scatter, and radar charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-173">返回或设置标记的背景色作为当前调色板中的索引，或作为以下常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> ： <b>xlColorIndexAutomatic</b> 或 <b>xlColorIndexNone</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-173">Returns or sets the marker background color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: <b>xlColorIndexAutomatic</b> or <b>xlColorIndexNone</b>.</span></span> <span data-ttu-id="a49e5-174">仅适用于折线图、散点图和雷达图。</span><span class="sxs-lookup"><span data-stu-id="a49e5-174">Applies only to line, scatter, and radar charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-175">将数据标志的背景色设置为 RGB 值或返回对应的颜色索引值。</span><span class="sxs-lookup"><span data-stu-id="a49e5-175">Sets the marker background color as an RGB value or returns the corresponding color index value.</span></span> <span data-ttu-id="a49e5-176">仅适用于折线图、散点图和雷达图。</span><span class="sxs-lookup"><span data-stu-id="a49e5-176">Applies only to line, scatter, and radar charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-177">返回或设置数据标记的前景色作为当前调色板中的索引，或作为以下常量之一 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> ： <b>xlColorIndexAutomatic</b> 或 <b>xlColorIndexNone</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-177">Returns or sets the marker foreground color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: <b>xlColorIndexAutomatic</b> or <b>xlColorIndexNone</b>.</span></span> <span data-ttu-id="a49e5-178">仅适用于折线图、散点图和雷达图。</span><span class="sxs-lookup"><span data-stu-id="a49e5-178">Applies only to line, scatter, and radar charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-179">返回或设置数据标记的大小（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-179">Returns or sets the data marker size in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-180">返回或设置折线图、散点图或雷达图中数据点或系列的数据标记样式。</span><span class="sxs-lookup"><span data-stu-id="a49e5-180">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-181">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" /> 可以是以下 <b>XlMarkerStyle</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="a49e5-181">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" /> can be one of the following <b>XlMarkerStyle</b> constants:</span></span></para>
          <para><span data-ttu-id="a49e5-p121">
            <b>xlMarkerStyleAutomatic</b>. Automatic markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p121">
            <b>xlMarkerStyleAutomatic</b>. Automatic markers</span></span></para>
          <para><span data-ttu-id="a49e5-p122">
            <b>xlMarkerStyleCircle</b>. Circular markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p122">
            <b>xlMarkerStyleCircle</b>. Circular markers</span></span></para>
          <para><span data-ttu-id="a49e5-p123">
            <b>xlMarkerStyleDash</b>. Long bar markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p123">
            <b>xlMarkerStyleDash</b>. Long bar markers</span></span></para>
          <para><span data-ttu-id="a49e5-p124">
            <b>xlMarkerStyleDiamond</b>. Diamond-shaped markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p124">
            <b>xlMarkerStyleDiamond</b>. Diamond-shaped markers</span></span></para>
          <para><span data-ttu-id="a49e5-p125">
            <b>xlMarkerStyleDot</b>. Short bar markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p125">
            <b>xlMarkerStyleDot</b>. Short bar markers</span></span></para>
          <para><span data-ttu-id="a49e5-p126">
            <b>xlMarkerStyleNone</b>. No markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p126">
            <b>xlMarkerStyleNone</b>. No markers</span></span></para>
          <para><span data-ttu-id="a49e5-p127">
            <b>xlMarkerStylePicture</b>. Picture markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p127">
            <b>xlMarkerStylePicture</b>. Picture markers</span></span></para>
          <para><span data-ttu-id="a49e5-p128">
            <b>xlMarkerStylePlus</b>. Square markers with a plus sign</span><span class="sxs-lookup"><span data-stu-id="a49e5-p128">
            <b>xlMarkerStylePlus</b>. Square markers with a plus sign</span></span></para>
          <para><span data-ttu-id="a49e5-p129">
            <b>xlMarkerStyleSquare</b>. Square markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p129">
            <b>xlMarkerStyleSquare</b>. Square markers</span></span></para>
          <para><span data-ttu-id="a49e5-p130">
            <b>xlMarkerStyleStar</b>. Square markers with an asterisk</span><span class="sxs-lookup"><span data-stu-id="a49e5-p130">
            <b>xlMarkerStyleStar</b>. Square markers with an asterisk</span></span></para>
          <para><span data-ttu-id="a49e5-p131">
            <b>xlMarkerStyleTriangle</b>. Triangular markers</span><span class="sxs-lookup"><span data-stu-id="a49e5-p131">
            <b>xlMarkerStyleTriangle</b>. Triangular markers</span></span></para>
          <para><span data-ttu-id="a49e5-p132">
            <b>xlMarkerStyleX</b>. Square markers with an X</span><span class="sxs-lookup"><span data-stu-id="a49e5-p132">
            <b>xlMarkerStyleX</b>. Square markers with an X</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-206">获取对象名称。</span><span class="sxs-lookup"><span data-stu-id="a49e5-206">Gets the object name.</span></span></summary>
        <value><span data-ttu-id="a49e5-207">对象名称。</span><span class="sxs-lookup"><span data-stu-id="a49e5-207">The object name.</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-208">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-208">Read-only.</span></span></para>
          <para><span data-ttu-id="a49e5-p133">This property corresponds to the name of a data point on a chart. The name is represented using the following format: S&lt;series number&gt;P&lt;point number&gt;.</span><span class="sxs-lookup"><span data-stu-id="a49e5-p133">This property corresponds to the name of a data point on a chart. The name is represented using the following format: S&lt;series number&gt;P&lt;point number&gt;.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-211">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-211">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a49e5-212">从剪贴板中粘贴图片，将其作为所选数据点的标志。</span><span class="sxs-lookup"><span data-stu-id="a49e5-212">Pastes a picture from the Clipboard as the marker on the selected point.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a49e5-213">Paste <b></b>方法可用于柱形图、条形图、线条图或雷达图，并将其属性设置 <see cref="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" /> 为<b>xlMarkerStylePicture</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-213">The <b>Paste</b> method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-214">返回或设置图片在柱形图或条形图上的显示方式。</span><span class="sxs-lookup"><span data-stu-id="a49e5-214">Returns or sets the way pictures are displayed on a column or bar picture chart.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a49e5-215">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" /> 可以是以下 <b>XlChartPictureType</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="a49e5-215">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" /> can be one of the following <b>XlChartPictureType</b> constants:</span></span></para>
          <para><span data-ttu-id="a49e5-216">
            <b>xlStack</b>
          </span><span class="sxs-lookup"><span data-stu-id="a49e5-216">
            <b>xlStack</b>
          </span></span></para>
          <para><span data-ttu-id="a49e5-217">
            <b>xlStackScale</b>
          </span><span class="sxs-lookup"><span data-stu-id="a49e5-217">
            <b>xlStackScale</b>
          </span></span></para>
          <para><span data-ttu-id="a49e5-218">
            <b>xlStretch</b>
          </span><span class="sxs-lookup"><span data-stu-id="a49e5-218">
            <b>xlStretch</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-219">返回或设置图表上每张图片的单位，如果该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> <b>xlStackScale</b> (，则此属性将被忽略) 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-219">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to <b>xlStackScale</b> (if not, this property is ignored).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-220">返回或设置图表上每张图片的单位，如果该属性设置为 <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> <b>xlStackScale</b> (，则此属性将被忽略) 。</span><span class="sxs-lookup"><span data-stu-id="a49e5-220">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to <b>xlStackScale</b> (if not, this property is ignored).</span></span> <span data-ttu-id="a49e5-221">读/写。</span><span class="sxs-lookup"><span data-stu-id="a49e5-221">Read/write.</span></span></summary>
        <value><span data-ttu-id="a49e5-222"><b>Double</b></span><span class="sxs-lookup"><span data-stu-id="a49e5-222"><b>Double</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieSliceLocation">
      <MemberSignature Language="C#" Value="public double PieSliceLocation (Microsoft.Office.Interop.Excel.XlPieSliceLocation loc, Microsoft.Office.Interop.Excel.XlPieSliceIndex Index = Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PieSliceLocation([in]valuetype Microsoft.Office.Interop.Excel.XlPieSliceLocation loc, [in]valuetype Microsoft.Office.Interop.Excel.XlPieSliceIndex Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.PieSliceLocation(Microsoft.Office.Interop.Excel.XlPieSliceLocation,Microsoft.Office.Interop.Excel.XlPieSliceIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieSliceLocation (loc As XlPieSliceLocation, Optional Index As XlPieSliceIndex = Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loc" Type="Microsoft.Office.Interop.Excel.XlPieSliceLocation" />
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlPieSliceIndex" />
      </Parameters>
      <Docs>
        <param name="loc"><span data-ttu-id="a49e5-223">指定水平或垂直坐标。</span><span class="sxs-lookup"><span data-stu-id="a49e5-223">Specifies a horizontal or vertical coordinate.</span></span></param>
        <param name="Index"><span data-ttu-id="a49e5-224">指定要返回哪个饼图扇区位置坐标。</span><span class="sxs-lookup"><span data-stu-id="a49e5-224">Specifies which pie slice position coordinate to return.</span></span> <span data-ttu-id="a49e5-225">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint" />。</span><span class="sxs-lookup"><span data-stu-id="a49e5-225">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint" />.</span></span></param>
        <summary><span data-ttu-id="a49e5-226">返回图表项上某点的水平或垂直位置（以磅为单位），从对象的上边缘或左边缘到图表区域的上边缘或左边缘。</span><span class="sxs-lookup"><span data-stu-id="a49e5-226">Returns the vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</span></span></summary>
        <returns><span data-ttu-id="a49e5-227">图表项上数据点的垂直或水平位置（以点表示）从对象的上边缘或左边缘到图表区的上边缘或左边缘。</span><span class="sxs-lookup"><span data-stu-id="a49e5-227">The vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</span></span></returns>
        <remarks><para><span data-ttu-id="a49e5-228">此属性仅适用于饼图和圆环图类型。</span><span class="sxs-lookup"><span data-stu-id="a49e5-228">This property only applies to pie and doughnut chart types.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryPlot">
      <MemberSignature Language="C#" Value="public bool SecondaryPlot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SecondaryPlot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.SecondaryPlot" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryPlot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SecondaryPlot { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-229">如果数据点位于复合饼图或复合条饼图中的第二个饼图或条形图上，则该属性值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="a49e5-229"><b>True</b> if the point is in the secondary section of either a pie of pie chart or a bar of pie chart.</span></span> <span data-ttu-id="a49e5-230">仅应用于复合饼图或复合条饼图中的数据点。</span><span class="sxs-lookup"><span data-stu-id="a49e5-230">Applies only to points on pie of pie charts or bar of pie charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a49e5-231">选择对象。</span><span class="sxs-lookup"><span data-stu-id="a49e5-231">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-232"><b>如此</b> 如果字体是阴影字体或对象有阴影。</span><span class="sxs-lookup"><span data-stu-id="a49e5-232"><b>True</b> if the font is a shadow font or if the object has a shadow.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-233">获取一个值，该值代表从对象上边缘到图表区上边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-233">Gets a value that represents the distance, in points, from the top edge of the object to the top edge of the chart area.</span></span></summary>
        <value><span data-ttu-id="a49e5-234">从对象上边缘到图表区上边缘的距离（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-234">The distance, in points, from the top edge of the object to the top edge of the chart area.</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-235">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-235">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a49e5-236">获取对象的宽度（以点表示）。</span><span class="sxs-lookup"><span data-stu-id="a49e5-236">Gets the width, in points, of the object.</span></span></summary>
        <value><span data-ttu-id="a49e5-237">对象的宽度，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="a49e5-237">The width, in points, of the object.</span></span></value>
        <remarks><para><span data-ttu-id="a49e5-238">只读。</span><span class="sxs-lookup"><span data-stu-id="a49e5-238">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>