<Type Name="ShapeRange" FullName="Microsoft.Office.Interop.Excel.ShapeRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffea79e6ef3bb0175b91650070af45326d337d7f" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20582899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ShapeRange : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ShapeRange implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ShapeRange" />
  <TypeSignature Language="VB.NET" Value="Public Interface ShapeRange&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ShapeRange : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1d7b2-101">代表一个形状范围，即某个文档中的一组形状。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d7b2-101">Represents a shape range, which is a set of shapes on a document.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="1d7b2-102">形状范围可以只包含文档中的一个形状，也可以包含该文档中的所有形状。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1d7b2-102">A shape range can contain as few as a single shape or as many as all the shapes on the document.</span>
        </span>
        <span data-ttu-id="1d7b2-103">您可以包括任何所需的形状--从文档中的所有图形或所选内容中的所有形状中进行选择   构造形状范围。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1d7b2-103">You can include whichever shapes you want — chosen from among all the shapes on the document or all the shapes in the selection — to construct a shape range.</span>
        </span>
        <span data-ttu-id="1d7b2-104">例如，可以构造<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />集合，其中包含对文档的前三个形状、 所有选定的形状或文档中所有的任意多边形。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1d7b2-104">For example, you could construct a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection that contains the first three shapes on a document, all the selected shapes on a document, or all the freeforms on a document.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="1d7b2-105">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-106">返回<see cref="T:Microsoft.Office.Interop.Excel.Adjustments" />对象，其中包含指定形状中的所有调整的调整值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-107">适用于任何<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表自选图形、 艺术字或连接器的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-107">Applies to any <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span>
          </span>
          <span data-ttu-id="1d7b2-108">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-108">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public void Align (Microsoft.Office.Core.MsoAlignCmd AlignCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Align([in]valuetype Microsoft.Office.Core.MsoAlignCmd AlignCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Align (AlignCmd As MsoAlignCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Align(Microsoft::Office::Core::MsoAlignCmd AlignCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AlignCmd" Type="Microsoft.Office.Core.MsoAlignCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="AlignCmd">
          <span data-ttu-id="1d7b2-109">所需<see cref="T:Microsoft.Office.Core.MsoAlignCmd" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-109">Required <see cref="T:Microsoft.Office.Core.MsoAlignCmd" />.</span>
          </span>
          <span data-ttu-id="1d7b2-110">指定某个指定形状范围中形状的对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-110">Specifies the way the shapes in the specified shape range are to be aligned.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="1d7b2-111">所需<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-111">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="1d7b2-112">不在 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-112">Not used in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="1d7b2-113">必须为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-113">Must be <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-114">对齐指定形状区域中的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-114">Aligns the shapes in the specified range of shapes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-115">返回或设置的 （可选） 的描述性文本字符串<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />对象，该对象保存到网页时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-115">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object when the object is saved to a Web page.</span>
          </span>
          <span data-ttu-id="1d7b2-116">可读写 <b>String</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-116">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-117">可选文字可以代替在 Web 浏览器或直接通过图像的形状的图像时鼠标指针悬停于 （中支持这些功能的浏览器） 的图像上会显示。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-117">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-118">返回<see cref="T:Microsoft.Office.Interop.Excel.Application" />对象代表 Microsoft Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="1d7b2-119">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-119">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-120">通过使用复制的指定的形状格式应用于<see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-120">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-121">返回或设置指定的形状类型<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />对象，它代表行、 任意多边形，或连接器自选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-121">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span>
          </span>
          <span data-ttu-id="1d7b2-122">读/写<see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-122">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-123">[!注释] 改变一个形状的类型时，该形状保留其大小、颜色和其他属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-123">When you change the type of a shape, the shape retains its size, color, and other attributes.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-124">使用<see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />属性<see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />对象来设置或返回连接符类型。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-124">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-125">返回或设置的背景样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-125">Returns or sets the background style.</span>
          </span>
          <span data-ttu-id="1d7b2-126">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-126">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-127">返回或设置一个值，该值指示以黑白模式查看演示文稿时指定形状的出现形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-127">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span>
          </span>
          <span data-ttu-id="1d7b2-128">读/写<see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-128">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-129">返回<see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" />对象，其中包含格式属性指定的形状的标注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-129">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-130">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表线形标注的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-130">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent line callouts.</span>
          </span>
          <span data-ttu-id="1d7b2-131">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="1d7b2-132">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-132">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="1d7b2-133">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-133">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="1d7b2-134">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-134">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="1d7b2-135">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-135">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-136">仅供内部使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-136">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-137">返回一个 object 值，该值代表形状范围中包含的图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-137">Returns an object that represents the chart contained in the shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-138">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-138">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel._Chart" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-139">如果指定的形状是子形状或形状范围中的所有形状都的形状的同一个父子形状，则返回<b>属性值为 msoTrue</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-139">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span>
          </span>
          <span data-ttu-id="1d7b2-140">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-140">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-141">返回指定形状中的连结点的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-141">Returns the number of connection sites on the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-142">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-142">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-143">
            <b>True</b>如果指定的形状是连接符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-143">
              <b>True</b> if the specified shape is a connector.</span>
          </span>
          <span data-ttu-id="1d7b2-144">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-144">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-145">返回<see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />对象，其中包含格式设置属性的连接器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span>
          </span>
          <span data-ttu-id="1d7b2-146">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表连接器的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-146">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent connectors.</span>
          </span>
          <span data-ttu-id="1d7b2-147">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-147">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-148">返回集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-148">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="1d7b2-149">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-149">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-150">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-150">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="1d7b2-151">如果在 Microsoft Excel 中创建对象，此属性返回的字符串 XCEL，这相当于十六进制数字 5843454c。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="1d7b2-152">只读<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-153">
              <b>Creator</b>属性用于在 Microsoft Excel 中用于的 Macintosh，其中每个应用程序具有四个字符的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-153">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="1d7b2-154">例如，Microsoft Excel 具有 XCEL 的创建者代码。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-154">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-155">删除对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-155">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-156">返回<see cref="T:Microsoft.Office.Interop.Excel.Diagram" />对象，它代表图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-156">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-157">返回<see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" />对象，它代表图表中的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distribute">
      <MemberSignature Language="C#" Value="public void Distribute (Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distribute([in]valuetype Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Distribute (DistributeCmd As MsoDistributeCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Distribute(Microsoft::Office::Core::MsoDistributeCmd DistributeCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1742)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DistributeCmd" Type="Microsoft.Office.Core.MsoDistributeCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="DistributeCmd">
          <span data-ttu-id="1d7b2-158">所需<see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-158">Required <see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />.</span>
          </span>
          <span data-ttu-id="1d7b2-159">指定该范围内的形状是水平分布还是垂直分布。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-159">Specifies whether shapes in the range are to be distributed horizontally or vertically.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="1d7b2-160">所需<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-160">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="1d7b2-161">不在 Microsoft Excel 中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-161">Not used in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="1d7b2-162">必须为<b>False</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-162">Must be <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-163">水平或垂直地分布指定的形状区域中的各形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-163">Horizontally or vertically distributes the shapes in the specified range of shapes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-164">复制对象，并返回对新复制对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-164">Duplicates the object and returns a reference to the new copy.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-165">返回<see cref="T:Microsoft.Office.Interop.Excel.FillFormat" />对象，其中包含填充格式指定的图表或形状的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-165">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="1d7b2-166">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-166">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd">
          <span data-ttu-id="1d7b2-167">所需<see cref="T:Microsoft.Office.Core.MsoFlipCmd" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-167">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span>
          </span>
          <span data-ttu-id="1d7b2-168">指定形状是水平翻转还是垂直翻转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-168">Specifies whether the shape is to be flipped horizontally or vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-169">绕指定形状的水平或垂直对称轴翻转该形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-169">Flips the specified shape around its horizontal or vertical axis.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-170">返回一个 object，其中包含的形状范围的发光格式属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-170">Returns an object that contains glow formatting properties for the shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-171">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-171">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.GlowFormat" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-172">发光效果为图形添加了色彩鲜明的彩色边缘。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-172">The glow effect adds a vibrant colored edge to graphics.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Group ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Group() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" />
      <MemberSignature Language="VB.NET" Value="Public Function Group () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Group();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-173">将指定区域中的形状形成一组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-173">Groups the shapes in the specified range.</span>
          </span>
          <span data-ttu-id="1d7b2-174">作为 single 类型返回组合的形状<see cref="T:Microsoft.Office.Interop.Excel.Shape" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-174">Returns the grouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-175">由于一组形状被视为单个形状，组合和取消组合的形状的 <b>Shapes</b> 集合中项的数目，并更改集合中受影响的项之后的项的索引号。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-175">Because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-176">返回<see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" />对象，它代表指定组中的单个形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-176">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span>
          </span>
          <span data-ttu-id="1d7b2-177">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />对象，代表组合的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-177">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent grouped shapes.</span>
          </span>
          <span data-ttu-id="1d7b2-178">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-178">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-179">使用<see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" />要从组中返回的单个形状的<b>GroupShapes</b>对象的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-179">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-180">如果返回信息<see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" />包含图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-180">Returns information on if a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> contains a chart.</span>
          </span>
          <span data-ttu-id="1d7b2-181">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-181">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoTriState" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-182">返回形状或形状范围是否包含图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-182">Returns whether a shape or shape range contains a diagram.</span>
          </span>
          <span data-ttu-id="1d7b2-183">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-183">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-184">返回一个值，该值指定的形状或形状范围中是否存在图表节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-184">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-185">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-185">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-186">对象的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-186">The height of the object.</span>
          </span>
          <span data-ttu-id="1d7b2-187">读/写 <b>单个</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-187">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-188">
            <b>True</b>如果指定的形状绕水平轴翻转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-188">
              <b>True</b> if the specified shape is flipped around the horizontal axis.</span>
          </span>
          <span data-ttu-id="1d7b2-189">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-189">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-190">返回指定对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-190">Returns the type for the specified object.</span>
          </span>
          <span data-ttu-id="1d7b2-191">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-191">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-192">可将 ID 标签用作其他 HTML 文档或相同网页上的超链接引用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-192">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="1d7b2-193">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-193">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-194">指定距离该形状是水平移动以磅为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-194">Specifies how far the shape is to be moved horizontally in points.</span>
          </span>
          <span data-ttu-id="1d7b2-195">正值表示将形状向右移动，负值表示将形状向左移动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-195">A positive value moves the shape to the right; a negative value moves it to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-196">以指定点数水平移动指定形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-196">Moves the specified shape horizontally by the specified number of points.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="1d7b2-197">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-197">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-198">指定距离该形状是水平旋转度中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-198">Specifies how far the shape is to be rotated horizontally in degrees.</span>
          </span>
          <span data-ttu-id="1d7b2-199">正值表示使形状按顺时针方向旋转；负值表示使形状按逆时针方向旋转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-199">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-200">按指定度数值，改变指定形状绕 z 轴的旋转角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-200">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span>
          </span>
          <span data-ttu-id="1d7b2-201">使用<see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" />属性设置形状的绝对旋转角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-201">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> property to set the absolute rotation of the shape.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-202">若要将三维形状绕 x 轴或 y 轴的旋转，使用<see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" />方法或<see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-202">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="1d7b2-203">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-203">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-204">指定远的 shape 对象是垂直移动以磅为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-204">Specifies how far the shape object is to be moved vertically in points.</span>
          </span>
          <span data-ttu-id="1d7b2-205">正值表示将形状向下移动，负值表示将形状向上移动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-205">A positive value moves the shape down; a negative value moves it up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-206">以指定点数垂直移动指定形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-206">Moves the specified shape vertically by the specified number of points.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="1d7b2-207">所需的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-207">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-208">对象的名称或索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-208">The name or index number for the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-209">从集合中返回一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-209">Returns a single object from a collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-210">对象的文本名称就是值<see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" />和<see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-210">The text name of the object is the value of the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" /> and <see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" /> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-211">从对象左边缘到工作表） 的 A 列的左边的缘或 （在图表上） 的图表区的左边的缘的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-211">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span>
          </span>
          <span data-ttu-id="1d7b2-212">读/写 <b>单个</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-212">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-213">返回<see cref="T:Microsoft.Office.Interop.Excel.LineFormat" />对象，其中包含线条格式指定形状的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-214">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-214">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-215">对于线条， <b>LineFormat</b> 对象代表线条本身;具有边框的形状， <b>LineFormat</b> 对象表示的边框。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-215">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-216">
            <b>True</b>如果指定的形状在调整保留其原始比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-216">
              <b>True</b> if the specified shape retains its original proportions when you resize it.</span>
          </span>
          <span data-ttu-id="1d7b2-217">
            <b>False</b>如果时调整其大小，您可以更改的高度和彼此的形状的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-217">
              <b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span>
          </span>
          <span data-ttu-id="1d7b2-218">读/写<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-218">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-p140">返回或设置对象的名称。 <b>String</b> 类型，可读写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-p140">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-221">下表显示了 <b>Name</b> 属性和相关属性的示例值，同时假设有一个具有唯一名称为“[Europe].[France].[Paris]”的 OLAP 数据源，有一个包含项名称为“Paris”的非 OLAP 数据源。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-221">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1d7b2-222">
                  <b>标题</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-222">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-223">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-223">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1d7b2-224">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-224">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-225">
                  <b>名称</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-225">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-226">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-226">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1d7b2-227">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-227">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-228">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-228">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-229">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-229">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1d7b2-230">（与 SQL 属性值相同，只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-230">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-231">
                  <b>值</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-231">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-232">[Europe].[France].[Paris]（只读）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-232">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="1d7b2-233">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-233">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="1d7b2-234">指定的索引时<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />集合，您可以使用下表中所示的语法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-234">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1d7b2-235">表达式。PivotItems ("[Europe]。 [法国]。[Paris]")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-235">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-236">表达式。PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-236">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="1d7b2-237">当使用<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />属性引用集合中的特定成员，您可以使用下表中所示的文本索引名称。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-237">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1d7b2-238">[Europe]。[France]。[Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-238">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-239">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-239">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-240">返回<see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" />集合，代表指定形状的几何描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-240">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-241">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表任意多边形的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-241">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent freeform drawings.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-p142">返回指定对象的父对象。只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-p142">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-244">返回<see cref="T:Microsoft.Office.Interop.Excel.Shape" />对象代表子形状的通用父形状或子形状范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-244">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-245">复制指定形状的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-245">Copies the formatting of the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-246">使用<see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" />方法，以应用于另一个形状复制格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-246">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> method to apply the copied formatting to another shape.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-247">返回<see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" />对象，其中包含图片格式指定形状的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-248">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表图片或 OLE 对象的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-248">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent pictures or OLE objects.</span>
          </span>
          <span data-ttu-id="1d7b2-249">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-249">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-250">返回<see cref="T:Microsoft.Office.Core.ReflectionFormat" />包含反射格式的形状范围的属性指定的形状范围的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-250">Returns a <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> object for a specified shape range that contains reflection formatting properties for the shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-251">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-251">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.ReflectionFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Regroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Regroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Regroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Regroup () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Regroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-252">重新组合指定的形状区域内的原有的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-252">Regroups the group that the specified shape range belonged to previously.</span>
          </span>
          <span data-ttu-id="1d7b2-253">作为 single 类型返回重新组合的形状<see cref="T:Microsoft.Office.Interop.Excel.Shape" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-253">Returns the regrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-254">
              <b>Regroup</b>方法只还原组中的第一个以前组合的形状中指定发现<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-254">The <b>Regroup</b> method only restores the group for the first previously grouped shape it finds in the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection.</span>
            </span>
            <span data-ttu-id="1d7b2-255">因此，如果指定的形状范围包含以前属于不同组的形状，将恢复组之一。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-255">Therefore, if the specified shape range contains shapes that previously belonged to different groups, only one of the groups will be restored.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-256">请注意，由于将一组形状被视为一个形状，分组和取消分组形状中的项目数<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />集合和更改之后影响集合中的项目的项目的索引号。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-256">Note that, because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-257">重置连接符，使它们可以采用最短的路径连接的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-257">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-258">若要重排连接线， <b>RerouteConnections</b>方法可能分离连接符的端点并将其重新附加到不同连接的站点上连接的形状。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-258">To reroute connectors, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span>
            </span>
            <span data-ttu-id="1d7b2-259">此方法将重排连接在指定形状上的所有连接符；如果指定的形状是连接符，就重排该连接符。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-259">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-p149">如果该方法应用于一个连接符，则只重置该连接符；如果该方法应用于一个已连接的形状，则重置该形状上所有的连接符。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-p149">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-262">返回或设置形状的旋转度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-262">Returns or sets the rotation of the shape in degrees.</span>
          </span>
          <span data-ttu-id="1d7b2-263">读/写 <b>单个</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-263">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor">
          <span data-ttu-id="1d7b2-264">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-264">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-265">指定形状调整后的高度与当前或原始高度的比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-265">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span>
          </span>
          <span data-ttu-id="1d7b2-266">例如，要将一个矩形放大百分之五十，请将此参数指定为 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-266">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span>
          </span>
        </param>
        <param name="RelativeToOriginalSize">
          <span data-ttu-id="1d7b2-267">所需<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-267">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="1d7b2-268">
            <b>msoTrue</b>来调整形状相对于原始尺寸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-268">
              <b>msoTrue</b> to scale the shape relative to its original size.</span>
          </span>
          <span data-ttu-id="1d7b2-269">
            <b>msoFalse</b> ，则相对于当前尺寸缩放形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-269">
              <b>msoFalse</b> to scale it relative to its current size.</span>
          </span>
          <span data-ttu-id="1d7b2-270">仅当指定的形状是图片或 OLE 对象，您可以指定此参数<b>，则为 msoTrue</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-270">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span>
          </span>
        </param>
        <param name="Scale">
          <span data-ttu-id="1d7b2-271">可选<see cref="T:Microsoft.Office.Core.MsoScaleFrom" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-271">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          </span>
          <span data-ttu-id="1d7b2-272">指定在缩放形状时，该形状的哪一部分将保持在原有的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-272">Specifies which part of the shape retains its position when the shape is scaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-273">按指定因子调整形状的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-273">Scales the height of the shape by a specified factor.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-274">对于图片和 OLE 对象，您可以指示您是否要扩展的形状相对于原始或当前大小。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-274">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span>
            </span>
            <span data-ttu-id="1d7b2-275">对于除图片和 OLE 对象以外的其他形状来说，缩放总是相对于其当前高度而言。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-275">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor">
          <span data-ttu-id="1d7b2-276">
            <b>必选。</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-276">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-277">指定形状调整后的宽度与当前或原始宽度的比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-277">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span>
          </span>
          <span data-ttu-id="1d7b2-278">例如，要将一个矩形放大百分之五十，请将此参数指定为 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-278">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span>
          </span>
        </param>
        <param name="RelativeToOriginalSize">
          <span data-ttu-id="1d7b2-279">所需<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-279">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="1d7b2-280">
            <b>False</b> ，则相对于当前大小缩放形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-280">
              <b>False</b> to scale it relative to its current size.</span>
          </span>
          <span data-ttu-id="1d7b2-281">仅当指定的形状是图片或 OLE 对象时，可以将此参数指定 <b>为 True</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-281">You can specify <b>True</b> for this argument only if the specified shape is a picture or an OLE object.</span>
          </span>
        </param>
        <param name="Scale">
          <span data-ttu-id="1d7b2-282">可选<see cref="T:Microsoft.Office.Core.MsoScaleFrom" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-282">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          </span>
          <span data-ttu-id="1d7b2-283">指定在缩放形状时，该形状的哪一部分将保持在原有的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-283">Specifies which part of the shape retains its position when the shape is scaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-284">按指定因子调整形状的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-284">Scales the width of the shape by a specified factor.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-285">对于图片和 OLE 对象，您可以指示您是否要扩展的形状相对于原始或当前大小。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-285">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span>
            </span>
            <span data-ttu-id="1d7b2-286">图片和 OLE 对象以外的形状总是相对于当前宽度缩放。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-286">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="1d7b2-287">可选的<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-287">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1d7b2-288">要替换的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-288">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-289">选择对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-289">Selects the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-290">将指定形状的格式设置为形状的默认格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-290">Makes the formatting of the specified shape the default formatting for the shape.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-291">
            <b>True</b>如果字体为是阴影字体或对象是否带有阴影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-291">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="1d7b2-292">可读写 <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-292">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-293">返回或设置<see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" />代表形状的形状范围的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-293">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents shape style for a shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-294">为可读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-294">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-295">返回一个对象，包含柔化边缘格式指定的形状范围的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-295">Returns an object that contains soft edge formatting properties for a specified shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-296">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-296">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-297">返回<see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" />对象，包含指定形状的文本效果格式属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-297">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-298">适用于<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />代表艺术字对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-298">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent WordArt.</span>
          </span>
          <span data-ttu-id="1d7b2-299">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-299">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-300">返回<see cref="T:Microsoft.Office.Interop.Excel.TextFrame" />对象，其中包含的对齐方式和定位属性指定的形状范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-301">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-301">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-302">返回一个对象，包含指定的形状范围的格式的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-302">Returns an object that contains text formatting for the specified shape range.</span>
          </span>
          <span data-ttu-id="1d7b2-303">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-303">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-304">返回<see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" />对象，其中包含三维 – 效果格式指定形状的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="1d7b2-305">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-305">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-306">获取或设置与指定的形状区域关联的替代文本的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-306">Gets or sets the title of the alternative text associated with the specified shape range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d7b2-307">指定的形状区域相关联的可选文字标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-307">The title of the alternative text associated with the specified shape range.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-308">为可读/写属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-308">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-309">若要设置形状区域的可选文本的描述性文本字符串，使用<see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" />属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-309">To set the descriptive text string of the alternative text for a shape range, use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-310">从形状范围中的顶层形状的上边缘到工作表的上边缘的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-310">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span>
          </span>
          <span data-ttu-id="1d7b2-311">读/写 <b>单个</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-311">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-312">返回或设置形状类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-312">Returns or sets the shape type.</span>
          </span>
          <span data-ttu-id="1d7b2-313">只读<see cref="T:Microsoft.Office.Core.MsoShapeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-313">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-314">取消指定的形状或形状范围中所有组合的形状的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-314">Ungroups any grouped shapes in the specified shape or range of shapes.</span>
          </span>
          <span data-ttu-id="1d7b2-315">反汇编中图片和 OLE 对象指定的形状或形状范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-315">Disassembles pictures and OLE objects within the specified shape or range of shapes.</span>
          </span>
          <span data-ttu-id="1d7b2-316">作为 single 类型返回取消组合的形状<see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-316">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-317">由于将一组形状作为单个对象处理，分组和取消分组形状中的项目数<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />集合和更改之后影响集合中的项目的项目的索引号。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-317">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-318">
            <b>True</b>如果指定的形状绕垂直轴翻转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-318">
              <b>True</b> if the specified shape is flipped around the vertical axis.</span>
          </span>
          <span data-ttu-id="1d7b2-319">只读<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-319">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-320">返回为一系列的坐标对指定任意多边形顶点 （和贝赛尔曲线的控制点） 的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-320">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span>
          </span>
          <span data-ttu-id="1d7b2-321">只读 <b>对象</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-321">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-322">您可以使用此属性返回用作参数的数组<see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" />方法或<see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-322">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-323">下表显示 <b>Vertices</b> 属性如何将 vertArray() 数组中的值与三角形的顶点坐标相关联。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-323">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1d7b2-324">vertArray （1，1）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-324">vertArray(1, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-325">第一个顶点与文档的左边界之间的水平距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-325">The horizontal distance from the first vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-326">vertArray （1，2）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-326">vertArray(1, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-327">第一个顶点与文档的顶端之间的垂直距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-327">The vertical distance from the first vertex to the top of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-328">vertArray （2，1）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-328">vertArray(2, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-329">第二个顶点与文档的左边界之间的水平距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-329">The horizontal distance from the second vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-330">vertArray （2，2）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-330">vertArray(2, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-331">第二个顶点与文档的顶端之间的垂直距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-331">The vertical distance from the second vertex to the top of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-332">vertArray （3，1）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-332">vertArray(3, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-333">第三个顶点与文档的左边界之间的水平距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-333">The horizontal distance from the third vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1d7b2-334">vertArray （3、 2）</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-334">vertArray(3, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1d7b2-335">第三个顶点与文档的顶端之间的垂直距离</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1d7b2-335">The vertical distance from the third vertex to the top of the document</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-336">确定对象是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-336">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="1d7b2-337">读/写<see cref="T:Microsoft.Office.Core.MsoTriState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-337">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-338">对象的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-338">The width of the object.</span>
          </span>
          <span data-ttu-id="1d7b2-339">读/写 <b>单个</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-339">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd">
          <span data-ttu-id="1d7b2-340">所需<see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-340">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span>
          </span>
          <span data-ttu-id="1d7b2-341">指定针对其他形状将指定形状移动到的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-341">Specifies where to move the specified shape relative to the other shapes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d7b2-342">将指定的形状移到集合中其他形状的前面或后面（即更改该形状在 z-顺序中的位置）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-342">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-343">使用<see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" />属性确定形状的 z-顺序中的当前位置。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-343">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d7b2-344">返回指定的形状在 z 顺序中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-344">Returns the position of the specified shape in the z-order.</span>
          </span>
          <span data-ttu-id="1d7b2-345">
            <b>Integer</b> 类型，只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d7b2-345">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1d7b2-346">若要设置形状的 z-顺序中的位置，请使用<see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-346">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-347">对应于中的形状的索引号的 z-顺序中的形状的位置<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-347">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
            </span>
            <span data-ttu-id="1d7b2-348">例如，如果 myDocument 上第四个形状，表达式 myDocument.Shapes(1) 返回 z-次序末尾的形状，而表达式 myDocument.Shapes(4) 返回的形状在 z-次序前面。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-348">For example, if there are four shapes on myDocument, the expression myDocument.Shapes(1) returns the shape at the back of the z-order, and the expression myDocument.Shapes(4) returns the shape at the front of the z-order.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1d7b2-349">每次向集合中添加一个新的形状时，默认情况下它会被添加到 z-次序的最前端。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d7b2-349">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>