<Type Name="ListObjects" FullName="Microsoft.Office.Interop.Excel.ListObjects">
  <Metadata><Meta Name="ms.openlocfilehash" Value="297eaae8b8252f38795243645194d97dbacd5ca5" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999922" /></Metadata><TypeSignature Language="C#" Value="public interface ListObjects : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListObjects implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ListObjects" />
  <TypeSignature Language="VB.NET" Value="Public Interface ListObjects&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ListObjects : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024470-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d2846-101">工作表上所有 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="d2846-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects on a worksheet.</span></span> <span data-ttu-id="d2846-102">每个 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> 对象表示工作表中的列表。</span><span class="sxs-lookup"><span data-stu-id="d2846-102">Each <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object represents a list in the worksheet.</span></span></summary>
    <remarks><para><span data-ttu-id="d2846-103">使用 <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> 对象的属性 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 可返回 <b>ListObjects</b> 集合。</span><span class="sxs-lookup"><span data-stu-id="d2846-103">Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return the <b>ListObjects</b> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="d2846-104">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="d2846-104">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Add (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject Add([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType"><span data-ttu-id="d2846-105">可选 <b>XlListObjectSourceType</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-105">Optional <b>XlListObjectSourceType</b>.</span></span> <span data-ttu-id="d2846-106">表示查询的来源类型。</span><span class="sxs-lookup"><span data-stu-id="d2846-106">Indicates the kind of source for the query.</span></span> <span data-ttu-id="d2846-107">可以是以下 <b>XlListObjectSourceType</b> 常量之一 <b>：xlSrcExternal</b> 或 <b>xlSrcRange</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-107">Can be one of the following <b>XlListObjectSourceType</b> constants: <b>xlSrcExternal</b> or <b>xlSrcRange</b>.</span></span> <span data-ttu-id="d2846-108">如果省略， <paramref name="SourceType" /> 则默认为 <b>xlSrcRange</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-108">If omitted, the <paramref name="SourceType" /> will default to <b>xlSrcRange</b>.</span></span></param>
        <param name="Source"><span data-ttu-id="d2846-109">可选时 <paramref name="SourceType" /> 为 <b>xlSrcRange</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-109">Optional when <paramref name="SourceType" /> is <b>xlSrcRange</b>.</span></span> <span data-ttu-id="d2846-110"><see cref="T:Microsoft.Office.Interop.Excel.Range" />一个代表数据源的对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-110">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the data source.</span></span> <span data-ttu-id="d2846-111">如果省略， <paramref name="Source" /> 则默认为列表范围检测代码返回的范围。</span><span class="sxs-lookup"><span data-stu-id="d2846-111">If omitted, the <paramref name="Source" /> will default to the range returned by list range detection code.</span></span> <span data-ttu-id="d2846-112">当为 <paramref name="SourceType" /> <b>xlSrcExternal 时是必需的</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-112">Required when <paramref name="SourceType" /> is <b>xlSrcExternal</b>.</span></span> <span data-ttu-id="d2846-113">指定与源的连接的 <b>String</b> 值的数组。Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</span><span class="sxs-lookup"><span data-stu-id="d2846-113">An array of <b>String</b> values specifying a connection to the source.Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</span></span></param>
        <param name="LinkSource"><span data-ttu-id="d2846-114">可选属性，类型为 <b>Boolean</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-114">Optional <b>Boolean</b>.</span></span> <span data-ttu-id="d2846-115">表示外部数据源是否链接到 <b>ListObject</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-115">Indicates whether an external data source is to be linked to the <b>ListObject</b> object.</span></span> <span data-ttu-id="d2846-116">如果 <paramref name="SourceType" /> 为 <b>xlSrcExternal</b>，则默认值 <b>为 True</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-116">If <paramref name="SourceType" /> is <b>xlSrcExternal</b>, default is <b>True</b>.</span></span> <span data-ttu-id="d2846-117">如果为 <paramref name="SourceType" /> <b>xlSrcRange，</b>则无效，如果未省略，将返回错误。</span><span class="sxs-lookup"><span data-stu-id="d2846-117">Invalid if <paramref name="SourceType" /> is <b>xlSrcRange</b>, and will return an error if not omitted.</span></span></param>
        <param name="XlListObjectHasHeaders"><span data-ttu-id="d2846-118">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-118">Optional <b>Object</b>.</span></span> <span data-ttu-id="d2846-119">一 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 个常量，指示要导入的数据是否具有列标签。</span><span class="sxs-lookup"><span data-stu-id="d2846-119">An <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constant that indicates whether the data being imported has column labels.</span></span> <span data-ttu-id="d2846-120">如果 Source 没有标题，Excel 将自动生成标题。</span><span class="sxs-lookup"><span data-stu-id="d2846-120">If the Source does not contain headers, Excel will automatically generate headers.</span></span></param>
        <param name="Destination"><span data-ttu-id="d2846-121">可选 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-121">Optional <b>Object</b>.</span></span> <span data-ttu-id="d2846-122">一个 <b>Range</b> 对象，作用是将一个单元格引用指定为新列表对象左上角的目标区域。</span><span class="sxs-lookup"><span data-stu-id="d2846-122">A <b>Range</b> object specifying a single-cell reference as the destination for the top-left corner of the new list object.</span></span> <span data-ttu-id="d2846-123">如果 <b>Range</b> 对象引用多个单元格，将生成错误。</span><span class="sxs-lookup"><span data-stu-id="d2846-123">If the <b>Range</b> object refers to more than one cell, an error is generated.</span></span> <span data-ttu-id="d2846-124">参数 <paramref name="Destination" /> 必须设置为 <paramref name="SourceType" /> <b>xlSrcExternal</b>时指定。</span><span class="sxs-lookup"><span data-stu-id="d2846-124">The <paramref name="Destination" /> argument must be specified when <paramref name="SourceType" /> is set to <b>xlSrcExternal</b>.</span></span> <span data-ttu-id="d2846-125">如果 <paramref name="Destination" /> 设置为 <paramref name="SourceType" /> <b>xlSrcRange，则忽略该参数</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-125">The <paramref name="Destination" /> argument is ignored if <paramref name="SourceType" /> is set to <b>xlSrcRange</b>.</span></span> <span data-ttu-id="d2846-126">目标区域必须位于包含指定集合的 <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> 工作表上。</span><span class="sxs-lookup"><span data-stu-id="d2846-126">The destination range must be on the worksheet that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection.</span></span> <span data-ttu-id="d2846-127">新列将插入到新列表的 <paramref name="Destination" /> 合适位置。</span><span class="sxs-lookup"><span data-stu-id="d2846-127">New columns will be inserted at the <paramref name="Destination" /> to fit the new list.</span></span> <span data-ttu-id="d2846-128">因此，现有数据不会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="d2846-128">Therefore, existing data will not be overwritten.</span></span></param>
        <summary><span data-ttu-id="d2846-129">创建新的列表对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-129">Creates a new list object.</span></span> <span data-ttu-id="d2846-130">返回一 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="d2846-131">当列表有标题时，第一行单元格将转换为 <b>Text</b>（如果还未被设为文本）。</span><span class="sxs-lookup"><span data-stu-id="d2846-131">When the list has headers, the first row of cells will be converted to <b>Text</b>, if not already set to text.</span></span> <span data-ttu-id="d2846-132">转换将基于单元格的可见文本。</span><span class="sxs-lookup"><span data-stu-id="d2846-132">The conversion will be based on the visible text for the cell.</span></span> <span data-ttu-id="d2846-133">这意味着，如果有一个日期值，该日期值的 <b>Date</b> 格式随区域设置的更改而更改，则对列表的转换可能产生不同的结果，具体取决于当前的系统区域设置。</span><span class="sxs-lookup"><span data-stu-id="d2846-133">This means that if there is a date value with a <b>Date</b> format that changes with locale, the conversion to a list might produce different results depending on the current system locale.</span></span> <span data-ttu-id="d2846-134">而且，如果标题行中有两个单元格包含相同的可见文本，则会追加递增的 <b>Integer</b> 以使每个列标题唯一。</span><span class="sxs-lookup"><span data-stu-id="d2846-134">Moreover, if there are two cells in the header row that have the same visible text, an incremental <b>Integer</b> will be appended to make each column header unique.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEx">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject AddEx (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination, object TableStyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject AddEx([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination, [in]object TableStyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEx (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object, Optional TableStyleName As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="TableStyleName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="Source">To be added.</param>
        <param name="LinkSource">To be added.</param>
        <param name="XlListObjectHasHeaders">To be added.</param>
        <param name="Destination">To be added.</param>
        <param name="TableStyleName">To be added.</param>
        <summary><span data-ttu-id="d2846-135">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="d2846-135">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2846-136">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Microsoft Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-136">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="d2846-137">只读。</span><span class="sxs-lookup"><span data-stu-id="d2846-137">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2846-138">返回集合中对象的数目。</span><span class="sxs-lookup"><span data-stu-id="d2846-138">Returns the number of objects in the collection.</span></span> <span data-ttu-id="d2846-139">只读 <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-139">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2846-140">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d2846-140">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="d2846-141">如果该对象是在 Microsoft Excel 中创建的，则此属性返回字符串 XCEL，它等同于十六进制的数字 5843454C。</span><span class="sxs-lookup"><span data-stu-id="d2846-141">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="d2846-142">只读 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 。</span><span class="sxs-lookup"><span data-stu-id="d2846-142">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d2846-143"><b>Creator</b> 属性是为 Macintosh 上的 Microsoft Excel 设计的，在 Macintosh 上，每个应用程序都具有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="d2846-143">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="d2846-144">例如，Microsoft Excel 的创建者代码为 XCEL。</span><span class="sxs-lookup"><span data-stu-id="d2846-144">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="d2846-145">必需 <b>对象</b>。</span><span class="sxs-lookup"><span data-stu-id="d2846-145">Required <b>Object</b>.</span></span> <span data-ttu-id="d2846-146">对象的名称或索引号。</span><span class="sxs-lookup"><span data-stu-id="d2846-146">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="d2846-147">从集合中返回一个对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-147">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2846-148">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="d2846-148">Returns the parent object for the specified object.</span></span> <span data-ttu-id="d2846-149">只读。</span><span class="sxs-lookup"><span data-stu-id="d2846-149">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>