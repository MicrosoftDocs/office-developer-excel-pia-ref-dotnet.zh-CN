<Type Name="CalculatedMember" FullName="Microsoft.Office.Interop.Excel.CalculatedMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dbe58948b0a319d6163ef1a376e3134b0cce7cd" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50006053" /></Metadata><TypeSignature Language="C#" Value="public interface CalculatedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMember" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024455-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b3ee0-101">对于那些具有联机分析处理 (OLAP) 数据源的数据透视表，该对象代表它们的计算字段和计算项。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-101">Represents the calculated fields and calculated items for PivotTables with Online Analytical Processing (OLAP) data sources.</span></span></summary>
    <remarks><para><span data-ttu-id="b3ee0-102">使用 <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> 集合的方法 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> 或属性 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> 可返回 <b>CalculatedMember</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-102">Use the <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> method or the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection to return a <b>CalculatedMember</b> object.</span></span></para>
      <para><span data-ttu-id="b3ee0-103">使用 <b>CalculatedMember</b> 对象，可以使用该属性检查数据透视表中计算字段或项目 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> 的有效性。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-103">With a <b>CalculatedMember</b> object you can check the validity of a calculated field or item in a PivotTable using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> property.</span></span></para>
      <para><span data-ttu-id="b3ee0-104">
        <b>注意</b> 如果数据透视表当前未连接到数据源，<b>则 IsValid</b>属性将返回<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="b3ee0-104">
        <b>Note</b>  The <b>IsValid</b> property will return <b>True</b> if the PivotTable is not currently connected to the data source.</span></span> <span data-ttu-id="b3ee0-105">在 <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> 测试 <b>IsValid 属性之前使用此方法</b> 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> method before testing the <b>IsValid</b> property.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-106">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-107">返回 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 一个代表 Excel 应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-107">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-108">返回一个 32 位整数，该整数指示在其中创建了此对象的应用程序。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-108">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-109">如果对象是在 Excel 中创建的，则此属性返回字符串 XCEL，它等效于十六进制数 5843454C。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-109">If the object was created in Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="b3ee0-110">Creator <b></b>属性旨在用于 Excel for the Macintosh，其中每个应用程序都有一个四字符的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-110">The <b>Creator</b> property is designed to be used in Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b3ee0-111">例如，Excel 具有创建者代码 XCEL。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-111">For example, Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMember.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3ee0-112">删除对象。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-112">Deletes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b3ee0-113">只有在将 <b>CalculatedMember.Add</b> 方法与参数一起使用自己创建多维数据集字段时，才能删除 <paramref name="xlCalculatedSet" /> 多维数据集字段。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-113">You can delete cube fields only if you have created the cube fields yourself by using the <b>CalculatedMember.Add</b> method with the <paramref name="xlCalculatedSet" /> argument.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFolder">
      <MemberSignature Language="C#" Value="public string DisplayFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayFolder { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-114">获取显示文件夹集的名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-114">Gets the display folder name for a named set.</span></span></summary>
        <value><span data-ttu-id="b3ee0-115">命名显示文件夹的名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-115">The display folder name for a named set.</span></span></value>
        <remarks><para><span data-ttu-id="b3ee0-116">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-116">Read-only.</span></span></para>
          <para><span data-ttu-id="b3ee0-117">此属性的值对应于创建或编辑命名集时，可以在"新建/修改集"对话框的"显示文件夹"文本框中输入的可选值。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-117">The value of this property corresponds to the optional value that can be entered in the Display folder text box of the New/Modify Set dialog box when a named set is created or edited.</span></span> <span data-ttu-id="b3ee0-118">若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请在功能区上的"数据透视表"选项卡上单击"字段"、"项目"和"设置"，单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集"。 &amp;</span><span class="sxs-lookup"><span data-stu-id="b3ee0-118">To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX.</span></span> <span data-ttu-id="b3ee0-119">这将显示“新建集合”对话框，其中包含“显示文件夹”文本框。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-119">This will display the New Set dialog box, which contains the Display folder text box.</span></span> <span data-ttu-id="b3ee0-120">同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-120">Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</span></span></para>
          <para><span data-ttu-id="b3ee0-121">对于由属性等于 (对象表示的命名集，此属性和和属性 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" />) 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-121">This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />).</span></span> <span data-ttu-id="b3ee0-122">无法读取计算成员或度量值的这些属性 (由属性等于值的对象 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" />) 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-122">These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />).</span></span> <span data-ttu-id="b3ee0-123">如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-123">If you attempt to read these properties for calculated members or measures, a run-time error is raised.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public bool Dynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-124">获取是否每次更新时重新计算指定的命名集。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-124">Gets whether the specified named set is recalculated with every update.</span></span></summary>
        <value><span data-ttu-id="b3ee0-125"><b>如此</b> 如果指定的命名集重新计算每次更新;否则为 <b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-125"><b>true</b> if the specified named set is recalculated with every update; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="b3ee0-126">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-126">Read-only.</span></span></para>
          <para><span data-ttu-id="b3ee0-127">
            <b>如此</b> 如果每次更新时重新计算命名集;否则 <b>为 false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-127">
            <b>true</b> if the named set is recalculated with every update; otherwise <b>false</b>.</span></span></para>
          <para><span data-ttu-id="b3ee0-128">此属性的值对应于创建或编辑命名集时可用的"新建/修改集"对话框中每个更新复选框的"重新计算集"设置。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-128">The value of this property corresponds to the setting of the Recalculate set with every update check box in the New/Modify Set dialog box that is available when a named set is created or edited.</span></span> <span data-ttu-id="b3ee0-129">若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请在功能区上的"数据透视表"选项卡上单击"字段"、"项目"和"设置"，单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集"。 &amp;</span><span class="sxs-lookup"><span data-stu-id="b3ee0-129">To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX.</span></span> <span data-ttu-id="b3ee0-130">这将显示“新建集合”对话框，其中包含“每次更新后重新计算集合”复选框。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-130">This will display the New Set dialog box, which contains the Recalculate set with every update check box.</span></span> <span data-ttu-id="b3ee0-131">同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-131">Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</span></span></para>
          <para><span data-ttu-id="b3ee0-132">对于由属性等于 (对象表示的命名集，此属性和和属性 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" />) 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-132">This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />).</span></span> <span data-ttu-id="b3ee0-133">无法读取计算成员或度量值的这些属性 (由属性等于值的对象 <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" />) 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-133">These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />).</span></span> <span data-ttu-id="b3ee0-134">如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-134">If you attempt to read these properties for calculated members or measures, a run-time error is raised.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchies">
      <MemberSignature Language="C#" Value="public bool FlattenHierarchies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlattenHierarchies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberSignature Language="VB.NET" Value="Public Property FlattenHierarchies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlattenHierarchies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-135">获取或设置指定命名集的层次结构的所有级别的项目是否基于数据透视表的同一字段OLAP 多维数据集。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-135">Gets or sets whether items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube.</span></span></summary>
        <value><span data-ttu-id="b3ee0-136"><b>如此</b> 如果指定的命名集的层次结构的所有级别的项目显示在基于数据透视表的数据透视表的同一OLAP 多维数据集;否则为 <b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-136"><b>true</b> if items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="b3ee0-137">读/写。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-137">Read/write.</span></span></para>
          <para><span data-ttu-id="b3ee0-138">
            <b>如此</b> 如果同一字段中显示命名集层次结构的所有级别的项目;否则 <b>为 false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-138">
            <b>true</b> if items from all levels of the hierarchy of the named set are displayed in the same field; otherwise <b>false</b>.</span></span></para>
          <para><span data-ttu-id="b3ee0-139">此属性的值对应于在创建或编辑命名集时，“新建/修改集合”对话框中“将不同级别的项目显示在单独字段中”复选框的设置。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-139">The value of this property corresponds to the setting of the Display items from different levels in separate fields check box in the New/Modify Set dialog box when a named set is created or edited.</span></span> <span data-ttu-id="b3ee0-140">若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请在功能区上的"数据透视表"选项卡上单击"字段"、"项目"和"设置"，单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集"。 &amp;</span><span class="sxs-lookup"><span data-stu-id="b3ee0-140">To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX.</span></span> <span data-ttu-id="b3ee0-141">这将显示“新建集合”对话框，其中包含“将不同级别的项目显示在单独字段中”复选框。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-141">This will display the New Set dialog box, which contains the Display items from different levels in separate fields check box.</span></span> <span data-ttu-id="b3ee0-142">同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-142">Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Formula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-143">返回成员在多维表达式中的公式 (MDX) 语法。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-143">Returns the member's formula in multidimensional expressions (MDX) syntax.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-144">此属性对于 OLAP 数据源无效。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-144">This property is not available for OLAP data sources.</span></span></para>
          <para><span data-ttu-id="b3ee0-145">如果单元格包含一个常量，此属性返回该常量。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-145">If the cell contains a constant, this property returns the constant.</span></span> <span data-ttu-id="b3ee0-146">如果单元格为空， <b>则 Formula</b> 属性返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-146">If the cell is empty, the <b>Formula</b> property returns an empty string.</span></span> <span data-ttu-id="b3ee0-147">如果单元格包含公式，<b>Formula</b> 属性将该公式作为字符串返回，所用格式与在编辑栏（包括等号）中显示时的格式相同。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-147">If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="b3ee0-p109">如果将单元格的值或者公式设置为日期类型，则 Microsoft Excel 将检查此单元格的数字格式是否符合日期或者时间格式。如果不符合，Microsoft Excel 将把数字格式设置为默认的短日期格式。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-p109">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span></span></para>
          <para><span data-ttu-id="b3ee0-150">如果区域是一维或二维区域，可以将公式设置为相同维度的数组。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-150">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="b3ee0-151">同样，可以将公式放入数组中。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-151">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="b3ee0-152">如果为多单元格区域设置公式，则会用公式填充该区域所有的单元格。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-152">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HierarchizeDistinct">
      <MemberSignature Language="C#" Value="public bool HierarchizeDistinct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HierarchizeDistinct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Property HierarchizeDistinct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HierarchizeDistinct { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-153">获取或设置在基于数据透视表的数据透视表中显示指定命名集的层次结构时是否对重复项OLAP 多维数据集。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-153">Gets or sets whether to order and remove duplicates when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube.</span></span></summary>
        <value><span data-ttu-id="b3ee0-154"><b>如此</b> 如果重复项应排序和删除时显示指定的命名集在数据透视表中基于数据透视表的层次结构OLAP 多维数据集;否则为 <b>false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-154"><b>true</b> if duplicates should be ordered and removed when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="b3ee0-155">读/写。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-155">Read/write.</span></span></para>
          <para><span data-ttu-id="b3ee0-156">
            <b>如此</b> 如果命名集的层次结构显示为有序删除重复项;否则 <b>为 false</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-156">
            <b>true</b> if the hierarchy of the named set is displayed as ordered with duplicates removed; otherwise <b>false</b>.</span></span></para>
          <para><span data-ttu-id="b3ee0-157">此属性的值对应于在创建或编辑命名集时，“新建/修改集合”对话框中的“自动排序并从集合中删除重复项”复选框。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-157">The value of this property corresponds to the Automatically order and remove duplicates from the set check box in the New/Modify Set dialog box when a named set is created or edited.</span></span> <span data-ttu-id="b3ee0-158">若要根据基于 OLAP 数据源的数据透视表中的数据创建新的命名集，请在功能区上的"数据透视表"选项卡上单击"字段"、"项目"和"设置"，单击"管理集"，在"设置管理器"对话框中单击"新建"，然后单击"使用 MDX 创建集"。 &amp;</span><span class="sxs-lookup"><span data-stu-id="b3ee0-158">To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX.</span></span> <span data-ttu-id="b3ee0-159">这将显示“新建集合”对话框，其中包含“自动排序并从集合中删除重复项”复选框。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-159">This will display the New Set dialog box, which contains the Automatically order and remove duplicates from the set check box.</span></span> <span data-ttu-id="b3ee0-160">同样，如果在“集合管理器”对话框中选择现有命名集，然后单击“编辑”，“管理集”对话框将显示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-160">Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</span></span></para>
          <para><span data-ttu-id="b3ee0-161">对于由属性等于 (对象表示的命名集，此属性和和属性 <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedSet" /> 只能) 。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-161">This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />).</span></span> <span data-ttu-id="b3ee0-162">无法读取计算成员或度量值的这些属性 (由属性等于) <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> <paramref name="xlCalculatedMember" /> 的对象表示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-162">These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />).</span></span> <span data-ttu-id="b3ee0-163">如果试图对计算成员或度量值读取这些属性，那么将引发运行时错误。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-163">If you attempt to read these properties for calculated members or measures, a run-time error is raised.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-164">返回一 <b>个boolean</b> 值 ，指示指定的计算成员是否已在当前会话期间成功实例化 OLAP 提供程序。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-164">Returns a <b>Boolean</b> that indicates whether the specified calculated member has been successfully instantiated with the OLAP provider during the current session.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-165">即使数据透视表未与其数据源相连，该属性也返回 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-165">This property returns <b>True</b> even if the PivotTable is not connected to its data source.</span></span> <span data-ttu-id="b3ee0-166">在查询 <b>IsValid</b> 属性的值之前，必须保证数据透视表与其数据源相连。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-166">Make sure that the PivotTable is connected before querying the value of the <b>IsValid</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureGroup">
      <MemberSignature Language="C#" Value="public string MeasureGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeasureGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.MeasureGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasureGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MeasureGroup { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-167">返回关联的度量值组。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-167">Returns the associated measure group.</span></span> <span data-ttu-id="b3ee0-168">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-168">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-169">返回的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-169">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormat As XlCalcMemNumberFormatType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType NumberFormat { Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-170">返回 <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> 一个值，该值代表计算成员的数量格式。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-170">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> value that represents the number format of the calculated member.</span></span> <span data-ttu-id="b3ee0-171">默认值为 <b>xlNumberFormatTypeDefault</b>。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-171">The default value is <b>xlNumberFormatTypeDefault</b>.</span></span> <span data-ttu-id="b3ee0-172">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-172">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-173">返回指定对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-173">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentHierarchy">
      <MemberSignature Language="C#" Value="public string ParentHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentHierarchy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentHierarchy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentHierarchy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-174">从多维数据集上可用的层次结构中返回当前父层次结构的名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-174">Returns the name of the current parent hierarchy from the hierarchies that are available on the cube.</span></span> <span data-ttu-id="b3ee0-175">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-175">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentMember">
      <MemberSignature Language="C#" Value="public string ParentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentMember { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-176">返回父层次结构的父成员的名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-176">Returns the name of the parent member for the parent hierarchy.</span></span> <span data-ttu-id="b3ee0-177">只读。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-177">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-178">默认父成员由多维数据集设计器或作为选定层次结构的默认成员Analysis Services定义的任何内容确定。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-178">The default parent member is determined by whatever has been defined by the cube designer or Analysis Services as the default member of the selected hierarchy.</span></span> <span data-ttu-id="b3ee0-179">例如，如果所选层次结构中存在"All"成员，则这通常是多维数据集上的默认父成员。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-179">For example, if an “All” member exists for the selected hierarchy, then this is typically the default parent member on the cube.</span></span></para>
          <para><span data-ttu-id="b3ee0-180">如果选定的父层次结构没有"All"父成员，则多维数据集设计器或由父层次结构以编程方式定义另一个默认父Analysis Services。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-180">If the selected parent hierarchy does not have an “All” parent member, another default parent member is defined, either by the cube designer or programmatically by Analysis Services.</span></span> <span data-ttu-id="b3ee0-181"> (如果多维数据集设计器未指定默认成员，则Analysis Services引擎会自动定义一个.) </span><span class="sxs-lookup"><span data-stu-id="b3ee0-181">(If a default member is not specified by the cube designer, the Analysis Services engine automatically defines one.)</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SolveOrder">
      <MemberSignature Language="C#" Value="public int SolveOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SolveOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SolveOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SolveOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SolveOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-182">返回一 <b>个</b> Integer 类型的值，该值指定计算成员求解顺序 MDX (多维表达式) 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-182">Returns an <b>Integer</b> specifying the value of the calculated member's solve order MDX (multidimensional expression) argument.</span></span> <span data-ttu-id="b3ee0-183">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-183">The default value is zero.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-184">返回指定对象的名称，因为它显示在指定数据透视表的原始源数据中。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-184">Returns the specified object’s name as it appears in the original source data for the specified PivotTable report.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-185">如果用户在创建数据透视表后重命名项目，则 <b>SourceName</b> 属性可能不同于当前项目名称。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-185">The <b>SourceName</b> property might be different from the current item name if the user renamed the item after creating the PivotTable report.</span></span></para>
          <para><span data-ttu-id="b3ee0-186">下表显示了给定<a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a>的<b>SourceName</b>属性和相关属性的示例值</span><span class="sxs-lookup"><span data-stu-id="b3ee0-186">The following table shows example values of the <b>SourceName</b> property and related properties, given an <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a></span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b3ee0-187">
                <b>标题</b>
              </span><span class="sxs-lookup"><span data-stu-id="b3ee0-187">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="b3ee0-188">巴黎</span><span class="sxs-lookup"><span data-stu-id="b3ee0-188">Paris</span></span></description>
              <description><span data-ttu-id="b3ee0-189">巴黎</span><span class="sxs-lookup"><span data-stu-id="b3ee0-189">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b3ee0-190">
                <b>名称</b>
              </span><span class="sxs-lookup"><span data-stu-id="b3ee0-190">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="b3ee0-191">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="b3ee0-191">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b3ee0-192">巴黎</span><span class="sxs-lookup"><span data-stu-id="b3ee0-192">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b3ee0-193">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="b3ee0-193">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="b3ee0-194">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="b3ee0-194">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b3ee0-195">（与 SQL 属性值相同，只读）</span><span class="sxs-lookup"><span data-stu-id="b3ee0-195">(same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b3ee0-196">
                <b>值</b>
              </span><span class="sxs-lookup"><span data-stu-id="b3ee0-196">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="b3ee0-197">[Europe].[France].[Paris]（只读）</span><span class="sxs-lookup"><span data-stu-id="b3ee0-197">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b3ee0-198">巴黎</span><span class="sxs-lookup"><span data-stu-id="b3ee0-198">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="b3ee0-199">在集合中指定索引时，可以使用 <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 下表中所示的语法。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-199">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b3ee0-200">表达式。PivotItems ("[Europe]。[法国]。[Paris]") </span><span class="sxs-lookup"><span data-stu-id="b3ee0-200">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="b3ee0-201">表达式。PivotItems ("Paris") </span><span class="sxs-lookup"><span data-stu-id="b3ee0-201">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="b3ee0-202">使用该属性引用集合的特定成员时，可以使用文本索引名称， <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> 如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-202">When using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index names, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b3ee0-203">[欧洲]。[法国]。[巴黎]</span><span class="sxs-lookup"><span data-stu-id="b3ee0-203">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="b3ee0-204">巴黎</span><span class="sxs-lookup"><span data-stu-id="b3ee0-204">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlCalculatedMemberType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculatedMemberType Type { Microsoft::Office::Interop::Excel::XlCalculatedMemberType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculatedMemberType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3ee0-205">返回计算成员类型。</span><span class="sxs-lookup"><span data-stu-id="b3ee0-205">Returns the calculated member type.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b3ee0-206">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" /> 可以是以下 <b>XlCalculatedMemberType</b> 常量之一：</span><span class="sxs-lookup"><span data-stu-id="b3ee0-206">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" /> can be one of these <b>XlCalculatedMemberType</b> constants:</span></span></para>
          <para><span data-ttu-id="b3ee0-207">
            <b>xlCalculatedMember</b>
          </span><span class="sxs-lookup"><span data-stu-id="b3ee0-207">
            <b>xlCalculatedMember</b>
          </span></span></para>
          <para><span data-ttu-id="b3ee0-208">
            <b>xlCalculatedSet</b>
          </span><span class="sxs-lookup"><span data-stu-id="b3ee0-208">
            <b>xlCalculatedSet</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>